(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(t,e,n){t.exports=n.p+"88d695cff4c498d976d7b66d57fe6995.png"},28:function(t,e,n){"use strict";n.r(e);var i=n(0),a=n.n(i);n(8);class s{constructor(t,e,n,i){this.ID=t,this.name=e,this.chips=n,this.cards=[],this.game=i,this.status="active",this.isHuman=!1,this.bet=[0],this.cardRank,this.cardEval,this.bettingPot=[],this.forcedFold=!1}addChips(t){this.chips+=t}removeChips(t){this.chips-=t}addCard(t){this.cards.push(t)}Check(){this.status="checked",this.game.advanceTurn()}get betCount(){return this.bet[this.game.activePot]?this.bet[this.game.activePot]:0}Raise(t){if(this.chips<t)return!1;if(this.bet[this.game.activePot]=this.bet[this.game.activePot]?this.bet[this.game.activePot]:0,this.bet[this.game.activePot]+=t,this.game.didSomeoneAllIn){let e=this.game.playerList.filter(t=>t.ID!==this.ID&&"folded"!==t.status).sort((t,e)=>e-t)[0];if(e&&t<=e.chips){if(this.game.pot.length>2)return this.bet[this.game.activePot]-=t,!1;this.game.createSidePot(),this.game.raiseAmounts[this.game.activePot]={pot:this.game.activePot,raiseAmount:Math.abs(t-(this.game.raiseAmounts[this.game.activePot-1].raiseAmount-this.bet[this.game.activePot-1])),debtamount:-1}}}return-1===this.bettingPot.indexOf(this.game.activePot)&&this.bettingPot.push(this.game.activePot),this.game.pot[this.game.activePot]+=t,this.removeChips(t),0===this.chips?(this.status="All-In",this.didRaiseAllIn=!0,this.game.didSomeoneAllIn=!0):this.status="raised",this.game.subRoundStatus="raised",this.game.advanceTurn(),!0}Call(t,e,n){let i=!1;if(i=!n,0===(n=n||this.game.raiseAmounts.filter(t=>void 0!==t&&(this.bettingPot.indexOf(t.pot)>-1||t.pot===this.game.activePot)).sort((t,e)=>e.pot-t.pot)).length)return!1;let a=n[0];n.shift();let s=this.Call(t,e,n);if(this.forcedFold)return!1;if(0==this.chips&&!s)return this.bettingPot=this.bettingPot.filter(t=>t!=a.pot),this.game.advanceTurn(),"All-In"===this.status&&!e;this.bet[a.pot]=this.bet[a.pot]?this.bet[a.pot]:0;let o=a.raiseAmount-this.bet[a.pot];if(0==o)return!0;if(0===this.chips)return!1;if(e&&this.chips<=o)return!1;if(this.chips>=o)this.bet[a.pot]+=o,this.game.pot[a.pot]+=o,this.removeChips(o),-1===this.bettingPot.indexOf(a.pot)&&this.bettingPot.push(a.pot);else if(a.debtamount!=o-this.chips){this.game.pot[a.pot]+=this.chips,this.game.pot[a.pot]-=o-this.chips;let t=-1===this.bettingPot.indexOf(a.pot);if(-1===this.bettingPot.indexOf(a.pot)&&this.bettingPot.push(a.pot),this.game.pot.length>2){if(this.game.pot[a.pot]-=this.chips,this.game.pot[a.pot]+=o-this.chips,this.forcedFold=!0,t){let t=this.bettingPot.indexOf(a.pot);this.bettingPot.splice(t,1)}return!1}this.game.createSidePot(),this.game.raiseAmounts[this.game.activePot]={pot:this.game.activePot,raiseAmount:o-this.chips,debtamount:o-this.chips},this.game.pot[this.game.activePot]+=o-this.chips,this.removeChips(this.chips)}else this.game.pot[a.pot]+=this.chips,-1===this.bettingPot.indexOf(a.pot)&&this.bettingPot.push(a.pot),this.removeChips(this.chips);return this.chips<1?(this.status="All-In",a.pot==this.game.activePot&&(this.game.didSomeoneAllIn=!0)):this.status="called",i&&this.game.advanceTurn(),!0}Fold(){this.status="folded",this.game.advanceTurn()}}class o extends s{constructor(t,e,n,i){super(t,e,n,i),this.isHuman=!0}}var r=n(7);n(16);const{rankBoard:h,rankDescription:l,rankCards:d,evaluateCards:c}=n(19);class p{constructor(t,e){this.playerCount=t,this.playerList=[],this.initialChips=e,this.round=0,this.turn=0,this.pot=[0],this.activePot=0,this.didSomeoneAllIn=!1,this.cards=[],this.createCardList(),this.humanPlayer,this.playerTurn=[],this.subRound=0,this.subRoundStatus="active",this.winner=0,this.didSomeoneRaise=!1,this.running=!1,this.shouldStopRunning=!1,this.debtPotCreated=0,this.playerFirstSidepot=-1,this.raiseAmounts=[{pot:0,raiseAmount:0,debtamount:-1}]}get Players(){return this.playerList}addPlayer(t){this.playerList.push(t)}getPlayerById(t){for(const e of this.playerList)if(e.ID==t)return e;return!1}InitialChips(){return this.initialChips}get Round(){return this.round}incrementRound(){this.round++,this.resetTurn()}get Turn(){return this.turn}advanceTurn(){this.turn<this.playerCount?this.turn++:this.turn=0}resetTurn(){this.turn=0}get Pot(){return this.pot[this.activePot]}addToPot(t){this.pot[this.activePot]+=t}resetPot(){this.pot=[0]}createSidePot(){this.debtPotCreated&&(this.debtPotCreated=0),this.activePot++,this.pot.push(0),this.didSomeoneAllIn=!1}resetCards(){this.cards=[]}dealCards(){this.removeAllPlayerCards(),this.shuffleCardList();for(let t=0;t<2;t++)for(let t=0;t<this.playerList.length;t++)this.dealCardToPlayer(this.playerList[t])}async dealFlopCards(){for(let t=0;t<3;t++)this.dealCardToTable(this.cardList,this.cards),a()("#board").children(".tablecard:nth-of-type("+[t+1]+")").children("img").attr("src","cards/"+this.cards[t].toUpperCase()+".png").attr("alt",u.cards[t]).css("visibility","visible"),await this.timeout(500)}dealTurnCard(){this.dealCardToTable(this.cardList,this.cards),a()("#board").children(".tablecard:nth-of-type(4)").children("img").attr("src","cards/"+this.cards[3].toUpperCase()+".png").attr("alt",u.cards[3]).css("visibility","visible")}dealRiverCard(){this.dealCardToTable(this.cardList,this.cards),a()("#board").children(".tablecard:nth-of-type(5)").children("img").attr("src","cards/"+this.cards[4].toUpperCase()+".png").attr("alt",u.cards[4]).css("visibility","visible")}removeAllPlayerCards(){for(let t of this.playerList)t.cards=[],this.updateDisplay(t)}dealCardToTable(){this.cards.push(this.cardList[0]),this.cardList.shift()}dealCardToPlayer(t){t.cards.push(this.cardList[0]),this.cardList.shift()}shuffleCardList(){let t=this.cardList;for(let e=0;e<this.cardList.length;e++){let n=Math.floor(Math.random()*t.length);this.cardList[e]=t[n],n>-1&&t.splice(n,1)}}createCardList(){let t=["A","2","3","4","5","6","7","8","9","T","J","Q","K"],e=["c","d","h","s"];this.cardList=[];for(let n=0;n<4;n++)for(let i=0;i<13;i++){let a=t[i]+e[n];this.cardList.push(a)}}getHumanPlayer(){for(player of playerlist)this.player.isHuman&&(this.humanPlayer=this.player)}playerCheck(){this.didSomeoneRaise||this.humanPlayer.betCount!=this.raiseAmounts[this.activePot].raiseAmount||(this.humanPlayer.Check(),this.advanceTurn())}playerCall(t=!1){return this.humanPlayer.Call(this.raiseAmounts[this.activePot].raiseAmount,t)?(this.advanceTurn(),!0):(alert("You cannot call this bet, you need more chips."),!1)}playerFold(){this.humanPlayer.Fold(),this.advanceTurn()}playerRaise(t){if(this.humanPlayer.betCount!=this.raiseAmounts[this.activePot].raiseAmount){if(!this.playerCall(t,!0))return alert("You cannot raise now, you need more chips."),!1;let e=this.raiseAmounts[this.activePot].raiseAmount,n=t+this.raiseAmounts[this.activePot].raiseAmount;return this.raiseAmounts[this.activePot].raiseAmount=n,this.humanPlayer.Raise(t)?(this.didSomeoneRaise=this.humanPlayer,!0):(this.raiseAmounts[this.activePot].raiseAmount=e,alert("You cannot raise now, you need more chips."),!1)}{let e=this.raiseAmounts[this.activePot].raiseAmount,n=t+this.raiseAmounts[this.activePot].raiseAmount;return this.raiseAmounts[this.activePot].raiseAmount=n,this.humanPlayer.Raise(t)?(this.didSomeoneRaise=this.humanPlayer,!0):(this.raiseAmounts[this.activePot].raiseAmount=e,alert("You cannot raise now, you need more chips."),!1)}}async simulateRounds(){for(let t=0;t<2;t++)if(0==this.subRound||1==this.subRound&&this.didSomeoneRaise||2==this.subRound){for(let t of this.playerList){if(this.playerList.filter(e=>("folded"==e.status||"out"==e.status)&&e!=t).length==this.playerList.length-1){if(this.winner=t,this.winner==this.humanPlayer){let t=JSON.parse(window.localStorage.getItem("roundsWon"))+1;window.localStorage.setItem("roundsWon",t),alert("Don't cheat.")}return this.winner.addChips(this.Pot),this.resetPot(),a()("#seat"+this.winner.ID).addClass("winner"),a()("#right-sidebar").children("h3").text("Winner"),a()("#card-evaluation").children("p").text("The winner is "+this.winner.name+", who won because everyone else folded"),this.updateDisplay(this.winner),this.checkFinalWinner()}t.isHuman||"folded"==t.status||"out"==t.status||"All-In"==t.status?t.isHuman&&"folded"!=t.status&&"out"!=t.status&&"All-In"!=t.status&&(this.didSomeoneRaise&&this.didSomeoneRaise!=this.humanPlayer?(a()(".control-button:nth-of-type(1)").css("visibility","hidden"),a()(".control-button:nth-of-type(2)").css("visibility","visible")):(a()(".control-button:nth-of-type(1)").css("visibility","visible"),a()(".control-button:nth-of-type(2)").css("visibility","hidden")),0!=this.subRound||0==t.chips?a()(".control-button:nth-of-type(3)").css("visibility","hidden"):a()(".control-button:nth-of-type(3)").css("visibility","visible"),a()("#seat"+t.ID).addClass("active"),a()("#controls").children(".control-button").removeClass("inactive"),this.humanPlayer=t,await this.playerFinished(),this.updateDisplay(t),a()("#seat"+t.ID).removeClass("active"),a()("#controls").children(".control-button").addClass("inactive")):(a()("#seat"+t.ID).addClass("active"),await this.timeout(b(500,4e3)),this.checkStatus(t),this.updateDisplay(t),a()("#seat"+t.ID).removeClass("active"))}this.subRound++}else this.subRound=0,this.didSomeoneRaise=!1,this.resetRaises(),this.subRoundStatus="active";if(this.resetRaises(),this.subRound=0,this.subRoundStatus="active",this.didSomeoneRaise=!1,this.incrementRound(),1==this.round)this.dealFlopCards(),await this.timeout(3e3),this.evaluatePlayerCards();else if(2==this.round)this.dealTurnCard(),await this.timeout(2e3),this.evaluatePlayerCards();else if(3==this.round)this.dealRiverCard(),await this.timeout(2e3),this.evaluatePlayerCards();else if(4==this.round)return this.evaluateWinner(),!0;return!1}checkStatus(t){if(t.chips>=0&&"folded"!=t.status)switch(this.simulatePlayer(t),t.status){case"All-In":t.didRaiseAllIn&&(this.didSomeoneRaise=!0);break;case"called":break;case"raised":this.didSomeoneRaise=t}return this.didSomeoneRaise}simulatePlayer(t){-1!==this.playerFirstSidepot&&this.playerFirstSidepot===t.ID&&(this.playerFirstSidepot=-1);let e=!1,n=this.didSomeoneRaise;0==this.subRound?(n&&"raised"===n.status&&n.ID!=t.ID&&(e=n),this.doRandomPlayerAction(t,e)):(n&&("raised"===n.status&&n.ID!=t.ID?e=n:"raised"!=n.status&&n!=t&&(e=!1)),this.doSubRoundPlayerAction(t,e))}doRandomPlayerAction(t,e){if(this.playerList.filter(e=>("folded"==e.status||"out"==e.status)&&e!=t).length===this.playerList.length-1)return t.Check();switch(b(0,6)){case 0:case 1:case 2:case 3:if(!e&&t.betCount==this.raiseAmounts[this.activePot].raiseAmount)return t.Check();if(!t.Call(this.raiseAmounts[this.activePot].raiseAmount))return t.Fold();break;case 4:case 5:case 6:if(e&&t.betCount!=this.raiseAmounts[this.activePot].raiseAmount&&!t.isHuman){let n=this.raiseAmounts[this.activePot].raiseAmount,i=b(Math.round(1),t.betCount==n?t.chips:t.betCount<n?!(t.chips-(n-t.betCount)<=0)&&t.chips-(n-t.betCount):t.betCount-n);if(!t.Call(n,!0))return this.doRandomPlayerAction(t,e);if(this.raiseAmounts[this.activePot].raiseAmount=i+n,isNaN(i),!t.Raise(i))return this.raiseAmounts[this.activePot].raiseAmount=n,this.doRandomPlayerAction(t,e);break}{let n=this.raiseAmounts[this.activePot].raiseAmount,i=b(Math.round(1),t.betCount==n?t.chips:t.betCount<n?!(t.chips-(n-t.betCount)<=0)&&t.chips-(n-t.betCount):t.betCount-n);if(0==i)return this.doRandomPlayerAction(t,e);if(this.raiseAmounts[this.activePot].raiseAmount=i+n,!t.Raise(i))return this.raiseAmounts[this.activePot].raiseAmount=n,this.doRandomPlayerAction(t,e);break}}}doSubRoundPlayerAction(t,e){if(this.playerList.filter(e=>("folded"==e.status||"out"==e.status)&&e!=t).length===this.playerList.length-1)return t.Check();if(e.bet!=t.betCount)switch(b(0,6)){case 0:case 1:case 2:case 3:case 4:if(!e&&t.betCount==this.raiseAmounts[this.activePot].raiseAmount)return t.Check();if(!t.Call(this.raiseAmounts[this.activePot].raiseAmount))return t.Fold();break;case 5:case 6:t.Fold()}}playerDisplay(){for(let t of this.playerList)a()("#seat"+t.ID).css("visibility","visible"),a()("#seat"+t.ID).children(".playerinfo").children(".name").text("Name: "+t.name),a()("#seat"+t.ID).children(".playerinfo").children(".chips").children("p").text("Chips: "+t.chips)}updateDisplay(t){if(t instanceof s){let e="#seat",n=t;if(a()(e+n.ID).children(".playerinfo").children(".chips").text("Chips: "+n.chips),a()(e+n.ID).children(".playerinfo").children(".status").text(n.status),a()("#main-pot").text("Main pot: "+this.pot[0]),a()("#side-pot").text(""),this.pot.length>1)for(let t=1;t<this.pot.length;t++)a()("#side-pot").append("Side pot "+t+": "+this.pot[t]+"<br>");if("active"==n.status&&n.isHuman&&a()(e+n.ID).removeClass("folded"),n.isHuman){let t=JSON.parse(window.localStorage.getItem("numOfGames")),e=JSON.parse(window.localStorage.getItem("numOfRounds")),n=JSON.parse(window.localStorage.getItem("numOfWins")),i=Math.round(n/t*100);Number.isNaN(i)&&(i=0),a()("#left-sidebar").children(".player-record").children("#games-played").text("Games played: "+t),a()("#left-sidebar").children(".player-record").children("#rounds-played").text("Rounds played: "+e),a()("#left-sidebar").children(".player-record").children("#rounds-won").text("Rounds Won: "+JSON.parse(window.localStorage.getItem("roundsWon"))),a()("#left-sidebar").children(".player-record").children("#games-won").text("Number of Wins: "+n),a()("#left-sidebar").children(".player-record").children("#profit").text("Total Profit: "+JSON.parse(window.localStorage.getItem("profitAmount"))),a()("#left-sidebar").children(".player-record").children("#win-rate").text("Win Rate: "+i+"%")}"folded"==n.status?(a()(e+n.ID).addClass("folded"),a()(e+n.ID).children(".card1").children("img").attr("src","cards/gray_back.png"),a()(e+n.ID).children(".card2").children("img").attr("src","cards/gray_back.png")):"active"!=n.status||n.isHuman||(a()(e+n.ID).removeClass("folded"),a()(e+n.ID).children(".card1").children("img").attr("src","cards/purple_back.png"),a()(e+n.ID).children(".card2").children("img").attr("src","cards/purple_back.png"))}"reset"==t&&(a()("#board").children(".tablecard").children("img").css("visibility","hidden"),a()("#pot").css("visibility","hidden"),a()(".player").css("visibility","hidden"),a()("#card-evaluation").children("p").text(""),a()("#Call").text("Call"),a()(".player").removeClass("active"),a()(".winner").removeClass("winner"),a()("control-button").css("visibility","visible"))}resetRaises(){for(let t of this.playerList)t.chips>0&&("raised"==t.status||"matched"==t.status||"checked"==t.status)&&(t.status="active")}playerFinished(){return new Promise(t=>{this.humanPlayer.betCount!=this.raiseAmounts[this.activePot].raiseAmount?a()("#RaiseAmount").attr("max",Math.abs(this.raiseAmounts[this.activePot].raiseAmount-this.humanPlayer.chips)):a()("#RaiseAmount").attr("max",this.humanPlayer.chips),a()("#Call").text("Call "+(this.raiseAmounts[this.activePot].raiseAmount-this.humanPlayer.betCount)),a()("#Check").unbind(),a()("#Call").unbind(),a()("#Raise").unbind(),a()("#Fold").unbind(),a()("#Check").click(()=>{this.playerCheck(),t()}),a()("#Call").click(()=>{this.playerCall()&&t()}),a()("#Raise").click(()=>{this.playerRaise(parseInt(a()("#RaiseAmount").val()))&&t()}),a()("#Fold").click(()=>{this.playerFold(),t()})})}timeout(t){return new Promise(e=>setTimeout(e,t))}evaluatePlayerCards(){const t=this.cards.join(" ")+" "+this.humanPlayer.cards[0]+" "+this.humanPlayer.cards[1],e=h(t),n=l[e];"folded"!=this.humanPlayer.status&&"out"!=this.humanPlayer.status?(a()("#card-evaluation").children("p").text("Combined with the cards on the table, you have "+n+". "),"A Pair"==n?(a()("#card-evaluation").children("p").append("<p>With a pair, there is a low chance of you having a winning hand. The higher the pair is, the stronger the chance of winning (e.g. a pair of Jacks vs a pair of 2s).</p><p>If you have a pair with the table, and someone else also has this pair, whoever has the highest other card in their hand wins (e.g. both players have a pair of Kings, one has a 3, and the other has a 5, the player with a 5 wins), otherwise the pot is split between the winners.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 85% 0 0)")):"Two Pairs"==n?(a()("#card-evaluation").children("p").append("<p>With two pairs, you have a higher chance of winning than a single pair, but is still a very low chance. Like a pair, the higher each pair is, the stronger the chance of winning (e.g. a pair of Jacks vs a pair of 2s).</p><p>If in the small chance someone else also has two pairs, the player with the highest cards wins, or if both pairs are the same, the winners split the pot.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 75% 0 0)")):"Three of a Kind"==n?(a()("#card-evaluation").children("p").append("<p>You have a moderate hand. A three of a kind is stronger than a pair.</p><p>It is worth noting that the higher your three-of-a-kind hand is, the more likely you are to win.</p><p>If there is a pair on the table, bear in mind someone else could have a three of a kind too, and whoever has the highest other card in their hand will win the pot.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 60% 0 0)")):"Four of a Kind"==n?(a()("#card-evaluation").children("p").append("<p>You have a very strong hand, which you are very likely to win with.</p><p>A four of a kind is the third strongest hand. Another player can only beat your hand if they also have a four of a kind (with other, higher cards), if they have a straight flush, or a royal flush.</p><p>Based off other player's actions, you could raise here to yeild more of a winning, or you could check/call dependant on how confident you are you have the winning hand.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 15% 0 0)")):"A Straight"==n?(a()("#card-evaluation").children("p").append("<p>You have an OK hand. A straight is when all cards follow on numerically from each other, e.g. 4, 5, 6, 7, 8, or 9, 10, J, Q, K.</p><p>A straight is stronger than three of a kind and two pair, but bear in mind, others can also have a straight.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 50% 0 0)")):"A High Card"==n?(a()("#card-evaluation").children("p").append("<p>You have the worst hand possible. You should not raise or call others' raises unless you are planning on bluffing.</p><p>If someone else calls your bluff, and also has only a high card, whoever has the highest cards wins, the highest single card being an Ace.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 95% 0 0)")):"A Flush"==n?(a()("#card-evaluation").children("p").append("<p>You have a good hand. A flush is stronger than a straight.</p><p>A flush is where all cards are the same suit.</p><p>Another player can also have a flush, and whoever has the highest cards in their hand to make up the flush wins.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 40% 0 0)")):"A Full House"==n?(a()("#card-evaluation").children("p").append("<p>You have a great hand. A full house is stronger than a flush.</p><p>A full house is a combination of three of a kind and a pair. E.g. Three Aces and Two Sixes.</p><p>If there is a three of a kind on the table, it is possible another player could have a pair, which could be stronger than yours.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 25% 0 0)")):"A Straight Flush"!=n||t.includes("A")&&t.includes("J")&&t.includes("Q")&&t.includes("K")&&t.includes("T")?"A Straight Flush"==n&&t.includes("A")&&t.includes("J")&&t.includes("Q")&&t.includes("K")&&t.includes("T")&&(a()("#card-evaluation").children("p").text("With the cards on the table, you have a Royal Flush!"),a()("#card-evaluation").children("p").append("<p>You have the strongest hand in the game, play as you please!</p><p>You should probably raise to increase your possible winnings.</p><p>Bear in mind, playing too aggressively may cause other players to fold too early.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 100% 0 0)")):(a()("#card-evaluation").children("p").append("<p>You have an extremely strong hand. A straight flush is the second strongest hand in the game.</p><p>You could raise in this situation to increase your potential profit.</p>"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 5% 0 0)"))):"out"!=this.humanPlayer.status&&(a()("#card-evaluation").children("p").text("Combined with the cards on the table, you had "+n+". "),"A Pair"==n?a()("#card-evaluation").children("p").append("<p>With a pair, there is a low chance of you having a winning hand. You probably made a good call by folding here, as it's quite possible other players have a stronger hand.</p>"):"Two Pairs"==n?a()("#card-evaluation").children("p").append("<p>With two pairs, you had a higher chance of winning than a single pair, but is still a very low chance. This, however, dependant upon the rest of the table cards, could have been a winning hand. If you had a two pair, where one of the pairs is on the table, and yours is a low valued pair, you probably made the right decision here.</p>"):"A Three of a Kind"==n?a()("#card-evaluation").children("p").append("<p>You had a moderate hand. A three of a kind is much stronger than a pair.</p><p>It's possible you made a bad call, but sometimes bluffing is also a good idea, so don't let it discourage you!</p>"):"A Four of a Kind"==n?a()("#card-evaluation").children("p").append("<p>You had a very strong hand, which you were very likely to win with.</p><p>If someone else raised and you got scared, sometimes it's best to call their bets, and sometimes fold if you are not confident. Try to vary your playstyle.</p>"):"A Straight"==n?a()("#card-evaluation").children("p").append("<p>You had an OK hand.</p><p>You may have not realised you could have a straight, sometimes it's best to be patient, and maybe call a raise dependant on how big it is and your current chip count.</p><p>It's possible you made a bad call, but sometimes bluffing is also a good idea, so don't let it discourage you!</p>"):"A High Card"==n?a()("#card-evaluation").children("p").append("<p>You had the worst hand possible. Folding here was probably a great idea. But don't forget, you can bluff every now and then too and win with a high card!</p><p>The less amount of opponents you have in the game, the more likelihood you will win with a high card!</p>"):"A Flush"==n?a()("#card-evaluation").children("p").append("<p>You had a good hand. A flush is stronger than a straight.</p><p>Sometimes it's best to be patient, and maybe call a raise dependant on how big it is and your current chip count.</p><p>It's possible you made a bad call, but sometimes bluffing is also a good idea, so don't let it discourage you!</p>"):"A Full House"==n?a()("#card-evaluation").children("p").append("<p>You had a great hand. A full house is stronger than a flush.</p><p>Sometimes it's best to be patient, and maybe call a raise dependant on how big it is and your current chip count.</p><p>It's possible you made a bad call, but sometimes bluffing is also a good idea, so don't let it discourage you!</p>"):"A Straight Flush"!=n||t.includes("A")&&t.includes("J")&&t.includes("Q")&&t.includes("K")&&t.includes("T")?"A Straight Flush"==n&&t.includes("A")&&t.includes("J")&&t.includes("Q")&&t.includes("K")&&t.includes("T")&&(a()("#card-evaluation").children("p").text("With the cards on the table, you had a Royal Flush!"),a()("#card-evaluation").children("p").append("<p>You had the strongest hand in the game. Sorry to tell you, but you would have won this hand with 100% certainty.</p><p>Watch out for this combination or a similar one in future! (check the poker hands button below)</p>")):a()("#card-evaluation").children("p").append("<p>You had an extremely strong hand. A straight flush is the second strongest hand in the game. It's extremely likely you would have won this hand.</p><p>Sometimes it's best to be patient, and maybe call a raise dependant on how big it is and your current chip count.</p><p>It's possible you made a bad call, but sometimes bluffing is also a good idea, so don't let it discourage you!</p>"))}evaluateWinner(){let t=[];for(let e of this.playerList)if("folded"!=e.status){g(e.cards,"seat"+e.ID.toString(),"card");let n=this.cards.concat(e.cards),i=c(n),a=d(n),s=l[a];e.cardRank=i,e.cardEval=s,e.bettingPot.forEach(n=>t.push([e.ID,e.cardRank,e.cardEval,n]))}let e=[];if(t=t.sort((t,e)=>t[1]-e[1]),t.forEach(t=>{e[t[3]]||(e[t[3]]=[]),e[t[3]].push(t)}),e=e.map(t=>t.filter(e=>t[0][1]===e[1])),1===e.filter(t=>t&&t.length>0).reduce((t,e)=>0===t.length?e:t.concat(e)).length){let t=e[0][0][3];if(e=this.getPlayerById(e[0][0][0]),e==this.humanPlayer){let t=JSON.parse(window.localStorage.getItem("roundsWon"))+1;window.localStorage.setItem("roundsWon",t)}a()("#seat"+e.ID).addClass("winner"),a()("#right-sidebar").children("h3").text("Winner"),a()("#card-evaluation").children("p").text("The winner is "+e.name+", who won with "+e.cardEval),e.addChips(this.pot[t]),this.winner=e,this.resetPot(),this.updateDisplay(e)}else{a()("#right-sidebar").children("h3").text("Winners"),a()("#card-evaluation").children("p").text("The winners are ");for(let t=0;t<e.length;t++){let n=e[t],i=Math.floor(this.pot[t]/n.length);for(let t=0;t<n.length;t++){let e=this.getPlayerById(n[t][0]);if(e==this.humanPlayer){let t=JSON.parse(window.localStorage.getItem("roundsWon"))+1;window.localStorage.setItem("roundsWon",t)}a()("#seat"+e.ID).addClass("winner"),e.addChips(i),a()("#card-evaluation").children("p").append(e.name+" who won "+i+", with ",e.cardEval," and "),this.updateDisplay(e)}}a()("#card-evaluation").children("p").append("."),this.resetPot()}this.checkFinalWinner()}async checkFinalWinner(){if(u.playerList=u.playerList.filter(t=>{if(t.isHuman&&"out"!==t.status&&"folded"!==t.status){let t=JSON.parse(window.localStorage.getItem("numOfRounds"))+1;window.localStorage.setItem("numOfRounds",t)}if(t.chips<=0&&t!=this.winner){if(t.status="out",t.isHuman){let t=JSON.parse(window.localStorage.getItem("numOfGames"))+1;window.localStorage.setItem("numOfGames",t),this.updateDisplay(this.humanPlayer)}return!1}return t.status="active",!0}),1===this.playerList.length){if(a()("#right-sidebar").children("h3").text("Final Winner"),a()("#card-evaluation").children("p").text("The final winner is "+this.winner.name+"!"),this.winner===this.humanPlayer){let t=JSON.parse(window.localStorage.getItem("numOfGames"))+1;window.localStorage.setItem("numOfGames",t),this.humanPlayer.wins++;let e=JSON.parse(window.localStorage.getItem("profitAmount"))+this.humanPlayer.chips;window.localStorage.setItem("profitAmount",e);let n=JSON.parse(window.localStorage.getItem("numOfWins"))+1;window.localStorage.setItem("numOfWins",n)}return this.updateDisplay(this.humanPlayer),void this.stopGame()}return await this.timeout(5e3),this.freshGame(),new Promise(t=>t(!1))}freshGame(){this.round=0,this.turn=0,this.pot=[0],this.activePot=0,this.didSomeoneAllIn=!1,this.cards=[],this.createCardList(),this.playerTurn=[],this.subRound=0,this.subRoundStatus="active",this.winner=0,this.didSomeoneRaise=!1,this.running=!1,this.shouldStopRunning=!1,this.shouldStartRunning=!1,this.playerFirstSidepot=-1,this.raiseAmounts=[{pot:0,raiseAmount:0,debtamount:-1}],this.resetRaises(),this.dealCards(),this.updateDisplay("reset"),a()(".player").removeClass("active"),a()(".winner").removeClass("winner"),a()("#strength-meter-container").children("#strength-meter").children("#background").css("clip-path","inset(0 100% 0 0)"),a()("#right-sidebar").children("h3").text("Card Ranking"),a()("#card-evaluation").children("p").text(""),a()("#controls").children(".control-button").addClass("inactive"),a()("#pot").css("visibility","visible"),a()(".button-copy").css("display","block");(()=>{for(let t of this.playerList)t.bet=[0],t.didRaiseAllIn=!1,t.bettingPot=[],t.status="active",this.updateDisplay(t),t.isHuman&&g(t.cards,"seat"+t.ID.toString(),"card");this.playerDisplay()})(),this.startGame()}startGame(){this.running&&this.stopGame(),this.shouldStartRunning=!0;let t=Object(r.setInterval)(async()=>{!this.running&&this.shouldStartRunning&&(clearInterval(t),await this.gameLoop()),this.shouldStartRunning||clearInterval(t)},500)}stopGame(){this.shouldStopRunning=!0,this.shouldStartRunning=!1}async gameLoop(){return this.running=!0,this.shouldStopRunning?(this.running=!1,void(this.shouldStopRunning=!1)):!!await this.simulateRounds()||await this.gameLoop()}}var u;async function m(t,e,n,i){i?(a()("#controls").children(".control-button").addClass("inactive"),a()(".menu-button").removeClass("open"),a()(".button-copy").css("display","block"),a()("#pot").css("visibility","visible")):await new Promise(t=>{a()("#new-player").click(e=>{a()(".modal-popup").css("visibility","hidden"),window.localStorage.clear(),window.localStorage.setItem("numOfGames",0),window.localStorage.setItem("numOfRounds",0),window.localStorage.setItem("roundsWon",0),window.localStorage.setItem("profitAmount",0),window.localStorage.setItem("numOfWins",0),a()("#left-sidebar").children(".player-record").children("#games-played").text("Games played: 0"),a()("#left-sidebar").children(".player-record").children("#rounds-played").text("Rounds played: 0"),a()("#left-sidebar").children(".player-record").children("#rounds-won").text("Rounds Won: 0"),a()("#left-sidebar").children(".player-record").children("#games-won").text("Number of Wins: 0"),a()("#left-sidebar").children(".player-record").children("#profit").text("Total Profit: 0"),a()("#left-sidebar").children(".player-record").children("#win-rate").text("Win Rate: 0%"),t()}),a()("#returning-player").click(e=>{a()(".modal-popup").css("visibility","hidden"),t()})});let r=new p(t,e);for(let i=0;i<t;i++)2===i?r.addPlayer(r.humanPlayer=new o(i,n,e,r)):r.addPlayer(new s(i,"Player "+i,e,r));u&&u.stopGame(),(u=r).dealCards(),u.updateDisplay("reset"),u.freshGame();!function(){for(let t of u.playerList)u.updateDisplay(t),t.isHuman&&g(t.cards,"seat"+t.ID.toString(),"card");u.playerDisplay()}(),u.startGame()}function g(t,e,n){for(let i=0;i<t.length;i++){let s,o=document.createElement("img");o.src="cards/"+t[i].toUpperCase()+".png",o.alt=t[i].toUpperCase(),s=e.includes("seat")?"."+n+(i+1).toString():"."+n,a()("#"+e).children(s).children("img").attr("src",o.src).attr("alt",o.alt)}}function b(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t))+t}a()(document).ready((function(){a()("#playnewgame").click(t=>{m(Number(a()("#playerCount").val()),Number(a()("#initialChips").val()),a()("#playerName").val(),!0)}),a()(".button-copy").click(t=>{a()(".menu-button").addClass("open"),a()(".button-copy").css("display","none")}),a()(".submit-button").click(t=>{a()(".menu-button").removeClass("open"),a()(".button-copy").css("display","block")}),a()(".cancel").click(t=>{a()(".menu-button").removeClass("open"),a()(".button-copy").css("display","block")}),a()("#endgame").click(t=>{u.updateDisplay("reset"),u=0,this.playerList=[],this.round=0,this.turn=0,this.pot=[0],this.activePot=0,this.didSomeoneAllIn=!1,this.cards=[],this.humanPlayer,this.playerTurn=[],this.subRound=0,this.subRoundStatus="active",this.playerFirstSidepot=-1,this.raiseAmounts=[{pot:0,raiseAmount:0,debtamount:-1}]}),a()("#clear").click(t=>{window.localStorage.clear(),window.localStorage.setItem("numOfGames",0),window.localStorage.setItem("numOfRounds",0),window.localStorage.setItem("roundsWon",0),window.localStorage.setItem("profitAmount",0),window.localStorage.setItem("numOfWins",0),a()("#left-sidebar").children(".player-record").children("#games-played").text("Games played: 0"),a()("#left-sidebar").children(".player-record").children("#rounds-played").text("Rounds played: 0"),a()("#left-sidebar").children(".player-record").children("#rounds-won").text("Rounds Won: 0"),a()("#left-sidebar").children(".player-record").children("#games-won").text("Number of Wins: 0"),a()("#left-sidebar").children(".player-record").children("#profit").text("Total Profit: 0"),a()("#left-sidebar").children(".player-record").children("#win-rate").text("Win Rate: 0%")});let t=document.getElementById("modal-popup");a()("#poker-hands-button").click((function(){a()("#modal-popup").toggle()})),document.getElementsByClassName("close")[0].onclick=function(){t.style.display="none"},m(8,1e3,"you")}))},8:function(t,e,n){var i=n(9);"string"==typeof i&&(i=[[t.i,i,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n(13)(i,a);i.locals&&(t.exports=i.locals)},9:function(t,e,n){e=t.exports=n(10)(!1);var i=n(11)(n(12));e.push([t.i,'* {\n  margin: 0;\n  padding: 0;\n  box-sizing: content-box;\n  transition: all 0.1s ease-in-out;\n}\n\nbody {\n  width: 100%;\n  height: 100%;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: #1d1d1e;\n  color: #ffffff;\n}\n\nbody .container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n\n.wrapper {\n  width: 100%;\n  margin: 0 auto;\n  padding-top: 25px;\n}\n\n.header {\n  width: 100%;\n  min-width: 800px;\n  min-height: 65px;\n  background-color: #131313;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n}\n\n#navbar {\n  display: initial;\n  width: 800px;\n  min-height: 50px;\n  max-height: 50px;\n  text-align: center;\n  letter-spacing: 0.5px;\n  padding-top: 0px;\n  background-color: #8d0301;\n  border-radius: 16px;\n  place-content: center;\n  padding-bottom: 10px;\n  padding-top: 10px;\n}\n\n/* All parts of the main table and area, including player seats, cards, etc. */\n.main {\n  display: flex;\n  padding-bottom: 100px;\n}\n.content {\n  width: 800px;\n  min-width: 800px;\n  min-height: 400px;\n  max-height: 400px;\n  background-image: url('+i+");\n  background-repeat: no-repeat;\n  background-size: auto;\n  background-position: center;\n  margin-left: 9%;\n  margin-right: 9%;\n}\n.content .content-inner {\n  margin: 0 auto;\n  width: 800px;\n  position: absolute;\n}\n.content .content-inner .player {\n  position: absolute;\n  width: 110px;\n  border: #e2e2e2 ridge;\n  border-width: 1px;\n  border-radius: 5px;\n}\n.content .content-inner .player img {\n  width: 45px;\n  float: left;\n}\n.content .content-inner .tablecard img {\n  width: 45px;\n  float: left;\n  visibility: hidden;\n}\n#seat0 {\n  top: 2px;\n  left: 637px;\n  width: 210px;\n}\n#seat1 {\n  top: 160px;\n  left: 710px;\n  width: 210px;\n}\n#seat2 {\n  top: 310px;\n  left: 635px;\n  border: #0071a5 ridge;\n  border-width: 3px;\n}\n#seat3 {\n  top: 320px;\n  left: 425px;\n}\n#seat4 {\n  top: 320px;\n  left: 280px;\n}\n#seat5 {\n  top: 310px;\n  left: 78px;\n}\n#seat6 {\n  top: 160px;\n  left: -116px;\n  width: 210px;\n}\n#seat7 {\n  top: 7px;\n  left: -51px;\n  width: 210px;\n}\n#pot {\n  top: 125px;\n  left: 350px;\n  position: absolute;\n}\n#board {\n  top: 60px;\n  left: 285px;\n  position: absolute;\n  width: 225px;\n}\n#carddeck {\n  top: -8px;\n  left: 346px;\n  position: absolute;\n}\n#carddeck img {\n  width: 100px;\n  height: 88px;\n}\n/* Shows the active player and winner */\n.active {\n  border: #e00000 ridge !important;\n}\n.winner {\n  border: #FBDB0F ridge 4px !important;\n}\n\n.footer {\n  width: 800px;\n  background-color: #8d0301;\n  border-radius: 16px;\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  justify-content: center;\n}\n\n/* Sidebars and content */\n.sidebar {\n  width: 100%;\n  text-align: center;\n  height: fit-content;\n}\n#left-sidebar {\n  border: white ridge;\n  border-width: 3px 3px 3px 0px;\n  border-radius: 0px 7px 7px 0px;\n}\n.player-record {\n  text-align: left;\n}\n#right-sidebar {\n  border: white ridge;\n  border-width: 3px 0px 3px 3px;\n  border-radius: 7px 0px 0px 7px;\n}\n#card-evaluation {\n  text-align: left;\n}\n\n/* Poker Hands popup / modal */\n#poker-hands {\n  border-radius: 5px;\n  margin-top: 4px;\n  transition: 0.3s;\n}\n.modal {\n  display: none;\n  overflow: auto;\n  background-color: rgba(0,0,0,0.8);\n}\n.modal-content {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 75%;\n}\n#caption {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n  text-align: center;\n  color: #ccc;\n  padding: 10px 0;\n}\n.modal-content, #caption {\n  -webkit-animation-name: zoom;\n  -webkit-animation-duration: 0.6s;\n  animation-name: zoom;\n  animation-duration: 0.6s;\n}\ndiv#poker-hands-button {\n    position: inherit;\n    display: block;\n}\n@-webkit-keyframes zoom {\n  from {-webkit-transform:scale(0)}\n  to {-webkit-transform:scale(1)}\n}\n@keyframes zoom {\n  from {transform:scale(0)}\n  to {transform:scale(1)}\n}\n.close {\n  position: relative;\n  right: -40%;\n  color: #f1f1f1;\n  font-size: 40px;\n  font-weight: bold;\n  transition: 0.3s;\n}\n.close:hover, .close:focus {\n  color: #bbb;\n  text-decoration: none;\n  cursor: pointer;\n}\n@media only screen and (max-width: 700px){\n  .modal-content {\n    width: 100%;\n  }\n}\n.modal-popup {\n  background-color: #FAFAFA;\n  padding: 15px 20px;\n  color: black;\n  text-align: center;\n  border-radius: 5px;\n  width: 340px;\n  height: 100px;\n  cursor: default;\n  z-index: 2;\n  position: absolute;\n  top: 33%;\n  left: 40%;\n  align-self: center;\n}\n#new-player {\n  float: left;\n  display: block;\n  width: 90px;\n  margin-top: 2em;\n}\n#returning-player {\n  float: right;\n  display: block;\n  width: 90px;\n  margin-top: 2em;\n  line-height: 20px;\n}\n\n/* Changes players brightness when folded */\n.folded {\n  filter: brightness(0.5);\n}\n\n/* User controls & buttons */\n#controls {\n  display: flex;\n  place-content: center;\n  padding-bottom: 25px;\n}\n.control-button {\n  padding-right: 13px;\n  padding-left: 13px;\n  transition: all 0.3s ease;\n  background-color: #FFC145;\n  height: 25px;\n  width: 70px;\n  border-radius: 72px;\n  box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.07);\n  cursor: pointer;\n  text-align: center;\n  line-height: 24px;\n  color: #f7f7f7;\n  display: block;\n}\n.inactive {\n  cursor: default;\n  background-color: #d0cbc2;\n}\n.inactive input {\n  visibility: hidden;\n}\n\n/* Menu popup and button */\n.menu-container {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n}\n.menu-button {\n  transition: all 0.3s ease;\n  background-color: #FFC145;\n  height: 45px;\n  width: 125px;\n  border-radius: 72px;\n  box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.07);\n  cursor: pointer;\n}\n.menu-button.open {\n  background-color: #FAFAFA;\n  padding: 18px 32px;\n  border-radius: 5px;\n  width: 420px;\n  height: 233px;\n  cursor: default;\n  z-index: 2;\n  position: absolute;\n  top: 12.5%;\n}\n.menu-button.open form {\n  opacity: 1;\n  transition: opacity 0.1s ease;\n  transition-delay: 0.3s;\n  height: auto;\n}\n.menu-button .button-copy {\n  text-align: center;\n  line-height: 45px;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #f7f7f7;\n}\n.menu-button form {\n  transition: none;\n  opacity: 0;\n  height: 0;\n  overflow: hidden;\n}\n.menu-button .cancel {\n  font-size: 12px;\n  text-align: center;\n  margin-top: 1em;\n  color: black;\n}\n.menu-button .cancel span {\n  cursor: pointer;\n}\n.menu-button .cancel span:hover {\n  text-decoration: underline;\n}\n.menu-button:hover {\n  background-color: #e0aa3d;\n}\n.menu-button.open:hover {\n  background-color: #fff;\n}\n\n/* All buttons */\n.button {\n  display: block;\n  background-color: #3498DB;\n  height: 40px;\n  border-radius: 20px;\n  text-align: center;\n  color: #fff;\n  text-transform: uppercase;\n  font-size: 0.875em;\n  line-height: 2.6em;\n  border: none;\n  font-weight: 700;\n  padding: 0 34px;\n  margin: 0 auto;\n}\n@media(max-width: 1415px) {\n  .button {\n    line-height: 19px;\n  }\n}\n.button img {\n  position: relative;\n  top: 3px;\n  right: 6px;\n}\n.button:hover {\n  background-color: #217dbb;\n  cursor: pointer;\n}\n\n/* End game button */\n.end-button {\n  display: block;\n  background-color: #3498DB;\n  height: 45px;\n  border-radius: 20px;\n  line-height: 45px;\n  text-align: center;\n  color: #fff;\n  text-transform: uppercase;\n  font-size: 0.875em;\n  border: none;\n  font-weight: 700;\n  padding: 0 34px;\n}\n.end-button:hover {\n  background-color: #217dbb;\n  cursor: pointer;\n}\n\n/* Play button form */\nform * {\n  outline: none;\n}\n.menu-container label {\n  display: block;\n  font-size: 14px;\n  font-weight: bold;\n  user-select: none;\n}\n.form--field {\n  width: 420px;\n  margin: 10px 0;\n  color: black;\n}\n.form--field.-short {\n  width: 120px;\n  color: black;\n}\n.form--price {\n  position: absolute;\n  line-height: 38px;\n  width: 16px;\n  color: #C7C7C7;\n  text-align: center;\n}\n.form--price + input {\n  padding-left: 14px;\n}\n.form--container {\n  width: 420px;\n}\n.form--container.-inline {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: -12px;\n}\n.form--element {\n  background-color: #fff;\n  border: 1px solid #ECECEC;\n  border-radius: 3px;\n  font-size: 14px;\n  line-height: 28px;\n  padding: 0 4px;\n  color: #3D3D3D;\n  width: 100%;\n  margin: 4px 0;\n  box-sizing: border-box;\n  font-family: 'Open Sans', sans-serif;\n}\n.form--element:focus {\n  border: 1px solid #FFC145;\n  border-radius: 2px;\n}\n.form--element:not(.textarea) {\n  height: 30px;\n}\n.form--element.textarea {\n  height: 80px;\n  resize: none;\n}\n\n/* Strength Meter */\n#strength-meter-container {\n  background: gainsboro;\n  height: 2.5em;\n  padding: 0.5em;\n  margin-top: 0.5em;\n  margin-bottom: 0.2em;\n  position: relative;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  border-radius: 20px;\n  box-sizing: border-box;\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.75) inset, 0 0 4px 0 rgba(0, 0, 0, 0.5);\n}\n#strength-meter-container #strength-meter {\n  background: #000;\n  width: 100%;\n  height: 100%;\n  border-radius: 50px;\n  overflow: hidden;\n  position: relative;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15) inset, 0 0 1px 3px rgba(255, 255, 255, 0.75) inset;\n  background: transparent;\n}\n#strength-meter-container #strength-meter:before {\n  border-radius: 50px;\n  content: '';\n  display: block;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3) inset, 0 0 5px 2px rgba(255, 255, 255, 0.8) inset;\n  background: transparent;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 3;\n}\n#strength-meter-container #strength-meter:after {\n  content: '';\n  display: block;\n  position: absolute;\n  top: 2px;\n  width: 96%;\n  left: 50%;\n  margin-left: -48%;\n  border-radius: 20px;\n  height: 10px;\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.85) 30%, transparent 120%);\n}\n#strength-meter-container #strength-meter #background {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: linear-gradient(-90deg, #06e221, yellow, red);\n  -webkit-clip-path: inset(0 100% 0 0);\n  clip-path: inset(0 100% 0 0);\n  transition: all 3s;\n  -webkit-transition: all 3s;\n  z-index: -10;\n}\n",""])}},[[28,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3RhYmxlLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvcGxheWVyLmpzIiwid2VicGFjazovLy8uL3NyYy9odW1hbnBsYXllci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy5jc3M/NTJmNiIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzLmNzcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiUGxheWVyIiwiY29uc3RydWN0b3IiLCJJRCIsIm5hbWUiLCJjaGlwcyIsImdhbWUiLCJ0aGlzIiwiY2FyZHMiLCJzdGF0dXMiLCJpc0h1bWFuIiwiYmV0IiwiY2FyZFJhbmsiLCJjYXJkRXZhbCIsImJldHRpbmdQb3QiLCJmb3JjZWRGb2xkIiwiYWRkQ2hpcHMiLCJ2YWx1ZSIsInJlbW92ZUNoaXBzIiwiYWRkQ2FyZCIsImNhcmQiLCJwdXNoIiwiQ2hlY2siLCJhZHZhbmNlVHVybiIsImFjdGl2ZVBvdCIsIlJhaXNlIiwiYW1vdW50IiwiZGlkU29tZW9uZUFsbEluIiwib3RoZXJQbGF5ZXIiLCJwbGF5ZXJMaXN0IiwiZmlsdGVyIiwicGxheWVyIiwic29ydCIsImEiLCJiIiwicG90IiwibGVuZ3RoIiwiY3JlYXRlU2lkZVBvdCIsInJhaXNlQW1vdW50cyIsInJhaXNlQW1vdW50IiwiTWF0aCIsImFicyIsImRlYnRhbW91bnQiLCJpbmRleE9mIiwiZGlkUmFpc2VBbGxJbiIsInN1YlJvdW5kU3RhdHVzIiwiQ2FsbCIsIm90aGVyUGxheWVyc0JldCIsInJhaXNpbmciLCJsaXN0IiwiaGlnaGVzdCIsIm8iLCJ1bmRlZmluZWQiLCJzaGlmdCIsInN1Y2Nlc3MiLCJwIiwiYmV0RGlmZmVyZW5jZSIsImFkZGVkIiwiaW5kZXgiLCJzcGxpY2UiLCJGb2xkIiwiSHVtYW5QbGF5ZXIiLCJzdXBlciIsInJhbmtCb2FyZCIsInJhbmtEZXNjcmlwdGlvbiIsInJhbmtDYXJkcyIsImV2YWx1YXRlQ2FyZHMiLCJyZXF1aXJlIiwiR2FtZSIsInBsYXllckNvdW50IiwiaW5pdGlhbENoaXBzIiwicm91bmQiLCJ0dXJuIiwiY3JlYXRlQ2FyZExpc3QiLCJodW1hblBsYXllciIsInBsYXllclR1cm4iLCJzdWJSb3VuZCIsIndpbm5lciIsImRpZFNvbWVvbmVSYWlzZSIsInJ1bm5pbmciLCJzaG91bGRTdG9wUnVubmluZyIsImRlYnRQb3RDcmVhdGVkIiwicGxheWVyRmlyc3RTaWRlcG90IiwiYWRkUGxheWVyIiwiZ2V0UGxheWVyQnlJZCIsImlkIiwiSW5pdGlhbENoaXBzIiwiaW5jcmVtZW50Um91bmQiLCJyZXNldFR1cm4iLCJhZGRUb1BvdCIsInJlc2V0UG90IiwicmVzZXRDYXJkcyIsImRlYWxDYXJkcyIsInJlbW92ZUFsbFBsYXllckNhcmRzIiwic2h1ZmZsZUNhcmRMaXN0IiwiaSIsImoiLCJkZWFsQ2FyZFRvUGxheWVyIiwiZGVhbENhcmRUb1RhYmxlIiwiY2FyZExpc3QiLCIkIiwiY2hpbGRyZW4iLCJhdHRyIiwidG9VcHBlckNhc2UiLCJ0aGVHYW1lIiwiY3NzIiwidGltZW91dCIsImRlYWxUdXJuQ2FyZCIsImRlYWxSaXZlckNhcmQiLCJ1cGRhdGVEaXNwbGF5IiwidGVtcExpc3QiLCJmbG9vciIsInJhbmRvbSIsImNhcmRTeW1ib2xzIiwic3VpdFN5bWJvbHMiLCJzdWl0IiwidGVtcENhcmQiLCJnZXRIdW1hblBsYXllciIsInBsYXllcmxpc3QiLCJwbGF5ZXJDaGVjayIsImJldENvdW50IiwicGxheWVyQ2FsbCIsImFsZXJ0IiwicGxheWVyRm9sZCIsInBsYXllclJhaXNlIiwib2xkUmFpc2UiLCJuZXdSYWlzZSIsInJvdW5kc1dvbiIsIkpTT04iLCJwYXJzZSIsIndpbmRvdyIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwiUG90IiwiYWRkQ2xhc3MiLCJ0ZXh0IiwiY2hlY2tGaW5hbFdpbm5lciIsInJlbW92ZUNsYXNzIiwicGxheWVyRmluaXNoZWQiLCJnZXRSYW5kb21JbnQiLCJjaGVja1N0YXR1cyIsInJlc2V0UmFpc2VzIiwiZGVhbEZsb3BDYXJkcyIsImV2YWx1YXRlUGxheWVyQ2FyZHMiLCJldmFsdWF0ZVdpbm5lciIsInNpbXVsYXRlUGxheWVyIiwic29tZW9uZVJhaXNlZCIsImRvUmFuZG9tUGxheWVyQWN0aW9uIiwiZG9TdWJSb3VuZFBsYXllckFjdGlvbiIsImlzTmFOIiwicGxheWVyRGlzcGxheSIsImluZm8iLCJpZFN0cmluZyIsImFwcGVuZCIsIm51bU9mR2FtZXMiLCJudW1PZlJvdW5kcyIsIm51bU9mV2lucyIsIndpblJhdGUiLCJOdW1iZXIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInVuYmluZCIsImNsaWNrIiwicGFyc2VJbnQiLCJ2YWwiLCJtcyIsInNldFRpbWVvdXQiLCJib2FyZCIsImpvaW4iLCJyYW5rIiwiaW5jbHVkZXMiLCJyYW5rcyIsInNwYXduQ2FyZHMiLCJ0b1N0cmluZyIsIm5ld2JvYXJkcyIsImNvbmNhdCIsInJhbmtOdW1iZXIiLCJmb3JFYWNoIiwicG90SUQiLCJtYXAiLCJhcnJheSIsInJlZHVjZSIsInByZXZpb3VzIiwibmV4dCIsInRlbXBQb3QiLCJ3aW5uZXJzIiwicG90U2l6ZSIsIndpbm5lcnNJbmZvIiwicm91bmRzUGxheWVkIiwiZ2FtZXNQbGF5ZWQiLCJ3aW5zIiwicHJvZml0Iiwic3RvcEdhbWUiLCJmcmVzaEdhbWUiLCJzaG91bGRTdGFydFJ1bm5pbmciLCJpbml0aWFsaXplR2FtZSIsInN0YXJ0R2FtZSIsImdhbWVMb29wUmVhZHlUb1N0YXJ0Iiwic2V0SW50ZXJ2YWwiLCJhc3luYyIsImNsZWFySW50ZXJ2YWwiLCJnYW1lTG9vcCIsInNpbXVsYXRlUm91bmRzIiwibmV3R2FtZSIsInBsYXllck5hbWUiLCJjb250aW51ZWRHYW1lIiwiXyIsImNsZWFyIiwiY2xhc3NTdHJpbmciLCJjbGFzc05hbWUiLCJub2RlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiYWx0IiwibWluIiwibWF4IiwiY2VpbCIsInJlYWR5IiwibW9kYWwiLCJnZXRFbGVtZW50QnlJZCIsInRvZ2dsZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJvbmNsaWNrIiwic3R5bGUiLCJkaXNwbGF5IiwiY29udGVudCIsIm9wdGlvbnMiLCJ0cmFuc2Zvcm0iLCJsb2NhbHMiLCJfX19DU1NfTE9BREVSX1VSTF9fXzBfX18iLCJnZXRVcmwiXSwibWFwcGluZ3MiOiI0RUFBQUEsRUFBT0MsUUFBVSxJQUEwQix3QyxnRUNBNUIsTUFBTUMsRUFVbkJDLFlBQVlDLEVBQUlDLEVBQU1DLEVBQU9DLEdBQzNCQyxLQUFLSixHQUFLQSxFQUNWSSxLQUFLSCxLQUFPQSxFQUNaRyxLQUFLRixNQUFRQSxFQUNiRSxLQUFLQyxNQUFRLEdBQ2JELEtBQUtELEtBQU9BLEVBQ1pDLEtBQUtFLE9BQVMsU0FDZEYsS0FBS0csU0FBVSxFQUNmSCxLQUFLSSxJQUFNLENBQUMsR0FDWkosS0FBS0ssU0FDTEwsS0FBS00sU0FDTE4sS0FBS08sV0FBYSxHQUNsQlAsS0FBS1EsWUFBYSxFQVNwQkMsU0FBU0MsR0FDUFYsS0FBS0YsT0FBU1ksRUFTaEJDLFlBQVlELEdBQ1ZWLEtBQUtGLE9BQVNZLEVBU2hCRSxRQUFRQyxHQUNOYixLQUFLQyxNQUFNYSxLQUFLRCxHQVFsQkUsUUFDRWYsS0FBS0UsT0FBUyxVQUNkRixLQUFLRCxLQUFLaUIsY0FLWCxlQUNFLE9BQVFoQixLQUFLSSxJQUFJSixLQUFLRCxLQUFLa0IsV0FBaUJqQixLQUFLSSxJQUFJSixLQUFLRCxLQUFLa0IsV0FBdkIsRUFTM0NDLE1BQU1DLEdBQ0osR0FBSW5CLEtBQUtGLE1BQVFxQixFQUNmLE9BQU8sRUFJUCxHQUZBbkIsS0FBS0ksSUFBSUosS0FBS0QsS0FBS2tCLFdBQWNqQixLQUFLSSxJQUFJSixLQUFLRCxLQUFLa0IsV0FBaUJqQixLQUFLSSxJQUFJSixLQUFLRCxLQUFLa0IsV0FBdkIsRUFDakVqQixLQUFLSSxJQUFJSixLQUFLRCxLQUFLa0IsWUFBY0UsRUFDN0JuQixL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b0JBQzlFcEMsSUFBRSxpQkFBaUJDLFNBQVMsa0JBQWtCQSxTQUFTLGVBQWVtQyxLQUFLLGlCQUMzRXBDLElBQUUsaUJBQWlCQyxTQUFTLGtCQUFrQkEsU0FBUyxjQUFjbUMsS0FBSyxxQkFDMUVwQyxJQUFFLGlCQUFpQkMsU0FBUyxrQkFBa0JBLFNBQVMsV0FBV21DLEtBQUssbUJBQ3ZFcEMsSUFBRSxpQkFBaUJDLFNBQVMsa0JBQWtCQSxTQUFTLGFBQWFtQyxLQUFLLGtCQUkzRSxJQUFJb0YsRUFBUVIsU0FBU1MsZUFBZSxlQUNwQ3pILElBQUUsdUJBQXVCK0QsT0FBTSxXQUM3Qi9ELElBQUUsZ0JBQWdCMEgsWUFFVFYsU0FBU1csdUJBQXVCLFNBQVMsR0FDL0NDLFFBQVUsV0FDYkosRUFBTUssTUFBTUMsUUFBVSxRQUV4QnRCLEVBQVEsRUFBRyxJQUFNLFcsa0JDdHZDbkIsSUFBSXVCLEVBQVUsRUFBUSxHQUVBLGlCQUFaQSxJQUFzQkEsRUFBVSxDQUFDLENBQUNwTyxFQUFPZ0csRUFBSW9JLEVBQVMsTUFPaEUsSUFBSUMsRUFBVSxDQUFDLEtBQU0sRUFFckIsZUFQSUMsRUFRSixnQkFBcUJqTCxHQUVSLEVBQVEsR0FBUixDQUEwRCtLLEVBQVNDLEdBRTdFRCxFQUFRRyxTQUFRdk8sRUFBT0MsUUFBVW1PLEVBQVFHLFMsa0JDakI1Q3RPLEVBQVVELEVBQU9DLFFBQVUsRUFBUSxHQUFSLEVBQTBELEdBRXJGLElBQ0l1TyxFQURTLEVBQVEsR0FDVUMsQ0FBTyxFQUFRLEtBRTlDeE8sRUFBUXFCLEtBQUssQ0FBQ3RCLEVBQU9nRyxFQUFJLCt6Q0FBaTFDd0ksRUFBMkIsZ25TQUFpblMsTyIsImZpbGUiOiJtYWluLjFkNDY3ZGMxODQzNjExODM1MGJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiODhkNjk1Y2ZmNGM0OThkOTc2ZDdiNjZkNTdmZTY5OTUucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIHtcbiAgLyoqXG4gICAqIGNvbnN0cnVjdG9yIC0gZm9yIHRoZSBQbGF5ZXIgY2xhc3MuXG4gICAqXG4gICAqIEBwYXJhbSAge251bWJlcn0gSUQgICAgbnVtZXJpY2FsIElEIG9mIHRoZSBwbGF5ZXJcbiAgICogQHBhcmFtICB7c3RyaW5nfSBuYW1lICBzdHJpbmcgbmFtZSBmb3IgdGhlIHBsYXllclxuICAgKiBAcGFyYW0gIHtudW1iZXJ9IGNoaXBzIGFtb3VudCBvZiBjaGlwcyB0aGUgcGxheWVyIGhhc1xuICAgKiBAcGFyYW0gIHtvYmplY3R9IGdhbWUgIHRoZSBnYW1lIHRoYXQgdGhlIHBsYXllciBiZWxvbmdzIHRvLlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgY29uc3RydWN0b3IoSUQsIG5hbWUsIGNoaXBzLCBnYW1lKSB7XG4gICAgdGhpcy5JRCA9IElEO1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5jaGlwcyA9IGNoaXBzO1xuICAgIHRoaXMuY2FyZHMgPSBbXTtcbiAgICB0aGlzLmdhbWUgPSBnYW1lO1xuICAgIHRoaXMuc3RhdHVzID0gXCJhY3RpdmVcIjtcbiAgICB0aGlzLmlzSHVtYW4gPSBmYWxzZTtcbiAgICB0aGlzLmJldCA9IFswXTtcbiAgICB0aGlzLmNhcmRSYW5rO1xuICAgIHRoaXMuY2FyZEV2YWw7XG4gICAgdGhpcy5iZXR0aW5nUG90ID0gW107XG4gICAgdGhpcy5mb3JjZWRGb2xkID0gZmFsc2VcbiAgfVxuXG4gIC8qKlxuICAgKiBhZGRDaGlwcyAtIEFkZHMgbmV3IGNoaXBzIHRvIHBsYXllcnMgdG90YWwgY2hpcCBjb3VudFxuICAgKlxuICAgKiBAcGFyYW0gIHtudW1iZXJ9IHZhbHVlIGFtb3VudCB0byBhZGQgdG8gdGhlIGNoaXAgY291bnRcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGFkZENoaXBzKHZhbHVlKSB7XG4gICAgdGhpcy5jaGlwcyArPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiByZW1vdmVDaGlwcyAtIFJlbW92ZXMgY2hpcHMgZnJvbSBwbGF5ZXJzIHRvdGFsIGNoaXAgY291bnRcbiAgICpcbiAgICogQHBhcmFtICB7bnVtYmVyfSB2YWx1ZSBhbW91bnQgdG8gcmVtb3ZlIGZyb20gdGhlIGNoaXAgY291bnRcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIHJlbW92ZUNoaXBzKHZhbHVlKSB7XG4gICAgdGhpcy5jaGlwcyAtPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBhZGRDYXJkIC0gYWRkcyBhIGNhcmQgdG8gdGhlIHBsYXllcidzIGhhbmRcbiAgICpcbiAgICogQHBhcmFtICB7b2JqZWN0fSBjYXJkIHRoZSBjYXJkIHRvIGFkZCB0byB0aGUgcGxheWVyJ3MgaGFuZFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgYWRkQ2FyZChjYXJkKSB7XG4gICAgdGhpcy5jYXJkcy5wdXNoKGNhcmQpO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIC0gZnVuY3Rpb25hbGl0eSBmb3IgYSBwbGF5ZXIgdG8gY2hlY2suXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBDaGVjaygpIHtcbiAgICB0aGlzLnN0YXR1cyA9IFwiY2hlY2tlZFwiO1xuICAgIHRoaXMuZ2FtZS5hZHZhbmNlVHVybigpO1xuICB9XG5cblxuXG4gICBnZXQgYmV0Q291bnQoKSB7XG4gICAgIHJldHVybiAhdGhpcy5iZXRbdGhpcy5nYW1lLmFjdGl2ZVBvdF0gPyAwIDogdGhpcy5iZXRbdGhpcy5nYW1lLmFjdGl2ZVBvdF1cbiAgIH1cblxuICAgLyoqXG4gICAgKiBSYWlzZSAtIGZ1bmN0aW9uYWxpdHkgZm9yIGEgcGxheWVyIHRvIHJhaXNlLlxuICAgICpcbiAgICAqIEBwYXJhbSAge251bWJlcn0gYW1vdW50IGFtb3VudCBmb3IgdGhlIHBsYXllciB0byByYWlzZS5cbiAgICAqIEByZXR1cm4ge2Jvb2xlYW59IGZhbHNlIGlmIGEgcGxheWVyIGlzIHVuYWJsZSB0byByYWlzZS5cbiAgICAqL1xuICBSYWlzZShhbW91bnQpIHtcbiAgICBpZiAodGhpcy5jaGlwcyA8IGFtb3VudCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmJldFt0aGlzLmdhbWUuYWN0aXZlUG90XSA9ICF0aGlzLmJldFt0aGlzLmdhbWUuYWN0aXZlUG90XSA/IDAgOiB0aGlzLmJldFt0aGlzLmdhbWUuYWN0aXZlUG90XVxuICAgICAgdGhpcy5iZXRbdGhpcy5nYW1lLmFjdGl2ZVBvdF0gKz0gYW1vdW50XG4gICAgICBpZiAodGhpcy5nYW1lLmRpZFNvbWVvbmVBbGxJbikge1xuICAgICAgICBsZXQgb3RoZXJQbGF5ZXIgPSB0aGlzLmdhbWUucGxheWVyTGlzdC5maWx0ZXIocGxheWVyID0+IHBsYXllci5JRCAhPT0gdGhpcy5JRCAmJiBwbGF5ZXIuc3RhdHVzICE9PSBcImZvbGRlZFwiKS5zb3J0KChhLCBiKSA9PiBiIC0gYSlbMF0gLy8gR2V0IGV2ZXJ5IHBsYXllciB0aGF0IGhhcyBub3QgeWV0IGZvbGRlZCBhbmQgaXMgbm90IHRoZSBjdXJyZW50IHBsYXllclxuICAgICAgICBpZiAob3RoZXJQbGF5ZXIgJiYgYW1vdW50IDw9IG90aGVyUGxheWVyLmNoaXBzKSB7XG4gICAgICAgICAgaWYgKHRoaXMuZ2FtZS5wb3QubGVuZ3RoID4gMiApIHtcbiAgICAgICAgICAgIHRoaXMuYmV0W3RoaXMuZ2FtZS5hY3RpdmVQb3RdIC09IGFtb3VudFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgfSAvLyBDcmVhdGUgc2lkZXBvdCBpZiB0aGVyZSBpcyBhdCBsZWFzdCAxIHBsYXllciB3aXRoIG1vcmUgY2hpcHMgdGhhbiBjdXJyZW50IHBsYXllciBhbmQgc2V0IGl0cyB2YWx1ZXNcbiAgICAgICAgICB0aGlzLmdhbWUuY3JlYXRlU2lkZVBvdCgpXG4gICAgICAgICAgdGhpcy5nYW1lLnJhaXNlQW1vdW50c1t0aGlzLmdhbWUuYWN0aXZlUG90XSA9IHtwb3Q6IHRoaXMuZ2FtZS5hY3RpdmVQb3QsIHJhaXNlQW1vdW50OiBNYXRoLmFicyhhbW91bnQgLSAodGhpcy5nYW1lLnJhaXNlQW1vdW50c1t0aGlzLmdhbWUuYWN0aXZlUG90LTFdLnJhaXNlQW1vdW50IC0gdGhpcy5iZXRbdGhpcy5nYW1lLmFjdGl2ZVBvdC0xXSkpLCBkZWJ0YW1vdW50OiAtMX1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHRoaXMuYmV0dGluZ1BvdC5pbmRleE9mKHRoaXMuZ2FtZS5hY3RpdmVQb3QpID09PSAtMSkgdGhpcy5iZXR0aW5nUG90LnB1c2godGhpcy5nYW1lLmFjdGl2ZVBvdCkgLy8gQWRkIHBsYXllciB0byBwb3QgaWYgdGhleSBhcmVuJ3QgeWV0XG4gICAgICB0aGlzLmdhbWUucG90W3RoaXMuZ2FtZS5hY3RpdmVQb3RdICs9IGFtb3VudFxuICAgICAgdGhpcy5yZW1vdmVDaGlwcyhhbW91bnQpXG4gICAgICBpZiAodGhpcy5jaGlwcyA9PT0gMCkge1xuICAgICAgICB0aGlzLnN0YXR1cyA9IFwiQWxsLUluXCJcbiAgICAgICAgdGhpcy5kaWRSYWlzZUFsbEluID0gdHJ1ZVxuICAgICAgICB0aGlzLmdhbWUuZGlkU29tZW9uZUFsbEluID0gdHJ1ZVxuICAgICAgfSBlbHNlIHRoaXMuc3RhdHVzID0gXCJyYWlzZWRcIlxuICAgICAgdGhpcy5nYW1lLnN1YlJvdW5kU3RhdHVzID0gXCJyYWlzZWRcIjtcbiAgICAgIHRoaXMuZ2FtZS5hZHZhbmNlVHVybigpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gIH1cblxuICAvKipcbiAgICogQ2FsbCAtIGZ1bmN0aW9uYWxpdHkgZm9yIGEgcGxheWVyIHRvIGNhbGwuXG4gICAqXG4gICAqIEBwYXJhbSAge251bWJlcn0gb3RoZXJQbGF5ZXJzQmV0IHRoZSB2YWx1ZSBvZiB0aGUgaGlnaGVzdCBwcmV2aW91cyByYWlzZS5cbiAgICogQHBhcmFtICB7YXJyYXl9IGxpc3QgIEFycmF5IG9mIHRoZSByYWlzZSBhbW91bnRzIGluIGVhY2ggcG90IGFsb25nIHdpdGggdGhlIHBsYXllciB0aGF0IHN0YXJ0ZWQgaXQgYW5kIGl0cyBJRFxuICAgKiBAcmV0dXJuIHtib29sZWFufSB0cnVlL2ZhbHNlIGlmIHRoZSBwbGF5ZXIgaXMgYWJsZSB0byBjYWxsIGFub3RoZXJzJyBiZXQuXG4gICAqL1xuICBDYWxsKG90aGVyUGxheWVyc0JldCwgcmFpc2luZywgbGlzdCkge1xuICAgIGxldCBoaWdoZXN0ID0gZmFsc2VcbiAgICBoaWdoZXN0ID0gbGlzdCA/IGZhbHNlIDogdHJ1ZVxuICAgIGxpc3QgPSAhbGlzdCA/IHRoaXMuZ2FtZS5yYWlzZUFtb3VudHMuZmlsdGVyKG8gPT4gbyAhPT0gdW5kZWZpbmVkICYmICh0aGlzLmJldHRpbmdQb3QuaW5kZXhPZihvLnBvdCkgPiAtMSB8fCBvLnBvdCA9PT0gdGhpcy5nYW1lLmFjdGl2ZVBvdCkpLnNvcnQoKGEsIGIpID0+IGIucG90IC0gYS5wb3QpIDogbGlzdCAvLyBHZXRzIGFsbCBwb3RzIHdoZXJlIGEgcGxheWVyIGlzIGludm9sdmVkIGluIGFuZCB0aGUgY3VycmVudCBvbmVcbiAgICBpZiAobGlzdC5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICBsZXQgdmFsdWUgPSBsaXN0WzBdXG4gICAgbGlzdC5zaGlmdCgpXG4gICAgbGV0IHN1Y2Nlc3MgPSB0aGlzLkNhbGwob3RoZXJQbGF5ZXJzQmV0LCByYWlzaW5nLCBsaXN0KSAvLyBDYWxsIGZ1bmN0aW9ucyByZWN1cnNpdmVseSBhbmQgc3RhcnQgYXQgdGhlIGxvd2VzdCBwb3RcblxuICAgIGlmICh0aGlzLmZvcmNlZEZvbGQpIHJldHVybiBmYWxzZVxuXG4gICAgaWYgKHRoaXMuY2hpcHMgPT0gMCAmJiAhc3VjY2Vzcykge1xuICAgICAgdGhpcy5iZXR0aW5nUG90ID0gdGhpcy5iZXR0aW5nUG90LmZpbHRlcihwID0+IHAgIT0gdmFsdWUucG90KSAvLyBJZiBwbGF5ZXIgd2Fzbid0IGFibGUgdG8gY29tcGxldGUgYSB0dXJuLCBmaWx0ZXIgaGltIG91dCBvZiB0aGUgYWN0aXZlIHBvdHNcbiAgICAgIHRoaXMuZ2FtZS5hZHZhbmNlVHVybigpXG4gICAgICBpZiAodGhpcy5zdGF0dXMgIT09IFwiQWxsLUluXCIgfHwgcmFpc2luZykgcmV0dXJuIGZhbHNlXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgICB0aGlzLmJldFt2YWx1ZS5wb3RdID0gIXRoaXMuYmV0W3ZhbHVlLnBvdF0gPyAwIDogdGhpcy5iZXRbdmFsdWUucG90XVxuICAgIGxldCBiZXREaWZmZXJlbmNlID0gdmFsdWUucmFpc2VBbW91bnQgLSB0aGlzLmJldFt2YWx1ZS5wb3RdO1xuICAgIGlmIChiZXREaWZmZXJlbmNlID09IDApIHJldHVybiB0cnVlXG4gICAgaWYgKHRoaXMuY2hpcHMgPT09IDApIHJldHVybiBmYWxzZVxuICAgIGlmIChyYWlzaW5nICYmIHRoaXMuY2hpcHMgPD0gYmV0RGlmZmVyZW5jZSkgcmV0dXJuIGZhbHNlXG4gICAgaWYgKHRoaXMuY2hpcHMgPj0gYmV0RGlmZmVyZW5jZSkge1xuICAgICAgdGhpcy5iZXRbdmFsdWUucG90XSArPSBiZXREaWZmZXJlbmNlXG4gICAgICB0aGlzLmdhbWUucG90W3ZhbHVlLnBvdF0gKz0gYmV0RGlmZmVyZW5jZVxuICAgICAgdGhpcy5yZW1vdmVDaGlwcyhiZXREaWZmZXJlbmNlKVxuICAgICAgaWYgKHRoaXMuYmV0dGluZ1BvdC5pbmRleE9mKHZhbHVlLnBvdCkgPT09IC0xKSB0aGlzLmJldHRpbmdQb3QucHVzaCh2YWx1ZS5wb3QpIC8vIEFkZCBwbGF5ZXIgdG8gcG90IGlmIHRoZXkgYXJlbid0IHlldFxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodmFsdWUuZGVidGFtb3VudCAhPSBiZXREaWZmZXJlbmNlIC0gdGhpcy5jaGlwcykge1xuICAgICAgICB0aGlzLmdhbWUucG90W3ZhbHVlLnBvdF0gKz0gdGhpcy5jaGlwc1xuICAgICAgICB0aGlzLmdhbWUucG90W3ZhbHVlLnBvdF0gLT0gKGJldERpZmZlcmVuY2UgLSB0aGlzLmNoaXBzKVxuXG4gICAgICAgIGxldCBhZGRlZCA9IHRoaXMuYmV0dGluZ1BvdC5pbmRleE9mKHZhbHVlLnBvdCkgPT09IC0xID8gdHJ1ZSA6IGZhbHNlXG4gICAgICAgIGlmICh0aGlzLmJldHRpbmdQb3QuaW5kZXhPZih2YWx1ZS5wb3QpID09PSAtMSkgdGhpcy5iZXR0aW5nUG90LnB1c2godmFsdWUucG90KSAvLyBBZGQgcGxheWVyIHRvIHBvdCBpZiB0aGV5IGFyZW4ndCB5ZXRcblxuICAgICAgICBpZiAodGhpcy5nYW1lLnBvdC5sZW5ndGggPiAyKSB7IC8vIFVuZG8gY2hhbmdlcyBhbmQgcmVtb3ZlIHBsYXllciBmcm9tIHRoZSBwb3QgaWYgdGhleSB3ZXJlIGp1c3QgYWRkZWRcbiAgICAgICAgICB0aGlzLmdhbWUucG90W3ZhbHVlLnBvdF0gLT0gdGhpcy5jaGlwc1xuICAgICAgICAgIHRoaXMuZ2FtZS5wb3RbdmFsdWUucG90XSArPSAoYmV0RGlmZmVyZW5jZSAtIHRoaXMuY2hpcHMpXG4gICAgICAgICAgdGhpcy5mb3JjZWRGb2xkID0gdHJ1ZVxuICAgICAgICAgIGlmIChhZGRlZCkge1xuICAgICAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5iZXR0aW5nUG90LmluZGV4T2YodmFsdWUucG90KVxuICAgICAgICAgICAgdGhpcy5iZXR0aW5nUG90LnNwbGljZShpbmRleCwgMSlcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZ2FtZS5jcmVhdGVTaWRlUG90KCkgLy8gQ3JlYXRlIG5ldyBzaWRlcG90IGFuZCBzZXQgaXRzIHZhbHVlc1xuICAgICAgICB0aGlzLmdhbWUucmFpc2VBbW91bnRzW3RoaXMuZ2FtZS5hY3RpdmVQb3RdID0ge3BvdDogdGhpcy5nYW1lLmFjdGl2ZVBvdCwgcmFpc2VBbW91bnQ6IChiZXREaWZmZXJlbmNlIC0gdGhpcy5jaGlwcyksIGRlYnRhbW91bnQ6IChiZXREaWZmZXJlbmNlIC0gdGhpcy5jaGlwcyl9XG4gICAgICAgIHRoaXMuZ2FtZS5wb3RbdGhpcy5nYW1lLmFjdGl2ZVBvdF0gKz0gKGJldERpZmZlcmVuY2UgLSB0aGlzLmNoaXBzKVxuICAgICAgICB0aGlzLnJlbW92ZUNoaXBzKHRoaXMuY2hpcHMpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmdhbWUucG90W3ZhbHVlLnBvdF0gKz0gdGhpcy5jaGlwc1xuICAgICAgICBpZiAodGhpcy5iZXR0aW5nUG90LmluZGV4T2YodmFsdWUucG90KSA9PT0gLTEpIHRoaXMuYmV0dGluZ1BvdC5wdXNoKHZhbHVlLnBvdCkgLy8gQWRkIHBsYXllciB0byBwb3QgaWYgdGhleSBhcmVuJ3QgeWV0XG4gICAgICAgIHRoaXMucmVtb3ZlQ2hpcHModGhpcy5jaGlwcylcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHRoaXMuY2hpcHMgPCAxKSB7XG4gICAgICB0aGlzLnN0YXR1cyA9IFwiQWxsLUluXCJcbiAgICAgIGlmICh2YWx1ZS5wb3QgPT0gdGhpcy5nYW1lLmFjdGl2ZVBvdCkgdGhpcy5nYW1lLmRpZFNvbWVvbmVBbGxJbiA9IHRydWVcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdGF0dXMgPSBcImNhbGxlZFwiXG4gICAgfVxuICAgIGlmIChoaWdoZXN0KSB7XG4gICAgICB0aGlzLmdhbWUuYWR2YW5jZVR1cm4oKVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgLyoqXG4gICAqIEZvbGQgLSBmdW5jdGlvbmFsaXR5IGZvciBhIHBsYXllciB0byBmb2xkLlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgRm9sZCgpIHtcbiAgICAvLyBDaGFuZ2VzIHRoZSBwbGF5ZXIncyBzdGF0dXMgdG8gZm9sZGVkLlxuICAgIHRoaXMuc3RhdHVzID0gXCJmb2xkZWRcIjtcbiAgICB0aGlzLmdhbWUuYWR2YW5jZVR1cm4oKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBsYXllciBmcm9tICcuL3BsYXllcidcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSHVtYW5QbGF5ZXIgZXh0ZW5kcyBQbGF5ZXIge1xuICAgIGNvbnN0cnVjdG9yKElELCBuYW1lLCBjaGlwcywgZ2FtZSkge1xuICAgICAgc3VwZXIoSUQsIG5hbWUsIGNoaXBzLCBnYW1lKTtcbiAgICAgIHRoaXMuaXNIdW1hbiA9IHRydWU7XG4gICAgfVxuICB9XG4iLCJpbXBvcnQgJCBmcm9tIFwianF1ZXJ5XCI7XG5pbXBvcnQgXCIuL3N0eWxlcy5jc3NcIjtcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi9wbGF5ZXInO1xuaW1wb3J0IEh1bWFuUGxheWVyIGZyb20gJy4vaHVtYW5wbGF5ZXInO1xuaW1wb3J0IHsgc2V0SW50ZXJ2YWwgfSBmcm9tIFwidGltZXJzXCI7XG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSBcInV0aWxcIjtcbmNvbnN0IHsgcmFua0JvYXJkLCByYW5rRGVzY3JpcHRpb24sIHJhbmtDYXJkcywgZXZhbHVhdGVDYXJkcyB9ID0gcmVxdWlyZSgncGhlJykgLy8gSW1wb3J0cyBQSEUgKHBva2VyIGhhbmQgZXZhbHVhdG9yKVxuXG5jbGFzcyBHYW1lIHtcbiAgLyoqXG4gICAqIGNvbnN0cnVjdG9yIC0gY29uc3RydWN0b3IgZm9yIHRoZSBHYW1lIGNsYXNzLlxuICAgKlxuICAgKiBAcGFyYW0gIHtudW1iZXJ9IHBsYXllckNvdW50ICBudW1iZXIgb2YgcGxheWVycyB0byBhZGQgdG8gdGhlIGdhbWUuXG4gICAqIEBwYXJhbSAge251bWJlcn0gaW5pdGlhbENoaXBzIG51bWJlciBvZiBjaGlwcyBmb3IgZWFjaCBwbGF5ZXIgdG8gc3RhcnQgd2l0aC5cbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGNvbnN0cnVjdG9yKHBsYXllckNvdW50LCBpbml0aWFsQ2hpcHMpIHtcbiAgICB0aGlzLnBsYXllckNvdW50ID0gcGxheWVyQ291bnQ7XG4gICAgdGhpcy5wbGF5ZXJMaXN0ID0gW107XG4gICAgdGhpcy5pbml0aWFsQ2hpcHMgPSBpbml0aWFsQ2hpcHM7XG4gICAgdGhpcy5yb3VuZCA9IDA7XG4gICAgdGhpcy50dXJuID0gMDtcbiAgICB0aGlzLnBvdCA9IFswXTtcbiAgICB0aGlzLmFjdGl2ZVBvdCA9IDA7XG4gICAgdGhpcy5kaWRTb21lb25lQWxsSW4gPSBmYWxzZTtcbiAgICB0aGlzLmNhcmRzID0gW107XG4gICAgdGhpcy5jcmVhdGVDYXJkTGlzdCgpO1xuICAgIHRoaXMuaHVtYW5QbGF5ZXI7XG4gICAgdGhpcy5wbGF5ZXJUdXJuID0gW107XG4gICAgdGhpcy5zdWJSb3VuZCA9IDA7XG4gICAgdGhpcy5zdWJSb3VuZFN0YXR1cyA9IFwiYWN0aXZlXCI7XG4gICAgdGhpcy53aW5uZXIgPSAwO1xuICAgIHRoaXMuZGlkU29tZW9uZVJhaXNlID0gZmFsc2U7XG4gICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgdGhpcy5zaG91bGRTdG9wUnVubmluZyA9IGZhbHNlO1xuICAgIHRoaXMuZGVidFBvdENyZWF0ZWQgPSAwO1xuICAgIHRoaXMucGxheWVyRmlyc3RTaWRlcG90ID0gLTE7XG4gICAgdGhpcy5yYWlzZUFtb3VudHMgPSBbe3BvdDogMCwgcmFpc2VBbW91bnQ6IDAsIGRlYnRhbW91bnQ6IC0xfV1cbiAgfVxuXG4gIC8qKlxuICAgKiBnZXQgUGxheWVycyAtIGdldHRlciBmdW5jdGlvbiBmb3IgYSBsaXN0IG9mIHBsYXllcnMuXG4gICAqXG4gICAqIEByZXR1cm4ge2FycmF5fSAgcmV0dXJucyBhcnJheSBvZiBwbGF5ZXJzLlxuICAgKi9cbiAgZ2V0IFBsYXllcnMoKSB7XG4gICAgcmV0dXJuIHRoaXMucGxheWVyTGlzdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBhZGRQbGF5ZXIgLSBhZGRzIGEgcGxheWVyIGludG8gdGhlIGdhbWUuXG4gICAqXG4gICAqIEBwYXJhbSAge1BsYXllcn0gcGxheWVyIFBsYXllciBjb250YWluaW5nIGFsbCBjb25zdHJ1Y3RvcnMgb2YgYSBwbGF5ZXIuXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBhZGRQbGF5ZXIocGxheWVyKSB7XG4gICAgdGhpcy5wbGF5ZXJMaXN0LnB1c2gocGxheWVyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBnZXRQbGF5ZXJCeUlkIC0gcmV0dXJucyBhIHBsYXllciBieSBJRC5cbiAgICpcbiAgICogQHBhcmFtICB7bnVtYmVyfSBpZCAgIElEIG9mIHRoZSBwbGF5ZXIgdG8gcmV0dXJuLlxuICAgKiBAcmV0dXJuIHtQbGF5ZXJ8Ym9vbGVhbn0gICBSZXR1cm5zIHBsYXllciBvYmplY3QgaWYgdHJ1ZSwgb3IgZmFsc2UgaWYgbm90LlxuICAgKi9cbiAgZ2V0UGxheWVyQnlJZChpZCkge1xuICAgIGZvciAoY29uc3QgcGxheWVyIG9mIHRoaXMucGxheWVyTGlzdCkge1xuICAgICAgaWYgKHBsYXllci5JRCA9PSBpZCkge1xuICAgICAgICByZXR1cm4gcGxheWVyO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbENoaXBzIC0gcmV0dXJucyB0aGUgYW1vdW50IG9mIGNoaXBzIGVhY2ggdXNlciBzdGFydGVkIHdpdGguXG4gICAqXG4gICAqIEByZXR1cm4ge251bWJlcn0gIHJldHVybnMgaW5pdGlhbENoaXBzLlxuICAgKi9cbiAgSW5pdGlhbENoaXBzKCkge1xuICAgIHJldHVybiB0aGlzLmluaXRpYWxDaGlwcztcbiAgfVxuXG4gIC8qKlxuICAgKiBnZXQgUm91bmQgLSByZXR1cm5zIHRoZSBjdXJyZW50IHJvdW5kIG51bWJlci5cbiAgICpcbiAgICogQHJldHVybiB7bnVtYmVyfSAgY3VycmVudCByb3VuZCBudW1iZXIuXG4gICAqL1xuICBnZXQgUm91bmQoKSB7XG4gICAgcmV0dXJuIHRoaXMucm91bmQ7XG4gIH1cblxuICAvKipcbiAgICogaW5jcmVtZW50Um91bmQgLSBpbmNyZW1lbnRzIHRoZSByb3VuZCBieSAxLlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgaW5jcmVtZW50Um91bmQoKSB7XG4gICAgdGhpcy5yb3VuZCsrO1xuICAgIHRoaXMucmVzZXRUdXJuKCk7XG4gIH1cblxuICAvKipcbiAgICogZ2V0IFR1cm4gLSByZXR1cm5zIHdobydzIHR1cm4gaXQgaXMuXG4gICAqXG4gICAqIEByZXR1cm4ge251bWJlcn0gIHRoZSBudW1iZXIgcG9zaXRpb24gb2YgdGhlIHBlcnNvbiB3aG9zZSB0dXJuIGl0IGlzLlxuICAgKi9cbiAgZ2V0IFR1cm4oKSB7XG4gICAgcmV0dXJuIHRoaXMudHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBhZHZhbmNlVHVybiAtIGFkdmFuY2VzIHR1cm4gY291bnQgYnkgMS5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGFkdmFuY2VUdXJuKCkge1xuICAgIGlmICh0aGlzLnR1cm4gPCB0aGlzLnBsYXllckNvdW50KSB7XG4gICAgICB0aGlzLnR1cm4rK1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnR1cm4gPSAwXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIHJlc2V0VHVybiAtIHJlc2V0cyB0aGUgdHVybiBjb3VudC5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIHJlc2V0VHVybigpIHtcbiAgICB0aGlzLnR1cm4gPSAwXG4gIH1cblxuICAvKipcbiAgICogZ2V0IFBvdCAtIFJldHVybnMgdGhlIHRvdGFsIHBvdCB2YWx1ZS5cbiAgICpcbiAgICogQHJldHVybiB7bnVtYmVyfSAgUmV0dXJucyB0aGUgY3VycmVudCBhY3RpdmUgcG90IHZhbHVlLlxuICAgKi9cbiAgZ2V0IFBvdCgpIHtcbiAgICByZXR1cm4gdGhpcy5wb3RbdGhpcy5hY3RpdmVQb3RdXG4gIH1cblxuICAvKipcbiAgICogYWRkVG9Qb3QgLSBBZGRzIGEgdmFsdWUgdG8gdGhlIGN1cnJlbnQgYWN0aXZlIHBvdC5cbiAgICpcbiAgICogQHBhcmFtICB7bnVtYmVyfSB2YWx1ZSBWYWx1ZSB0byBhZGQgdG8gdGhlIGN1cnJlbnQgYWN0aXZlIHBvdC5cbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGFkZFRvUG90KHZhbHVlKSB7XG4gICAgdGhpcy5wb3RbdGhpcy5hY3RpdmVQb3RdICs9IHZhbHVlXG4gIH1cblxuICAvKipcbiAgICogcmVzZXRQb3QgLSBSZW1vdmVzIGFsbCBvdGhlciBwb3RzIGFuZCBzZXRzIHRoZSBtYWluIHBvdCB0byAwLlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgcmVzZXRQb3QoKSB7XG4gICAgdGhpcy5wb3QgPSBbMF1cbiAgfVxuXG4gIC8qKlxuICAgKiBjcmVhdGVTaWRlUG90IC0gY3JlYXRlcyBhIG5ldyBzaWRlcG90IHdpdGggZGVmYXVsdCB2YWx1ZSBvZiAwIGFuZCBtYWtlcyBpdCB0aGUgYWN0aXZlIHBvdC5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGNyZWF0ZVNpZGVQb3QoKSB7XG4gICAgaWYgKHRoaXMuZGVidFBvdENyZWF0ZWQpIHRoaXMuZGVidFBvdENyZWF0ZWQgPSAwXG4gICAgdGhpcy5hY3RpdmVQb3QgKytcbiAgICB0aGlzLnBvdC5wdXNoKDApXG4gICAgdGhpcy5kaWRTb21lb25lQWxsSW4gPSBmYWxzZVxuICB9XG5cbiAgLyoqXG4gICAqIHJlc2V0Q2FyZHMgLSByZXNldHMgYWxsIHBsYXllcnMnIGNhcmRzIHRvIGFuIGVtcHR5IGFycmF5LlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgcmVzZXRDYXJkcygpIHtcbiAgICB0aGlzLmNhcmRzID0gW107XG4gIH1cblxuICAvKipcbiAgICogZGVhbENhcmRzIC0gcmVtb3ZlcyBhbGwgb2xkIHBsYXllciBjYXJkcywgc2h1ZmZsZXMgYSBzZXQgb2YgY2FyZHMgYW5kIGRlYWxzIDIgY2FyZHMgdG8gZWFjaCBwbGF5ZXIuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBkZWFsQ2FyZHMoKSB7XG4gICAgdGhpcy5yZW1vdmVBbGxQbGF5ZXJDYXJkcygpO1xuICAgIHRoaXMuc2h1ZmZsZUNhcmRMaXN0KCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5wbGF5ZXJMaXN0Lmxlbmd0aDsgaisrKSB7XG4gICAgICAgIHRoaXMuZGVhbENhcmRUb1BsYXllcih0aGlzLnBsYXllckxpc3Rbal0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBhc3luYyBkZWFsRmxvcENhcmRzIC0gTWFuYWdlcyBkZWFsaW5nIGZsb3AgY2FyZHMgdG8gdGhlIHRhYmxlIGFuZCB1cGRhdGluZyB0aGUgZnJvbnRlbmQgdmlhIEpRdWVyeS5cbiAgICogRGVhbHMgZnJvbSB0aGUgZ2FtZSBjYXJkcyAodGhpcy5jYXJkcykgdG8gdGhlIHRhYmxlJ3MgY2FyZHMgKHRoaXMuY2FyZExpc3QpIGFuZFxuICAgKiB1c2VzIGFzeW5jICg1MDBtcykgaW4gb3JkZXIgdG8gc2ltdWxhdGUgZGVhbGluZyBjYXJkcyBpbiBhIHRpbWVseSBmYXNoaW9uLCBhcyBvcHBvc2VkIHRvIGFsbCBhdCBvbmNlLFxuICAgKiB1c2VzIEpRdWVyeSB0byB1cGRhdGUgdGhlIGZyb250ZW5kLlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgYXN5bmMgZGVhbEZsb3BDYXJkcygpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM7IGkrKykge1xuICAgICAgdGhpcy5kZWFsQ2FyZFRvVGFibGUodGhpcy5jYXJkTGlzdCwgdGhpcy5jYXJkcyk7XG4gICAgICAkKFwiI2JvYXJkXCIpLmNoaWxkcmVuKFwiLnRhYmxlY2FyZDpudGgtb2YtdHlwZShcIiArIFtpICsgMV0gKyBcIilcIikuY2hpbGRyZW4oXCJpbWdcIikuYXR0cihcInNyY1wiLCBcIi9jYXJkcy9cIiArIHRoaXMuY2FyZHNbaV0udG9VcHBlckNhc2UoKSArIFwiLnBuZ1wiKS5hdHRyKFwiYWx0XCIsIHRoZUdhbWUuY2FyZHNbaV0pLmNzcyhcInZpc2liaWxpdHlcIiwgXCJ2aXNpYmxlXCIpO1xuICAgICAgYXdhaXQgdGhpcy50aW1lb3V0KDUwMClcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogZGVhbFR1cm5DYXJkIC0gc2VlIGFib3ZlIGRlc2NyaXB0aW9uIGZvciBkZWFsRmxvcENhcmRzLCBob3dldmVyLCBvbmx5IGRlYWxzIHRoZSB0dXJuIGNhcmQuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBkZWFsVHVybkNhcmQoKSB7XG4gICAgdGhpcy5kZWFsQ2FyZFRvVGFibGUodGhpcy5jYXJkTGlzdCwgdGhpcy5jYXJkcyk7XG4gICAgJChcIiNib2FyZFwiKS5jaGlsZHJlbihcIi50YWJsZWNhcmQ6bnRoLW9mLXR5cGUoNClcIikuY2hpbGRyZW4oXCJpbWdcIikuYXR0cihcInNyY1wiLCBcIi9jYXJkcy9cIiArIHRoaXMuY2FyZHNbM10udG9VcHBlckNhc2UoKSArIFwiLnBuZ1wiKS5hdHRyKFwiYWx0XCIsIHRoZUdhbWUuY2FyZHNbM10pLmNzcyhcInZpc2liaWxpdHlcIiwgXCJ2aXNpYmxlXCIpO1xuICB9XG5cbiAgLyoqXG4gICAqIGRlYWxSaXZlckNhcmQgLSBzZWUgYWJvdmUgZGVzY3JpcHRpb24gZm9yIGRlYWxGbG9wQ2FyZHMsIGhvd2V2ZXIsIG9ubHkgZGVhbHMgdGhlIHJpdmVyIGNhcmQuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBkZWFsUml2ZXJDYXJkKCkge1xuICAgIHRoaXMuZGVhbENhcmRUb1RhYmxlKHRoaXMuY2FyZExpc3QsIHRoaXMuY2FyZHMpO1xuICAgICQoXCIjYm9hcmRcIikuY2hpbGRyZW4oXCIudGFibGVjYXJkOm50aC1vZi10eXBlKDUpXCIpLmNoaWxkcmVuKFwiaW1nXCIpLmF0dHIoXCJzcmNcIiwgXCIvY2FyZHMvXCIgKyB0aGlzLmNhcmRzWzRdLnRvVXBwZXJDYXNlKCkgKyBcIi5wbmdcIikuYXR0cihcImFsdFwiLCB0aGVHYW1lLmNhcmRzWzRdKS5jc3MoXCJ2aXNpYmlsaXR5XCIsIFwidmlzaWJsZVwiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiByZW1vdmVBbGxQbGF5ZXJDYXJkcyAtIFJlc2V0cyBhbGwgcGxheWVycycgY2FyZHMgdG8gYW4gZW1wdHkgYXJyYXkuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICByZW1vdmVBbGxQbGF5ZXJDYXJkcygpIHtcbiAgICBmb3IgKGxldCBwbGF5ZXIgb2YgdGhpcy5wbGF5ZXJMaXN0KSB7XG4gICAgICBwbGF5ZXIuY2FyZHMgPSBbXTtcbiAgICAgIHRoaXMudXBkYXRlRGlzcGxheShwbGF5ZXIpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBkZWFsQ2FyZFRvVGFibGUgLSBEZWFscyB0aGUgdG9wIGNhcmQgZnJvbSB0aGUgY2FyZExpc3QgdG8gdGhlIHRhYmxlIGJ5IG1vdmluZyBpdCB0byB0aGlzLmNhcmRzLlxuICAgKiBTaGlmdHMgdGhlIGFycmF5IGFmdGVyd2FyZHMuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBkZWFsQ2FyZFRvVGFibGUoKSB7XG4gICAgdGhpcy5jYXJkcy5wdXNoKHRoaXMuY2FyZExpc3RbMF0pO1xuICAgIHRoaXMuY2FyZExpc3Quc2hpZnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBkZWFsQ2FyZFRvUGxheWVyIC0gRGVhbHMgY2FyZHMgZnJvbSBjYXJkTGlzdCB0byBwbGF5ZXJzIGNhcmRzLlxuICAgKiBTaGlmdHMgdGhlIGFycmF5IGFmdGVyd2FyZHMuXG4gICAqXG4gICAqIEBwYXJhbSAge1BsYXllcn0gcGxheWVyIHdoaWNoIHBsYXllciByZWNlaXZlcyB0aGUgY2FyZHMuXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBkZWFsQ2FyZFRvUGxheWVyKHBsYXllcikge1xuICAgIHBsYXllci5jYXJkcy5wdXNoKHRoaXMuY2FyZExpc3RbMF0pO1xuICAgIHRoaXMuY2FyZExpc3Quc2hpZnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBzaHVmZmxlQ2FyZExpc3QgLSBTaHVmZmxlcyB0aGlzLmNhcmRMaXN0LlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgc2h1ZmZsZUNhcmRMaXN0KCkge1xuICAgIGxldCB0ZW1wTGlzdCA9IHRoaXMuY2FyZExpc3Q7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmNhcmRMaXN0Lmxlbmd0aDsgaisrKSB7XG4gICAgICBsZXQgaW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0ZW1wTGlzdC5sZW5ndGgpO1xuICAgICAgdGhpcy5jYXJkTGlzdFtqXSA9IHRlbXBMaXN0W2luZGV4XTtcbiAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgIHRlbXBMaXN0LnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIGNyZWF0ZUNhcmRMaXN0IC0gQ3JlYXRlcyB0aGUgbGlzdCBvZiBjYXJkcyBhbmQgc2F2ZXMgdG8gdGhpcy5jYXJkTGlzdC5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGNyZWF0ZUNhcmRMaXN0KCkge1xuICAgIGxldCBjYXJkU3ltYm9scyA9IFtcbiAgICAgIFwiQVwiLFxuICAgICAgXCIyXCIsXG4gICAgICBcIjNcIixcbiAgICAgIFwiNFwiLFxuICAgICAgXCI1XCIsXG4gICAgICBcIjZcIixcbiAgICAgIFwiN1wiLFxuICAgICAgXCI4XCIsXG4gICAgICBcIjlcIixcbiAgICAgIFwiVFwiLFxuICAgICAgXCJKXCIsXG4gICAgICBcIlFcIixcbiAgICAgIFwiS1wiXG4gICAgXTtcbiAgICBsZXQgc3VpdFN5bWJvbHMgPSBbXCJjXCIsIFwiZFwiLCBcImhcIiwgXCJzXCJdO1xuICAgIHRoaXMuY2FyZExpc3QgPSBbXTtcbiAgICBmb3IgKGxldCBzdWl0ID0gMDsgc3VpdCA8IDQ7IHN1aXQrKykge1xuICAgICAgZm9yIChsZXQgdmFsdWUgPSAwOyB2YWx1ZSA8IDEzOyB2YWx1ZSsrKSB7XG4gICAgICAgIGxldCB0ZW1wQ2FyZCA9IGNhcmRTeW1ib2xzW3ZhbHVlXSArIHN1aXRTeW1ib2xzW3N1aXRdO1xuICAgICAgICB0aGlzLmNhcmRMaXN0LnB1c2godGVtcENhcmQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBnZXRIdW1hblBsYXllciAtIGFzc2lnbnMgaHVtYW5QbGF5ZXIgdmFyaWFibGUgdG8gdGhlIGh1bWFuIHBsYXllci5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGdldEh1bWFuUGxheWVyKCkge1xuICAgIGZvciAocGxheWVyIG9mIHBsYXllcmxpc3QpIHtcbiAgICAgIGlmICh0aGlzLnBsYXllci5pc0h1bWFuKSB7XG4gICAgICAgIHRoaXMuaHVtYW5QbGF5ZXIgPSB0aGlzLnBsYXllcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogcGxheWVyQ2hlY2sgLSBQcm92aWRlcyBmdW5jdGlvbmFsaXR5IGZvciB0aGUgaHVtYW4gcGxheWVyIHRvIGNoZWNrLlxuICAgKiBDaGVja3MgdG8gc2VlIGlmIHNvbWVvbmUgcmFpc2VkIGFuZCBpZiB0aGUgdXNlciBoYXMgYWxyZWFkeSBjYWxsZWQuXG4gICAqIFBhc3NlcyB0aHJvdWdoIHRvIGNoZWNrIGZ1bmN0aW9uIGluIHBsYXllci5qcywgYWR2YW5jZXMgdHVybiBmb2xsb3dpbmcuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBwbGF5ZXJDaGVjaygpIHtcbiAgICBpZiAoIXRoaXMuZGlkU29tZW9uZVJhaXNlICYmIHRoaXMuaHVtYW5QbGF5ZXIuYmV0Q291bnQgPT0gdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50KSB7XG4gICAgICB0aGlzLmh1bWFuUGxheWVyLkNoZWNrKCk7XG4gICAgICB0aGlzLmFkdmFuY2VUdXJuKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIHBsYXllckNhbGwgLSBQcm92aWRlcyBmdW5jdGlvbmFsaXR5IGZvciB0aGUgaHVtYW4gcGxheWVyIHRvIGNhbGwuXG4gICAqIEZpcnN0IGNoZWNrcyB0byBzZWUgaWYgdGhlIHBsYXllciBjYW4gY2FsbCB0aGUgcmFpc2UsIHJldHVybnMgZmFsc2VcbiAgICogaWYgbm90LCByZXR1cm5zIHRydWUgaWYgcG9zc2libGUuXG4gICAqIFBhc3NlcyB0aHJvdWdoIHRvIGNhbGwgZnVuY3Rpb24gaW4gcGxheWVyLmpzLCBhZHZhbmNlcyB0dXJuIGZvbGxvd2luZy5cbiAgICpcbiAgICogQHJldHVybiB7Ym9vbGVhbn0gdHJ1ZSBvciBmYWxzZVxuICAgKi9cbiAgcGxheWVyQ2FsbChyYWlzaW5nID0gZmFsc2UpIHtcbiAgICBpZiAoIXRoaXMuaHVtYW5QbGF5ZXIuQ2FsbCh0aGlzLnJhaXNlQW1vdW50c1t0aGlzLmFjdGl2ZVBvdF0ucmFpc2VBbW91bnQsIHJhaXNpbmcpKSB7XG4gICAgICBhbGVydChcIllvdSBjYW5ub3QgY2FsbCB0aGlzIGJldCwgeW91IG5lZWQgbW9yZSBjaGlwcy5cIilcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLmFkdmFuY2VUdXJuKCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogcGxheWVyRm9sZCAtIFByb3ZpZGVzIGZ1bmN0aW9uYWxpdHkgZm9yIHRoZSBodW1hbiBwbGF5ZXIgdG8gZm9sZC5cbiAgICogUGFzc2VzIHRocm91Z2ggdG8gZm9sZCBmdW5jdGlvbiBpbiBwbGF5ZXIuanMsIGFkdmFuY2VzIHR1cm4gZm9sbG93aW5nLlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgcGxheWVyRm9sZCgpIHtcbiAgICB0aGlzLmh1bWFuUGxheWVyLkZvbGQoKTtcbiAgICB0aGlzLmFkdmFuY2VUdXJuKCk7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBwbGF5ZXJSYWlzZSAtIFByb3ZpZGVzIGZ1bmN0aW9uYWxpdHkgZm9yIGh1bWFuIHBsYXllciB0byByYWlzZS5cbiAgICpcbiAgICogQHBhcmFtICB7bnVtYmVyfSBhbW91bnQgYW1vdW50IG9mIGNoaXBzIHRoZSB1c2VyIHdpc2hlcyB0byByYWlzZS5cbiAgICogQHJldHVybiB7Ym9vbGVhbn0gIHRydWUgb3IgZmFsc2UuXG4gICAqL1xuICBwbGF5ZXJSYWlzZShhbW91bnQpIHtcbiAgICBpZiAodGhpcy5odW1hblBsYXllci5iZXRDb3VudCAhPSB0aGlzLnJhaXNlQW1vdW50c1t0aGlzLmFjdGl2ZVBvdF0ucmFpc2VBbW91bnQpIHsgLy8gRmlyc3QgY2hlY2tzIHRvIHNlZSBpZiB0aGVpciBiZXQgaXMgZXF1YWwgdG8gdGhlIHJhaXNlQW1vdW50LCBpZiBzbywgbWFrZXMgdGhlbSBjYWxsIGZpcnN0LCBpZiBub3QsIGxldHMgdGhlbSByYWlzZS5cbiAgICAgIGlmICghdGhpcy5wbGF5ZXJDYWxsKGFtb3VudCwgdHJ1ZSkpIHtcbiAgICAgICAgYWxlcnQoXCJZb3UgY2Fubm90IHJhaXNlIG5vdywgeW91IG5lZWQgbW9yZSBjaGlwcy5cIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSAvLyBJZiB1c2VycyBpbnB1dCBhbW91bnQgaXNuJ3QgbGFyZ2VyIHRoYW4gdGhlaXIgY2hpcCBjb3VudCwgYWxsb3dzIHRoZSByYWlzZSwgY2hhbmdlcyB0aGUgcmFpc2VBbW91bnQgYW5kIHBhc3NlcyB0aHJvdWdoIHRvIHRoZSByYWlzZSBmdW5jdGlvbi5cbiAgICAgIGxldCBvbGRSYWlzZSA9IHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudDtcbiAgICAgIGxldCBuZXdSYWlzZSA9IGFtb3VudCArIHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudDtcbiAgICAgIHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCA9IG5ld1JhaXNlXG4gICAgICBpZiAodGhpcy5odW1hblBsYXllci5SYWlzZShhbW91bnQpKSB7XG4gICAgICAgIHRoaXMuZGlkU29tZW9uZVJhaXNlID0gdGhpcy5odW1hblBsYXllcjtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGVsc2UgeyAvLyBJZiBmYWlsZWQgb24gdGhlIGNhbGwsIHJldHVybnMgZmFsc2UuXG4gICAgICAgIHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCA9IG9sZFJhaXNlO1xuICAgICAgICBhbGVydChcIllvdSBjYW5ub3QgcmFpc2Ugbm93LCB5b3UgbmVlZCBtb3JlIGNoaXBzLlwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgeyAvLyBJZiB0aGV5J3JlIGFsbG93ZWQgdG8gcmFpc2UsIGFsbG93cyBmb3IgYW4gaW5wdXQgb2YgYW1vdW50LlxuICAgICAgbGV0IG9sZFJhaXNlID0gdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50O1xuICAgICAgbGV0IG5ld1JhaXNlID0gYW1vdW50ICsgdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50O1xuICAgICAgdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50ID0gbmV3UmFpc2VcbiAgICAgIGlmICh0aGlzLmh1bWFuUGxheWVyLlJhaXNlKGFtb3VudCkpIHtcbiAgICAgICAgdGhpcy5kaWRTb21lb25lUmFpc2UgPSB0aGlzLmh1bWFuUGxheWVyO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7IC8vIElmIGlucHV0IGFtb3VudCBpcyB0b28gbGFyZ2UsIHJldHVybnMgZmFsc2UgYW5kIGEgd2FybmluZy5cbiAgICAgICAgdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50ID0gb2xkUmFpc2U7XG4gICAgICAgIGFsZXJ0KFwiWW91IGNhbm5vdCByYWlzZSBub3csIHlvdSBuZWVkIG1vcmUgY2hpcHMuXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogYXN5bmMgc2ltdWxhdGVSb3VuZHMgLSBTaW11bGF0ZXMgYSByb3VuZCBvZiB0aGUgZ2FtZSwgaS5lLiBmb3VyIG1haW4gcm91bmRzIGFuZCBzdWJyb3VuZHMgb2YgYmV0dGluZywgYWxsIHRhYmxlIGNhcmRzIGRlYWx0LlxuICAgKlxuICAgKiBAcmV0dXJuIHtib29sZWFufSB0cnVlIG9yIGZhbHNlLCBsb29wcyB0aGUgZ2FtZSB1bnRpbCB0cnVlICh3aGVuIGEgcGxheWVyIGhhcyB3b24pLlxuICAgKi9cbiAgYXN5bmMgc2ltdWxhdGVSb3VuZHMoKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyOyBpKyspIHsgLy8gVHdvIHN1Yi1yb3VuZHMgb2YgYmV0dGluZ1xuICAgICAgaWYgKHRoaXMuc3ViUm91bmQgPT0gMCB8fCAodGhpcy5zdWJSb3VuZCA9PSAxICYmIHRoaXMuZGlkU29tZW9uZVJhaXNlKSB8fCB0aGlzLnN1YlJvdW5kID09IDIpIHsgLy8gSWYgaXQncyBhIHN1YnJvdW5kLCBvciBpZiBzb21lb25lIHJhaXNlZCwgY29udGludWUgdG8gYWxsb3cgY2FsbGluZywgY2hlY2tpbmcgZXRjLlxuICAgICAgICBmb3IgKGxldCBwbGF5ZXIgb2YgdGhpcy5wbGF5ZXJMaXN0KSB7XG4gICAgICAgICAgaWYgKHRoaXMucGxheWVyTGlzdC5maWx0ZXIoKGEpID0+IHsgcmV0dXJuIChhLnN0YXR1cyA9PSBcImZvbGRlZFwiIHx8IGEuc3RhdHVzID09IFwib3V0XCIpICYmIGEgIT0gcGxheWVyIH0pLmxlbmd0aCA9PSAodGhpcy5wbGF5ZXJMaXN0Lmxlbmd0aCAtIDEpKSB7XG4gICAgICAgICAgICAvLyBDb21wbGV0ZXMgYSBjaGVjayB0byBzZWUgaWYgYWxsLWJ1dC1vbmUgcGxheWVycyBoYXZlIGZvbGRlZCBvciBhcmUgb3V0IGFuZCBjb21wbGV0ZXMgdGhlIGZpbmFsIHdpbm5lciBmdW5jdGlvbmFsaXR5IGlmIHNvLlxuICAgICAgICAgICAgICB0aGlzLndpbm5lciA9IHBsYXllclxuICAgICAgICAgICAgICBpZiAodGhpcy53aW5uZXIgPT0gdGhpcy5odW1hblBsYXllcikge1xuICAgICAgICAgICAgICAgIGxldCByb3VuZHNXb24gPSAoSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3JvdW5kc1dvbicpKSArIDEpXG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdyb3VuZHNXb24nLCByb3VuZHNXb24pO1xuICAgICAgICAgICAgICAgIGFsZXJ0KFwiRG9uJ3QgY2hlYXQuXCIpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdGhpcy53aW5uZXIuYWRkQ2hpcHModGhpcy5Qb3QpO1xuICAgICAgICAgICAgICB0aGlzLnJlc2V0UG90KCk7XG4gICAgICAgICAgICAgICQoXCIjc2VhdFwiICsgdGhpcy53aW5uZXIuSUQpLmFkZENsYXNzKFwid2lubmVyXCIpO1xuICAgICAgICAgICAgICAkKFwiI3JpZ2h0LXNpZGViYXJcIikuY2hpbGRyZW4oXCJoM1wiKS50ZXh0KFwiV2lubmVyXCIpO1xuICAgICAgICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikudGV4dChcIlRoZSB3aW5uZXIgaXMgXCIgKyB0aGlzLndpbm5lci5uYW1lICsgXCIsIHdobyB3b24gYmVjYXVzZSBldmVyeW9uZSBlbHNlIGZvbGRlZFwiKTtcbiAgICAgICAgICAgICAgdGhpcy51cGRhdGVEaXNwbGF5KHRoaXMud2lubmVyKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2hlY2tGaW5hbFdpbm5lcigpO1xuXG4gICAgICAgICAgfSBlbHNlIGlmICghcGxheWVyLmlzSHVtYW4gJiYgcGxheWVyLnN0YXR1cyAhPSBcImZvbGRlZFwiICYmIHBsYXllci5zdGF0dXMgIT0gXCJvdXRcIiAmJiBwbGF5ZXIuc3RhdHVzICE9IFwiQWxsLUluXCIpIHtcbiAgICAgICAgICAgIC8vIElmIHBsYXllciBpcyBzaW11bGF0ZWQgKG5vdCBodW1hbiksIG5vdCBmb2xkZWQsIGV0Yy4sIGFsbG93cyB0aGVtIHRvIHBlcmZvcm0gY2hlY2tTdGF0dXMsIHRoZW4gdXBkYXRlcyBkaXNwbGF5LlxuICAgICAgICAgICAgJChcIiNzZWF0XCIgKyBwbGF5ZXIuSUQpLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy50aW1lb3V0KGdldFJhbmRvbUludCg1MDAsIDQwMDApKVxuICAgICAgICAgICAgdGhpcy5jaGVja1N0YXR1cyhwbGF5ZXIpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVEaXNwbGF5KHBsYXllcik7XG4gICAgICAgICAgICAkKFwiI3NlYXRcIiArIHBsYXllci5JRCkucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZWxzZSBpZiAocGxheWVyLmlzSHVtYW4gJiYgcGxheWVyLnN0YXR1cyAhPSBcImZvbGRlZFwiICYmIHBsYXllci5zdGF0dXMgIT0gXCJvdXRcIiAmJiBwbGF5ZXIuc3RhdHVzICE9IFwiQWxsLUluXCIpIHtcbiAgICAgICAgICAgIC8vIElmIHBsYXllciBpcyBodW1hbiwgbm90IGZvbGRlZCBldGMuLCBhbGxvd3MgdGhlbSB0byBwZXJmb3JtIGFjdGlvbnMuXG4gICAgICAgICAgICBpZiAodGhpcy5kaWRTb21lb25lUmFpc2UgJiYgdGhpcy5kaWRTb21lb25lUmFpc2UgIT0gdGhpcy5odW1hblBsYXllcikge1xuICAgICAgICAgICAgICAvLyBjb250cm9scyB2aXNpYmlsaXR5IG9mIGNoZWNrIGFuZCBjYWxsIGJ1dHRvbnMgYmFzZWQgb24gaWYgc29tZW9uZSByYWlzZWQuXG4gICAgICAgICAgICAgICQoJy5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgxKScpLmNzcyhcInZpc2liaWxpdHlcIiwgXCJoaWRkZW5cIik7XG4gICAgICAgICAgICAgICQoJy5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgyKScpLmNzcyhcInZpc2liaWxpdHlcIiwgXCJ2aXNpYmxlXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgJCgnLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDEpJykuY3NzKFwidmlzaWJpbGl0eVwiLCBcInZpc2libGVcIik7XG4gICAgICAgICAgICAgICQoJy5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgyKScpLmNzcyhcInZpc2liaWxpdHlcIiwgXCJoaWRkZW5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5zdWJSb3VuZCAhPSAwIHx8IHBsYXllci5jaGlwcyA9PSAwKSB7XG4gICAgICAgICAgICAgIC8vIENvbnRyb2xzIHZpc2liaWxpdHkgb2YgcmFpc2UgYnV0dG9uLlxuICAgICAgICAgICAgICAkKCcuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMyknKS5jc3MoXCJ2aXNpYmlsaXR5XCIsIFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgJCgnLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDMpJykuY3NzKFwidmlzaWJpbGl0eVwiLCBcInZpc2libGVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkKFwiI3NlYXRcIiArIHBsYXllci5JRCkuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAkKFwiI2NvbnRyb2xzXCIpLmNoaWxkcmVuKFwiLmNvbnRyb2wtYnV0dG9uXCIpLnJlbW92ZUNsYXNzKFwiaW5hY3RpdmVcIik7XG4gICAgICAgICAgICB0aGlzLmh1bWFuUGxheWVyID0gcGxheWVyO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5wbGF5ZXJGaW5pc2hlZCgpOyAvLyBhd2FpdHMgdXNlciBpbnB1dCB2aWEgYnV0dG9uIHByZXNzIG9uIGZyb250ZW5kLlxuICAgICAgICAgICAgdGhpcy51cGRhdGVEaXNwbGF5KHBsYXllcik7XG4gICAgICAgICAgICAkKFwiI3NlYXRcIiArIHBsYXllci5JRCkucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAkKFwiI2NvbnRyb2xzXCIpLmNoaWxkcmVuKFwiLmNvbnRyb2wtYnV0dG9uXCIpLmFkZENsYXNzKFwiaW5hY3RpdmVcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3ViUm91bmQrKztcbiAgICAgIH1cbiAgICAgICBlbHNlIHtcbiAgICAgICAgdGhpcy5zdWJSb3VuZCA9IDA7XG4gICAgICAgIHRoaXMuZGlkU29tZW9uZVJhaXNlID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVzZXRSYWlzZXMoKTtcbiAgICAgICAgdGhpcy5zdWJSb3VuZFN0YXR1cyA9IFwiYWN0aXZlXCJcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5yZXNldFJhaXNlcygpO1xuICAgIHRoaXMuc3ViUm91bmQgPSAwO1xuICAgIHRoaXMuc3ViUm91bmRTdGF0dXMgPSBcImFjdGl2ZVwiXG4gICAgdGhpcy5kaWRTb21lb25lUmFpc2UgPSBmYWxzZTtcbiAgICB0aGlzLmluY3JlbWVudFJvdW5kKCk7XG5cbiAgICBpZiAodGhpcy5yb3VuZCA9PSAxKSB7XG4gICAgICB0aGlzLmRlYWxGbG9wQ2FyZHMoKVxuICAgICAgYXdhaXQgdGhpcy50aW1lb3V0KDMwMDApXG4gICAgICB0aGlzLmV2YWx1YXRlUGxheWVyQ2FyZHMoKVxuICAgIH0gZWxzZSBpZiAodGhpcy5yb3VuZCA9PSAyKSB7XG4gICAgICB0aGlzLmRlYWxUdXJuQ2FyZCgpXG4gICAgICBhd2FpdCB0aGlzLnRpbWVvdXQoMjAwMClcbiAgICAgIHRoaXMuZXZhbHVhdGVQbGF5ZXJDYXJkcygpXG4gICAgfSBlbHNlIGlmICh0aGlzLnJvdW5kID09IDMpIHtcbiAgICAgIHRoaXMuZGVhbFJpdmVyQ2FyZCgpXG4gICAgICBhd2FpdCB0aGlzLnRpbWVvdXQoMjAwMClcbiAgICAgIHRoaXMuZXZhbHVhdGVQbGF5ZXJDYXJkcygpXG4gICAgfSBlbHNlIGlmICh0aGlzLnJvdW5kID09IDQpIHtcbiAgICAgIHRoaXMuZXZhbHVhdGVXaW5uZXIoKVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTsgLy8gR2FtZSBsb29wIGhhc24ndCBmaW5pc2hlZFxuICB9XG5cbiAgLyoqXG4gICAqIGNoZWNrU3RhdHVzIC0gY2hlY2tzIHRoZSBwbGF5ZXIncyBzdGF0dXMgYW5kIHVwZGF0ZXMgdmFyaWFibGVzIGFjY29yZGluZ2x5LlxuICAgKlxuICAgKiBAcGFyYW0gIHtQbGF5ZXJ9IHBsYXllciB3aGljaCBwbGF5ZXIgdG8gcGVyZm9ybSB0aGUgYWN0aW9uIG9uLlxuICAgKiBAcmV0dXJuIHtQbGF5ZXIgfCBib29sZWFufSAgICAgICAgcmV0dXJucyB2YWx1ZSBvZiBpZiBzb21lb25lIHJhaXNlZCwgd2hpY2ggY2FuIGJlIGZhbHNlLCBvciB0aGUgcGxheWVyIHdoaWNoIHJhaXNlZC5cbiAgICovXG4gIGNoZWNrU3RhdHVzKHBsYXllcikge1xuICAgIGlmIChwbGF5ZXIuY2hpcHMgPj0gMCAmJiBwbGF5ZXIuc3RhdHVzICE9IFwiZm9sZGVkXCIpIHtcbiAgICAgIC8vIExldCBQbGF5ZXJzIFJhaXNlL0NhbGwvRm9sZFxuICAgICAgdGhpcy5zaW11bGF0ZVBsYXllcihwbGF5ZXIpO1xuICAgICAgc3dpdGNoIChwbGF5ZXIuc3RhdHVzKSB7XG4gICAgICAgIGNhc2UgXCJBbGwtSW5cIjpcbiAgICAgICAgICBwbGF5ZXIuZGlkUmFpc2VBbGxJbiA/IHRoaXMuZGlkU29tZW9uZVJhaXNlID0gdHJ1ZSA6IGZhbHNlXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJjYWxsZWRcIjpcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInJhaXNlZFwiOlxuICAgICAgICAgIHRoaXMuZGlkU29tZW9uZVJhaXNlID0gcGxheWVyO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5kaWRTb21lb25lUmFpc2U7XG4gIH1cblxuICAvKipcbiAgICogc2ltdWxhdGVQbGF5ZXIgLSBjaGVja3MgaWYgYSBwbGF5ZXIgaGFzIHJhaXNlZCBhbmQgcGFzc2VzIHRocm91Z2ggdG8gZG9SYW5kb21QbGF5ZXJBY3Rpb24gYW5kIGRvU3ViUm91bmRQbGF5ZXJBY3Rpb24uXG4gICAqXG4gICAqIEBwYXJhbSAge1BsYXllcn0gcGxheWVyIHRoZSBwbGF5ZXIgdG8gcGVyZm9ybSBhY3Rpb25zIG9uLlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgc2ltdWxhdGVQbGF5ZXIocGxheWVyKSB7XG4gICAgaWYgKHRoaXMucGxheWVyRmlyc3RTaWRlcG90ICE9PSAtMSAmJiB0aGlzLnBsYXllckZpcnN0U2lkZXBvdCA9PT0gcGxheWVyLklEKSB0aGlzLnBsYXllckZpcnN0U2lkZXBvdCA9IC0xO1xuICAgIGxldCBzb21lb25lUmFpc2VkID0gZmFsc2U7XG4gICAgbGV0IG90aGVyUGxheWVyID0gdGhpcy5kaWRTb21lb25lUmFpc2U7XG4gICAgaWYgKHRoaXMuc3ViUm91bmQgPT0gMCkge1xuICAgICAgaWYgKG90aGVyUGxheWVyKSB7XG4gICAgICAgIGlmIChvdGhlclBsYXllci5zdGF0dXMgPT09IFwicmFpc2VkXCIgJiYgb3RoZXJQbGF5ZXIuSUQgIT0gcGxheWVyLklEKSB7XG4gICAgICAgICAgLy8gaWYgb3RoZXJQbGF5ZXIgPSB0cnVlLCBtYWtlcyBzdXJlIHRoZSBwZXJzb24gd2hvIHJhaXNlZCBpc24ndCB0aGUgY3VycmVudCBwbGF5ZXIuXG4gICAgICAgICAgc29tZW9uZVJhaXNlZCA9IG90aGVyUGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmRvUmFuZG9tUGxheWVyQWN0aW9uKHBsYXllciwgc29tZW9uZVJhaXNlZCk7IC8vcGFzc2VzIHRocm91Z2ggdGhlIHBsYXllciB0byBwZXJmb3JtIHRoZSBhY3Rpb24gb24gYW5kIHRoZSBwZXJzb24gd2hvIHJhaXNlZCwgaWYgaXQncyBzZXQuXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChvdGhlclBsYXllcikge1xuICAgICAgICBpZiAob3RoZXJQbGF5ZXIuc3RhdHVzID09PSBcInJhaXNlZFwiICYmIG90aGVyUGxheWVyLklEICE9IHBsYXllci5JRCkge1xuICAgICAgICAgIC8vIGVuc3VyZXMgdGhlIHBsYXllciB3aG8gcmFpc2VkIGlzbid0IHRoZSBjdXJyZW50IHBsYXllci5cbiAgICAgICAgICBzb21lb25lUmFpc2VkID0gb3RoZXJQbGF5ZXI7XG4gICAgICAgIH0gZWxzZSBpZiAob3RoZXJQbGF5ZXIuc3RhdHVzICE9IFwicmFpc2VkXCIgJiYgb3RoZXJQbGF5ZXIgIT0gcGxheWVyKSB7XG4gICAgICAgICAgc29tZW9uZVJhaXNlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmRvU3ViUm91bmRQbGF5ZXJBY3Rpb24ocGxheWVyLCBzb21lb25lUmFpc2VkKTsgLy9wYXNzZXMgdGhyb3VnaCB0aGUgcGxheWVyIHRvIHBlcmZvcm0gdGhlIGFjdGlvbiBvbiBhbmQgdGhlIHBlcnNvbiB3aG8gcmFpc2VkLCBpZiBpdCdzIHNldC5cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogZG9SYW5kb21QbGF5ZXJBY3Rpb24gLSByYW5kb21seSBjaG9vc2VzIHRoZSBhY3Rpb24vcyB0byBwZXJmb3JtLCBpLmUuIHJhaXNlLCBjYWxsLCBjaGVjayBvciBmb2xkLlxuICAgKlxuICAgKiBAcGFyYW0gIHtQbGF5ZXJ9IHBsYXllciAgICAgICAgdGhlIHBsYXllciB0byBwZXJmb3JtIHRoZSBhY3Rpb25zIG9uLlxuICAgKiBAcGFyYW0gIHtQbGF5ZXJ9IHNvbWVvbmVSYWlzZWQgdGhlIHBsYXllciB0aGF0IHByZXZpb3VzbHkgcmFpc2VkLCBpZiByZXF1aXJlZC5cbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGRvUmFuZG9tUGxheWVyQWN0aW9uKHBsYXllciwgc29tZW9uZVJhaXNlZCkge1xuICAgIGlmICh0aGlzLnBsYXllckxpc3QuZmlsdGVyKChhKSA9PiB7IHJldHVybiAoYS5zdGF0dXMgPT0gXCJmb2xkZWRcIiB8fCBhLnN0YXR1cyA9PSBcIm91dFwiKSAmJiBhICE9IHBsYXllciB9KS5sZW5ndGggPT09ICh0aGlzLnBsYXllckxpc3QubGVuZ3RoIC0gMSkpIHtcbiAgICAgIC8vIGlmIGFsbCBvdGhlciBwbGF5ZXJzIGhhdmUgZm9sZGVkLCByZXR1cm5zIGNoZWNrIGluc3RlYWQgb2YgZm9sZGluZyBvciBvdGhlciBhY3Rpb25zLlxuICAgICAgcmV0dXJuIHBsYXllci5DaGVjaygpO1xuICAgIH1cbiAgICBzd2l0Y2ggKGdldFJhbmRvbUludCgwLCA2KSkge1xuICAgICAgY2FzZSAwOlxuICAgICAgY2FzZSAxOlxuICAgICAgY2FzZSAyOlxuICAgICAgY2FzZSAzOlxuICAgICAgICBpZiAoIXNvbWVvbmVSYWlzZWQgJiYgcGxheWVyLmJldENvdW50ID09IHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCkge1xuICAgICAgICAgIHJldHVybiBwbGF5ZXIuQ2hlY2soKTsgLy8gY2FuIGNoZWNrIGlmIG5vLW9uZSByYWlzZWQuXG4gICAgICAgIH0gZWxzZSBpZiAoIXBsYXllci5DYWxsKHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCkpIHtcbiAgICAgICAgICAvLyBmb2xkIGlmIHVuYWJsZSB0byBjYWxsIGR1ZSB0byBpbnN1ZmZpY2llbnQgY2hpcHNcbiAgICAgICAgICByZXR1cm4gcGxheWVyLkZvbGQoKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgNDpcbiAgICAgIGNhc2UgNTpcbiAgICAgIGNhc2UgNjogLy9yYWlzZVxuICAgICAgICBpZiAoc29tZW9uZVJhaXNlZCAmJiBwbGF5ZXIuYmV0Q291bnQgIT0gdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50ICYmICFwbGF5ZXIuaXNIdW1hbikge1xuICAgICAgICAgIGxldCBvbGRSYWlzZSA9IHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudDtcbiAgICAgICAgICBsZXQgbmV3UmFpc2UgPSBnZXRSYW5kb21JbnQoTWF0aC5yb3VuZCgxKSwgKHBsYXllci5iZXRDb3VudCA9PSBvbGRSYWlzZSA/IHBsYXllci5jaGlwcyA6IHBsYXllci5iZXRDb3VudCA8IG9sZFJhaXNlID8gKChwbGF5ZXIuY2hpcHMgLSAob2xkUmFpc2UgLSBwbGF5ZXIuYmV0Q291bnQpIDw9IDAgPyBmYWxzZSA6IHBsYXllci5jaGlwcyAtIChvbGRSYWlzZSAtIHBsYXllci5iZXRDb3VudCkpKSA6IChwbGF5ZXIuYmV0Q291bnQgLSBvbGRSYWlzZSkgKSkgLy8gUmFuZG9tIGludGVnZXIgYmV0d2VlbiAxIGFuZCBhIG1heGltdW0sIG1heGltdW0gaXMgYmFzZWQgb2ZmIG9mIHRoZSBjdXJyZW50IGNoaXAgY291bnQsIHJhaXNlIGFtb3VudCBhbmQgcGxheWVyJ3MgYmV0LlxuICAgICAgICAgIGlmICghcGxheWVyLkNhbGwob2xkUmFpc2UsIHRydWUpKSB7cmV0dXJuIHRoaXMuZG9SYW5kb21QbGF5ZXJBY3Rpb24ocGxheWVyLCBzb21lb25lUmFpc2VkKX0gLy8gaWYgdGhlIHBsYXllciBjYW4ndCBjYWxsLCB0cnkgdG8gZG9SYW5kb21QbGF5ZXJBY3Rpb24gYWdhaW5cbiAgICAgICAgICB0aGlzLnJhaXNlQW1vdW50c1t0aGlzLmFjdGl2ZVBvdF0ucmFpc2VBbW91bnQgPSBuZXdSYWlzZSArIG9sZFJhaXNlXG4gICAgICAgICAgaWYgKGlzTmFOKG5ld1JhaXNlKSkgZGVidWdnZXJcbiAgICAgICAgICBpZiAoIXBsYXllci5SYWlzZShuZXdSYWlzZSkpIHtcbiAgICAgICAgICAgIHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCA9IG9sZFJhaXNlO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZG9SYW5kb21QbGF5ZXJBY3Rpb24ocGxheWVyLCBzb21lb25lUmFpc2VkKTsgLy8gaWYgdGhlIHBsYXllciBjYW4ndCByYWlzZSB0aGUgYW1vdW50LCB0cnkgdG8gZG9SYW5kb21QbGF5ZXJBY3Rpb24gYWdhaW5cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgbGV0IG9sZFJhaXNlID0gdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50O1xuICAgICAgICAgIGxldCBuZXdSYWlzZSA9IGdldFJhbmRvbUludChNYXRoLnJvdW5kKDEpLCAocGxheWVyLmJldENvdW50ID09IG9sZFJhaXNlID8gcGxheWVyLmNoaXBzIDogcGxheWVyLmJldENvdW50IDwgb2xkUmFpc2UgPyAoKHBsYXllci5jaGlwcyAtIChvbGRSYWlzZSAtIHBsYXllci5iZXRDb3VudCkgPD0gMCA/IGZhbHNlIDogcGxheWVyLmNoaXBzIC0gKG9sZFJhaXNlIC0gcGxheWVyLmJldENvdW50KSkpIDogKHBsYXllci5iZXRDb3VudCAtIG9sZFJhaXNlKSApKSAvLyBSYW5kb20gaW50ZWdlciBiZXR3ZWVuIDEgYW5kIGEgbWF4aW11bSwgbWF4aW11bSBpcyBiYXNlZCBvZmYgb2YgdGhlIGN1cnJlbnQgY2hpcCBjb3VudCwgcmFpc2UgYW1vdW50IGFuZCBwbGF5ZXIncyBiZXQuXG4gICAgICAgICAgaWYgKG5ld1JhaXNlID09IDApIHtyZXR1cm4gdGhpcy5kb1JhbmRvbVBsYXllckFjdGlvbihwbGF5ZXIsIHNvbWVvbmVSYWlzZWQpfSAvLyBQcmVjYXV0aW9uIHRvIGVuc3VyZSB0aGF0IG5vLW9uZSByYWlzZXMgYSB2YWx1ZSBvZiAwLlxuICAgICAgICAgIHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCA9IG5ld1JhaXNlICsgb2xkUmFpc2VcbiAgICAgICAgICBpZiAoIXBsYXllci5SYWlzZShuZXdSYWlzZSkpIHtcbiAgICAgICAgICAgIHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCA9IG9sZFJhaXNlO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZG9SYW5kb21QbGF5ZXJBY3Rpb24ocGxheWVyLCBzb21lb25lUmFpc2VkKTsgLy8gaWYgdGhlIHBsYXllciBjYW4ndCByYWlzZSB0aGUgYW1vdW50LCB0cnkgdG8gZG9SYW5kb21QbGF5ZXJBY3Rpb24gYWdhaW5cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gIH1cblxuXG4gIC8qKlxuICAgKiBkb1N1YlJvdW5kUGxheWVyQWN0aW9uIC0gcmFuZG9tbHkgY2hvb3NlcyB0aGUgYWN0aW9uL3MgdG8gcGVyZm9ybSwgaS5lLiBjYWxsLCBjaGVjayBvciBmb2xkLCBidXQgbm90IHJhaXNlLlxuICAgKlxuICAgKiBAcGFyYW0gIHtQbGF5ZXJ9IHBsYXllciAgICAgICAgZGVzY3JpcHRpb25cbiAgICogQHBhcmFtICB7UGxheWVyfSBzb21lb25lUmFpc2VkIGRlc2NyaXB0aW9uXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBkb1N1YlJvdW5kUGxheWVyQWN0aW9uKHBsYXllciwgc29tZW9uZVJhaXNlZCkge1xuICAgIC8vIEZvcmNlIGNoZWNrIHdoZW4gZXZlcnlvbmUgZWxzZSBmb2xkZWRcbiAgICBpZiAodGhpcy5wbGF5ZXJMaXN0LmZpbHRlcigoYSkgPT4geyByZXR1cm4gKGEuc3RhdHVzID09IFwiZm9sZGVkXCIgfHwgYS5zdGF0dXMgPT0gXCJvdXRcIikgJiYgYSAhPSBwbGF5ZXIgfSkubGVuZ3RoID09PSAodGhpcy5wbGF5ZXJMaXN0Lmxlbmd0aCAtIDEpKSB7XG4gICAgICByZXR1cm4gcGxheWVyLkNoZWNrKCk7XG4gICAgfVxuICAgIGlmIChzb21lb25lUmFpc2VkLmJldCAhPSBwbGF5ZXIuYmV0Q291bnQpIHtcbiAgICAgIHN3aXRjaCAoZ2V0UmFuZG9tSW50KDAsIDYpKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICBjYXNlIDI6XG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgY2FzZSA0OlxuICAgICAgICAgIGlmICghc29tZW9uZVJhaXNlZCAmJiBwbGF5ZXIuYmV0Q291bnQgPT0gdGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50KSB7XG4gICAgICAgICAgICByZXR1cm4gcGxheWVyLkNoZWNrKCk7XG4gICAgICAgICAgfSBlbHNlIGlmICghcGxheWVyLkNhbGwodGhpcy5yYWlzZUFtb3VudHNbdGhpcy5hY3RpdmVQb3RdLnJhaXNlQW1vdW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIHBsYXllci5Gb2xkKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDU6XG4gICAgICAgIGNhc2UgNjpcbiAgICAgICAgICBwbGF5ZXIuRm9sZCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBwbGF5ZXJEaXNwbGF5IC0gUmUtZW5hYmxlcyB2aXNpYmlsaXR5IG9mIGVhY2ggcGxheWVyJ3MgZGlzcGxheSB3aGVuIGNhbGxlZCwgd2l0aCB0aGVpciBuYW1lLCBuZXcgY2hpcCBhbW91bnQgZXRjLlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgcGxheWVyRGlzcGxheSgpIHtcbiAgICBsZXQgaWRTdHJpbmcgPSBcIiNzZWF0XCJcbiAgICBmb3IgKGxldCBwbGF5ZXIgb2YgdGhpcy5wbGF5ZXJMaXN0KSB7XG4gICAgICAkKGlkU3RyaW5nICsgcGxheWVyLklEKS5jc3MoJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpO1xuICAgICAgJChpZFN0cmluZyArIHBsYXllci5JRCkuY2hpbGRyZW4oXCIucGxheWVyaW5mb1wiKS5jaGlsZHJlbihcIi5uYW1lXCIpLnRleHQoXCJOYW1lOiBcIiArIHBsYXllci5uYW1lKTtcbiAgICAgICQoaWRTdHJpbmcgKyBwbGF5ZXIuSUQpLmNoaWxkcmVuKFwiLnBsYXllcmluZm9cIikuY2hpbGRyZW4oXCIuY2hpcHNcIikuY2hpbGRyZW4oXCJwXCIpLnRleHQoXCJDaGlwczogXCIgKyBwbGF5ZXIuY2hpcHMpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiB1cGRhdGVEaXNwbGF5IC0gVXBkYXRlcyB0aGUgZGlzcGxheSBiYXNlZCBvbiBpbnB1dC5cbiAgICpcbiAgICogQHBhcmFtICB7UGxheWVyIHwgc3RyaW5nfSBpbmZvIENhbiBiZSBQbGF5ZXIgb3Igc3RyaW5nLCBmdW5jdGlvbiBwZXJmb3JtcyBkaWZmZXJlbnQgYWN0aW9ucyBiYXNlZCBvbiBpbnB1dC5cbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIHVwZGF0ZURpc3BsYXkoaW5mbykge1xuICAgIGlmIChpbmZvIGluc3RhbmNlb2YgUGxheWVyKSB7XG4gICAgICBsZXQgaWRTdHJpbmcgPSBcIiNzZWF0XCJcbiAgICAgIGxldCBwbGF5ZXIgPSBpbmZvXG4gICAgICAkKGlkU3RyaW5nICsgcGxheWVyLklEKS5jaGlsZHJlbihcIi5wbGF5ZXJpbmZvXCIpLmNoaWxkcmVuKFwiLmNoaXBzXCIpLnRleHQoXCJDaGlwczogXCIgKyBwbGF5ZXIuY2hpcHMpO1xuICAgICAgJChpZFN0cmluZyArIHBsYXllci5JRCkuY2hpbGRyZW4oXCIucGxheWVyaW5mb1wiKS5jaGlsZHJlbihcIi5zdGF0dXNcIikudGV4dChwbGF5ZXIuc3RhdHVzKVxuICAgICAgJChcIiNtYWluLXBvdFwiKS50ZXh0KFwiTWFpbiBwb3Q6IFwiICsgdGhpcy5wb3RbMF0pO1xuICAgICAgJChcIiNzaWRlLXBvdFwiKS50ZXh0KFwiXCIpO1xuICAgICAgaWYgKHRoaXMucG90Lmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCB0aGlzLnBvdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICQoXCIjc2lkZS1wb3RcIikuYXBwZW5kKFwiU2lkZSBwb3QgXCIgKyBpICsgXCI6IFwiICsgdGhpcy5wb3RbaV0gKyBcIjxicj5cIik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChwbGF5ZXIuc3RhdHVzID09IFwiYWN0aXZlXCIgJiYgcGxheWVyLmlzSHVtYW4pIHtcbiAgICAgICAgJChpZFN0cmluZyArIHBsYXllci5JRCkucmVtb3ZlQ2xhc3MoXCJmb2xkZWRcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChwbGF5ZXIuaXNIdW1hbikge1xuICAgICAgICBsZXQgbnVtT2ZHYW1lcyA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdudW1PZkdhbWVzJykpXG4gICAgICAgIGxldCBudW1PZlJvdW5kcyA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdudW1PZlJvdW5kcycpKVxuICAgICAgICBsZXQgbnVtT2ZXaW5zID0gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ251bU9mV2lucycpKVxuICAgICAgICBsZXQgd2luUmF0ZSA9IE1hdGgucm91bmQoKG51bU9mV2lucyAvIG51bU9mR2FtZXMpICogMTAwKVxuICAgICAgICBOdW1iZXIuaXNOYU4od2luUmF0ZSkgPyB3aW5SYXRlID0gMCA6IGZhbHNlXG4gICAgICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjZ2FtZXMtcGxheWVkXCIpLnRleHQoXCJHYW1lcyBwbGF5ZWQ6IFwiICsgbnVtT2ZHYW1lcyk7XG4gICAgICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjcm91bmRzLXBsYXllZFwiKS50ZXh0KFwiUm91bmRzIHBsYXllZDogXCIgKyBudW1PZlJvdW5kcyk7XG4gICAgICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjcm91bmRzLXdvblwiKS50ZXh0KFwiUm91bmRzIFdvbjogXCIgKyBKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncm91bmRzV29uJykpKTtcbiAgICAgICAgJChcIiNsZWZ0LXNpZGViYXJcIikuY2hpbGRyZW4oXCIucGxheWVyLXJlY29yZFwiKS5jaGlsZHJlbihcIiNnYW1lcy13b25cIikudGV4dChcIk51bWJlciBvZiBXaW5zOiBcIiArIG51bU9mV2lucyk7XG4gICAgICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjcHJvZml0XCIpLnRleHQoXCJUb3RhbCBQcm9maXQ6IFwiICsgSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Byb2ZpdEFtb3VudCcpKSk7XG4gICAgICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjd2luLXJhdGVcIikudGV4dChcIldpbiBSYXRlOiBcIiArIHdpblJhdGUgKyBcIiVcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChwbGF5ZXIuc3RhdHVzID09IFwiZm9sZGVkXCIpIHtcbiAgICAgICAgJChpZFN0cmluZyArIHBsYXllci5JRCkuYWRkQ2xhc3MoXCJmb2xkZWRcIik7XG4gICAgICAgICQoaWRTdHJpbmcgKyBwbGF5ZXIuSUQpLmNoaWxkcmVuKFwiLmNhcmQxXCIpLmNoaWxkcmVuKFwiaW1nXCIpLmF0dHIoXCJzcmNcIiwgXCIvY2FyZHMvZ3JheV9iYWNrLnBuZ1wiKTtcbiAgICAgICAgJChpZFN0cmluZyArIHBsYXllci5JRCkuY2hpbGRyZW4oXCIuY2FyZDJcIikuY2hpbGRyZW4oXCJpbWdcIikuYXR0cihcInNyY1wiLCBcIi9jYXJkcy9ncmF5X2JhY2sucG5nXCIpO1xuICAgICAgfSBlbHNlIGlmIChwbGF5ZXIuc3RhdHVzID09IFwiYWN0aXZlXCIgJiYgIXBsYXllci5pc0h1bWFuKSB7XG4gICAgICAgICQoaWRTdHJpbmcgKyBwbGF5ZXIuSUQpLnJlbW92ZUNsYXNzKFwiZm9sZGVkXCIpO1xuICAgICAgICAkKGlkU3RyaW5nICsgcGxheWVyLklEKS5jaGlsZHJlbihcIi5jYXJkMVwiKS5jaGlsZHJlbihcImltZ1wiKS5hdHRyKFwic3JjXCIsIFwiL2NhcmRzL3B1cnBsZV9iYWNrLnBuZ1wiKTtcbiAgICAgICAgJChpZFN0cmluZyArIHBsYXllci5JRCkuY2hpbGRyZW4oXCIuY2FyZDJcIikuY2hpbGRyZW4oXCJpbWdcIikuYXR0cihcInNyY1wiLCBcIi9jYXJkcy9wdXJwbGVfYmFjay5wbmdcIik7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpbmZvID09IFwicmVzZXRcIikge1xuICAgICAgJChcIiNib2FyZFwiKS5jaGlsZHJlbihcIi50YWJsZWNhcmRcIikuY2hpbGRyZW4oXCJpbWdcIikuY3NzKFwidmlzaWJpbGl0eVwiLCBcImhpZGRlblwiKTtcbiAgICAgICQoXCIjcG90XCIpLmNzcyhcInZpc2liaWxpdHlcIiwgXCJoaWRkZW5cIik7XG4gICAgICAkKFwiLnBsYXllclwiKS5jc3MoXCJ2aXNpYmlsaXR5XCIsIFwiaGlkZGVuXCIpO1xuICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLnRleHQoXCJcIik7XG4gICAgICAkKCcjQ2FsbCcpLnRleHQoXCJDYWxsXCIpO1xuICAgICAgJChcIi5wbGF5ZXJcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAkKFwiLndpbm5lclwiKS5yZW1vdmVDbGFzcyhcIndpbm5lclwiKTtcbiAgICAgICQoXCJjb250cm9sLWJ1dHRvblwiKS5jc3MoXCJ2aXNpYmlsaXR5XCIsIFwidmlzaWJsZVwiKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogcmVzZXRSYWlzZXMgLSByZXNldHMgc3RhdHVzIG9mIGFsbCBwbGF5ZXJzIHdobyByYWlzZWQuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICByZXNldFJhaXNlcygpIHtcbiAgICBmb3IgKGxldCBwbGF5ZXIgb2YgdGhpcy5wbGF5ZXJMaXN0KSB7XG4gICAgICBpZiAoXG4gICAgICAgIHBsYXllci5jaGlwcyA+IDAgJiZcbiAgICAgICAgKHBsYXllci5zdGF0dXMgPT0gXCJyYWlzZWRcIiB8fFxuICAgICAgICAgIHBsYXllci5zdGF0dXMgPT0gXCJtYXRjaGVkXCIgfHxcbiAgICAgICAgICBwbGF5ZXIuc3RhdHVzID09IFwiY2hlY2tlZFwiKVxuICAgICAgKSB7XG4gICAgICAgIHBsYXllci5zdGF0dXMgPSBcImFjdGl2ZVwiO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBwbGF5ZXJGaW5pc2hlZCAtIGF3YWl0cyB1c2VyIGlucHV0IHZpYSBidXR0b24gcHJlc3Mgb24gZnJvbnRlbmQuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBwbGF5ZXJGaW5pc2hlZCgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7IC8vIGF3YWl0cyBwcm9taXNlIHJlc29sdmVcbiAgICAgIGlmICh0aGlzLmh1bWFuUGxheWVyLmJldENvdW50ICE9IHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCkgeyAvLyBzZXRzIHRoZSBtYXhpbXVtIHRoZSB1c2VyIGNhbiByYWlzZSB0bywgaW4gdGhlIHJhaXNlIGlucHV0IGJveFxuICAgICAgICAkKCcjUmFpc2VBbW91bnQnKS5hdHRyKFwibWF4XCIsIE1hdGguYWJzKHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCAtIHRoaXMuaHVtYW5QbGF5ZXIuY2hpcHMpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICQoJyNSYWlzZUFtb3VudCcpLmF0dHIoXCJtYXhcIiwgdGhpcy5odW1hblBsYXllci5jaGlwcyk7XG4gICAgICB9XG4gICAgICAkKCcjQ2FsbCcpLnRleHQoXCJDYWxsIFwiICsgKHRoaXMucmFpc2VBbW91bnRzW3RoaXMuYWN0aXZlUG90XS5yYWlzZUFtb3VudCAtIHRoaXMuaHVtYW5QbGF5ZXIuYmV0Q291bnQpKTsgLy8gQWRkcyB0aGUgY2FsbCBhbW91bnQgdG8gdGhlIGJ1dHRvbiB0ZXh0XG4gICAgICAkKFwiI0NoZWNrXCIpLnVuYmluZCgpOyAvLyB1bmJpbmRzIGluIGNhc2Ugb2YgYSBwcmV2aW91cyBidXR0b24gcHJlc3NcbiAgICAgICQoXCIjQ2FsbFwiKS51bmJpbmQoKTtcbiAgICAgICQoXCIjUmFpc2VcIikudW5iaW5kKCk7XG4gICAgICAkKFwiI0ZvbGRcIikudW5iaW5kKCk7XG4gICAgICAkKFwiI0NoZWNrXCIpLmNsaWNrKCgpID0+IHsgLy8gaWYgY2xpY2tlZCwgcGVyZm9ybSB0aGlzLnBsYXllckNoZWNrKClcbiAgICAgICAgdGhpcy5wbGF5ZXJDaGVjaygpO1xuICAgICAgICByZXNvbHZlKCk7IC8vIHJlc29sdmVzIHRoZSBwcm9taXNlIHdoZW4gZmluaXNoZWRcbiAgICAgIH0pO1xuICAgICAgJChcIiNDYWxsXCIpLmNsaWNrKCgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMucGxheWVyQ2FsbCgpKSB7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgICQoXCIjUmFpc2VcIikuY2xpY2soKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5wbGF5ZXJSYWlzZShwYXJzZUludCgkKCcjUmFpc2VBbW91bnQnKS52YWwoKSkpKSB7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgICQoXCIjRm9sZFwiKS5jbGljaygoKSA9PiB7XG4gICAgICAgIHRoaXMucGxheWVyRm9sZCgpO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiB0aW1lb3V0IC0gcGVyZm9ybXMgYSB0aW1lb3V0IG9mIGEgbnVtYmVyIG9mIG1zLlxuICAgKlxuICAgKiBAcGFyYW0gIHtudW1iZXJ9IG1zIGFtb3VudCBvZiBtaWxsaXNlY29uZHMgdG8gcGF1c2UgZm9yLlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgdGltZW91dChtcykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBldmFsdWF0ZVBsYXllckNhcmRzIC0gZXZhbHVhdGVzIHRoZSB1c2VyJ3MgY2FyZHMgYW5kIG91dHB1dHMgdGV4dCAoaW5jbHVkaW5nIGFkdmljZSkgaW50byB0aGUgcmlnaHQgc2lkZWJhci5cbiAgICogQWxzbyB1cGRhdGVzIHRoZSBzdHJlbmd0aCBtZXRlciBiYXNlZCBvbiB3aGljaCBjYXJkcyB0aGUgdXNlciBoYXMuXG4gICAqXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBldmFsdWF0ZVBsYXllckNhcmRzKCkge1xuICAgIGNvbnN0IGJvYXJkID0gdGhpcy5jYXJkcy5qb2luKFwiIFwiKSArIFwiIFwiICsgdGhpcy5odW1hblBsYXllci5jYXJkc1swXSArIFwiIFwiICsgdGhpcy5odW1hblBsYXllci5jYXJkc1sxXVxuICAgIGNvbnN0IHJhbmsgPSByYW5rQm9hcmQoYm9hcmQpXG4gICAgY29uc3QgbmFtZSA9IHJhbmtEZXNjcmlwdGlvbltyYW5rXVxuICAgIGlmICh0aGlzLmh1bWFuUGxheWVyLnN0YXR1cyAhPSBcImZvbGRlZFwiICYmIHRoaXMuaHVtYW5QbGF5ZXIuc3RhdHVzICE9IFwib3V0XCIpIHtcbiAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS50ZXh0KFwiQ29tYmluZWQgd2l0aCB0aGUgY2FyZHMgb24gdGhlIHRhYmxlLCB5b3UgaGF2ZSBcIiArIG5hbWUgKyBcIi4gXCIpO1xuICAgICAgaWYgKG5hbWUgPT0gJ0EgUGFpcicpIHtcbiAgICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZChcIjxwPldpdGggYSBwYWlyLCB0aGVyZSBpcyBhIGxvdyBjaGFuY2Ugb2YgeW91IGhhdmluZyBhIHdpbm5pbmcgaGFuZC4gVGhlIGhpZ2hlciB0aGUgcGFpciBpcywgdGhlIHN0cm9uZ2VyIHRoZSBjaGFuY2Ugb2Ygd2lubmluZyAoZS5nLiBhIHBhaXIgb2YgSmFja3MgdnMgYSBwYWlyIG9mIDJzKS48L3A+PHA+SWYgeW91IGhhdmUgYSBwYWlyIHdpdGggdGhlIHRhYmxlLCBhbmQgc29tZW9uZSBlbHNlIGFsc28gaGFzIHRoaXMgcGFpciwgd2hvZXZlciBoYXMgdGhlIGhpZ2hlc3Qgb3RoZXIgY2FyZCBpbiB0aGVpciBoYW5kIHdpbnMgKGUuZy4gYm90aCBwbGF5ZXJzIGhhdmUgYSBwYWlyIG9mIEtpbmdzLCBvbmUgaGFzIGEgMywgYW5kIHRoZSBvdGhlciBoYXMgYSA1LCB0aGUgcGxheWVyIHdpdGggYSA1IHdpbnMpLCBvdGhlcndpc2UgdGhlIHBvdCBpcyBzcGxpdCBiZXR3ZWVuIHRoZSB3aW5uZXJzLjwvcD5cIik7XG4gICAgICAgICQoXCIjc3RyZW5ndGgtbWV0ZXItY29udGFpbmVyXCIpLmNoaWxkcmVuKFwiI3N0cmVuZ3RoLW1ldGVyXCIpLmNoaWxkcmVuKFwiI2JhY2tncm91bmRcIikuY3NzKFwiY2xpcC1wYXRoXCIsIFwiaW5zZXQoMCA4NSUgMCAwKVwiKTtcbiAgICAgIH0gZWxzZSBpZiAobmFtZSA9PSAnVHdvIFBhaXJzJykge1xuICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikuYXBwZW5kKFwiPHA+V2l0aCB0d28gcGFpcnMsIHlvdSBoYXZlIGEgaGlnaGVyIGNoYW5jZSBvZiB3aW5uaW5nIHRoYW4gYSBzaW5nbGUgcGFpciwgYnV0IGlzIHN0aWxsIGEgdmVyeSBsb3cgY2hhbmNlLiBMaWtlIGEgcGFpciwgdGhlIGhpZ2hlciBlYWNoIHBhaXIgaXMsIHRoZSBzdHJvbmdlciB0aGUgY2hhbmNlIG9mIHdpbm5pbmcgKGUuZy4gYSBwYWlyIG9mIEphY2tzIHZzIGEgcGFpciBvZiAycykuPC9wPjxwPklmIGluIHRoZSBzbWFsbCBjaGFuY2Ugc29tZW9uZSBlbHNlIGFsc28gaGFzIHR3byBwYWlycywgdGhlIHBsYXllciB3aXRoIHRoZSBoaWdoZXN0IGNhcmRzIHdpbnMsIG9yIGlmIGJvdGggcGFpcnMgYXJlIHRoZSBzYW1lLCB0aGUgd2lubmVycyBzcGxpdCB0aGUgcG90LjwvcD5cIik7XG4gICAgICAgICQoXCIjc3RyZW5ndGgtbWV0ZXItY29udGFpbmVyXCIpLmNoaWxkcmVuKFwiI3N0cmVuZ3RoLW1ldGVyXCIpLmNoaWxkcmVuKFwiI2JhY2tncm91bmRcIikuY3NzKFwiY2xpcC1wYXRoXCIsIFwiaW5zZXQoMCA3NSUgMCAwKVwiKTtcbiAgICAgIH0gZWxzZSBpZiAobmFtZSA9PSAnVGhyZWUgb2YgYSBLaW5kJykge1xuICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikuYXBwZW5kKFwiPHA+WW91IGhhdmUgYSBtb2RlcmF0ZSBoYW5kLiBBIHRocmVlIG9mIGEga2luZCBpcyBzdHJvbmdlciB0aGFuIGEgcGFpci48L3A+PHA+SXQgaXMgd29ydGggbm90aW5nIHRoYXQgdGhlIGhpZ2hlciB5b3VyIHRocmVlLW9mLWEta2luZCBoYW5kIGlzLCB0aGUgbW9yZSBsaWtlbHkgeW91IGFyZSB0byB3aW4uPC9wPjxwPklmIHRoZXJlIGlzIGEgcGFpciBvbiB0aGUgdGFibGUsIGJlYXIgaW4gbWluZCBzb21lb25lIGVsc2UgY291bGQgaGF2ZSBhIHRocmVlIG9mIGEga2luZCB0b28sIGFuZCB3aG9ldmVyIGhhcyB0aGUgaGlnaGVzdCBvdGhlciBjYXJkIGluIHRoZWlyIGhhbmQgd2lsbCB3aW4gdGhlIHBvdC48L3A+XCIpO1xuICAgICAgICAkKFwiI3N0cmVuZ3RoLW1ldGVyLWNvbnRhaW5lclwiKS5jaGlsZHJlbihcIiNzdHJlbmd0aC1tZXRlclwiKS5jaGlsZHJlbihcIiNiYWNrZ3JvdW5kXCIpLmNzcyhcImNsaXAtcGF0aFwiLCBcImluc2V0KDAgNjAlIDAgMClcIik7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gJ0ZvdXIgb2YgYSBLaW5kJykge1xuICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikuYXBwZW5kKFwiPHA+WW91IGhhdmUgYSB2ZXJ5IHN0cm9uZyBoYW5kLCB3aGljaCB5b3UgYXJlIHZlcnkgbGlrZWx5IHRvIHdpbiB3aXRoLjwvcD48cD5BIGZvdXIgb2YgYSBraW5kIGlzIHRoZSB0aGlyZCBzdHJvbmdlc3QgaGFuZC4gQW5vdGhlciBwbGF5ZXIgY2FuIG9ubHkgYmVhdCB5b3VyIGhhbmQgaWYgdGhleSBhbHNvIGhhdmUgYSBmb3VyIG9mIGEga2luZCAod2l0aCBvdGhlciwgaGlnaGVyIGNhcmRzKSwgaWYgdGhleSBoYXZlIGEgc3RyYWlnaHQgZmx1c2gsIG9yIGEgcm95YWwgZmx1c2guPC9wPjxwPkJhc2VkIG9mZiBvdGhlciBwbGF5ZXIncyBhY3Rpb25zLCB5b3UgY291bGQgcmFpc2UgaGVyZSB0byB5ZWlsZCBtb3JlIG9mIGEgd2lubmluZywgb3IgeW91IGNvdWxkIGNoZWNrL2NhbGwgZGVwZW5kYW50IG9uIGhvdyBjb25maWRlbnQgeW91IGFyZSB5b3UgaGF2ZSB0aGUgd2lubmluZyBoYW5kLjwvcD5cIik7XG4gICAgICAgICQoXCIjc3RyZW5ndGgtbWV0ZXItY29udGFpbmVyXCIpLmNoaWxkcmVuKFwiI3N0cmVuZ3RoLW1ldGVyXCIpLmNoaWxkcmVuKFwiI2JhY2tncm91bmRcIikuY3NzKFwiY2xpcC1wYXRoXCIsIFwiaW5zZXQoMCAxNSUgMCAwKVwiKTtcbiAgICAgIH0gZWxzZSBpZiAobmFtZSA9PSAnQSBTdHJhaWdodCcpIHtcbiAgICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZChcIjxwPllvdSBoYXZlIGFuIE9LIGhhbmQuIEEgc3RyYWlnaHQgaXMgd2hlbiBhbGwgY2FyZHMgZm9sbG93IG9uIG51bWVyaWNhbGx5IGZyb20gZWFjaCBvdGhlciwgZS5nLiA0LCA1LCA2LCA3LCA4LCBvciA5LCAxMCwgSiwgUSwgSy48L3A+PHA+QSBzdHJhaWdodCBpcyBzdHJvbmdlciB0aGFuIHRocmVlIG9mIGEga2luZCBhbmQgdHdvIHBhaXIsIGJ1dCBiZWFyIGluIG1pbmQsIG90aGVycyBjYW4gYWxzbyBoYXZlIGEgc3RyYWlnaHQuPC9wPlwiKTtcbiAgICAgICAgJChcIiNzdHJlbmd0aC1tZXRlci1jb250YWluZXJcIikuY2hpbGRyZW4oXCIjc3RyZW5ndGgtbWV0ZXJcIikuY2hpbGRyZW4oXCIjYmFja2dyb3VuZFwiKS5jc3MoXCJjbGlwLXBhdGhcIiwgXCJpbnNldCgwIDUwJSAwIDApXCIpO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09ICdBIEhpZ2ggQ2FyZCcpIHtcbiAgICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZChcIjxwPllvdSBoYXZlIHRoZSB3b3JzdCBoYW5kIHBvc3NpYmxlLiBZb3Ugc2hvdWxkIG5vdCByYWlzZSBvciBjYWxsIG90aGVycycgcmFpc2VzIHVubGVzcyB5b3UgYXJlIHBsYW5uaW5nIG9uIGJsdWZmaW5nLjwvcD48cD5JZiBzb21lb25lIGVsc2UgY2FsbHMgeW91ciBibHVmZiwgYW5kIGFsc28gaGFzIG9ubHkgYSBoaWdoIGNhcmQsIHdob2V2ZXIgaGFzIHRoZSBoaWdoZXN0IGNhcmRzIHdpbnMsIHRoZSBoaWdoZXN0IHNpbmdsZSBjYXJkIGJlaW5nIGFuIEFjZS48L3A+XCIpO1xuICAgICAgICAkKFwiI3N0cmVuZ3RoLW1ldGVyLWNvbnRhaW5lclwiKS5jaGlsZHJlbihcIiNzdHJlbmd0aC1tZXRlclwiKS5jaGlsZHJlbihcIiNiYWNrZ3JvdW5kXCIpLmNzcyhcImNsaXAtcGF0aFwiLCBcImluc2V0KDAgOTUlIDAgMClcIik7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gJ0EgRmx1c2gnKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS5hcHBlbmQoXCI8cD5Zb3UgaGF2ZSBhIGdvb2QgaGFuZC4gQSBmbHVzaCBpcyBzdHJvbmdlciB0aGFuIGEgc3RyYWlnaHQuPC9wPjxwPkEgZmx1c2ggaXMgd2hlcmUgYWxsIGNhcmRzIGFyZSB0aGUgc2FtZSBzdWl0LjwvcD48cD5Bbm90aGVyIHBsYXllciBjYW4gYWxzbyBoYXZlIGEgZmx1c2gsIGFuZCB3aG9ldmVyIGhhcyB0aGUgaGlnaGVzdCBjYXJkcyBpbiB0aGVpciBoYW5kIHRvIG1ha2UgdXAgdGhlIGZsdXNoIHdpbnMuPC9wPlwiKTtcbiAgICAgICAgJChcIiNzdHJlbmd0aC1tZXRlci1jb250YWluZXJcIikuY2hpbGRyZW4oXCIjc3RyZW5ndGgtbWV0ZXJcIikuY2hpbGRyZW4oXCIjYmFja2dyb3VuZFwiKS5jc3MoXCJjbGlwLXBhdGhcIiwgXCJpbnNldCgwIDQwJSAwIDApXCIpO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09ICdBIEZ1bGwgSG91c2UnKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS5hcHBlbmQoXCI8cD5Zb3UgaGF2ZSBhIGdyZWF0IGhhbmQuIEEgZnVsbCBob3VzZSBpcyBzdHJvbmdlciB0aGFuIGEgZmx1c2guPC9wPjxwPkEgZnVsbCBob3VzZSBpcyBhIGNvbWJpbmF0aW9uIG9mIHRocmVlIG9mIGEga2luZCBhbmQgYSBwYWlyLiBFLmcuIFRocmVlIEFjZXMgYW5kIFR3byBTaXhlcy48L3A+PHA+SWYgdGhlcmUgaXMgYSB0aHJlZSBvZiBhIGtpbmQgb24gdGhlIHRhYmxlLCBpdCBpcyBwb3NzaWJsZSBhbm90aGVyIHBsYXllciBjb3VsZCBoYXZlIGEgcGFpciwgd2hpY2ggY291bGQgYmUgc3Ryb25nZXIgdGhhbiB5b3Vycy48L3A+XCIpO1xuICAgICAgICAkKFwiI3N0cmVuZ3RoLW1ldGVyLWNvbnRhaW5lclwiKS5jaGlsZHJlbihcIiNzdHJlbmd0aC1tZXRlclwiKS5jaGlsZHJlbihcIiNiYWNrZ3JvdW5kXCIpLmNzcyhcImNsaXAtcGF0aFwiLCBcImluc2V0KDAgMjUlIDAgMClcIik7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gJ0EgU3RyYWlnaHQgRmx1c2gnICYmICEoYm9hcmQuaW5jbHVkZXMoJ0EnKSAmJiBib2FyZC5pbmNsdWRlcygnSicpICYmIGJvYXJkLmluY2x1ZGVzKCdRJykgJiYgYm9hcmQuaW5jbHVkZXMoJ0snKSAmJiBib2FyZC5pbmNsdWRlcygnVCcpKSkge1xuICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikuYXBwZW5kKFwiPHA+WW91IGhhdmUgYW4gZXh0cmVtZWx5IHN0cm9uZyBoYW5kLiBBIHN0cmFpZ2h0IGZsdXNoIGlzIHRoZSBzZWNvbmQgc3Ryb25nZXN0IGhhbmQgaW4gdGhlIGdhbWUuPC9wPjxwPllvdSBjb3VsZCByYWlzZSBpbiB0aGlzIHNpdHVhdGlvbiB0byBpbmNyZWFzZSB5b3VyIHBvdGVudGlhbCBwcm9maXQuPC9wPlwiKTtcbiAgICAgICAgJChcIiNzdHJlbmd0aC1tZXRlci1jb250YWluZXJcIikuY2hpbGRyZW4oXCIjc3RyZW5ndGgtbWV0ZXJcIikuY2hpbGRyZW4oXCIjYmFja2dyb3VuZFwiKS5jc3MoXCJjbGlwLXBhdGhcIiwgXCJpbnNldCgwIDUlIDAgMClcIik7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gJ0EgU3RyYWlnaHQgRmx1c2gnICYmIChib2FyZC5pbmNsdWRlcygnQScpICYmIGJvYXJkLmluY2x1ZGVzKCdKJykgJiYgYm9hcmQuaW5jbHVkZXMoJ1EnKSAmJiBib2FyZC5pbmNsdWRlcygnSycpICYmIGJvYXJkLmluY2x1ZGVzKCdUJykpKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS50ZXh0KFwiV2l0aCB0aGUgY2FyZHMgb24gdGhlIHRhYmxlLCB5b3UgaGF2ZSBhIFJveWFsIEZsdXNoIVwiKTtcbiAgICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZChcIjxwPllvdSBoYXZlIHRoZSBzdHJvbmdlc3QgaGFuZCBpbiB0aGUgZ2FtZSwgcGxheSBhcyB5b3UgcGxlYXNlITwvcD48cD5Zb3Ugc2hvdWxkIHByb2JhYmx5IHJhaXNlIHRvIGluY3JlYXNlIHlvdXIgcG9zc2libGUgd2lubmluZ3MuPC9wPjxwPkJlYXIgaW4gbWluZCwgcGxheWluZyB0b28gYWdncmVzc2l2ZWx5IG1heSBjYXVzZSBvdGhlciBwbGF5ZXJzIHRvIGZvbGQgdG9vIGVhcmx5LjwvcD5cIik7XG4gICAgICAgICQoXCIjc3RyZW5ndGgtbWV0ZXItY29udGFpbmVyXCIpLmNoaWxkcmVuKFwiI3N0cmVuZ3RoLW1ldGVyXCIpLmNoaWxkcmVuKFwiI2JhY2tncm91bmRcIikuY3NzKFwiY2xpcC1wYXRoXCIsIFwiaW5zZXQoMCAxMDAlIDAgMClcIik7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0aGlzLmh1bWFuUGxheWVyLnN0YXR1cyAhPSBcIm91dFwiKSB7IC8vIENoYW5nZXMgdG8gcGFzdCB0ZW5zZSBhbmQgd2hhdCB0aGUgdXNlciBjb3VsZCd2ZSBkb25lIG9yIHdvbiwgaGFkIHRoZXkgbm90IGZvbGRlZC5cbiAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS50ZXh0KFwiQ29tYmluZWQgd2l0aCB0aGUgY2FyZHMgb24gdGhlIHRhYmxlLCB5b3UgaGFkIFwiICsgbmFtZSArIFwiLiBcIik7XG4gICAgICBpZiAobmFtZSA9PSAnQSBQYWlyJykge1xuICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikuYXBwZW5kKFwiPHA+V2l0aCBhIHBhaXIsIHRoZXJlIGlzIGEgbG93IGNoYW5jZSBvZiB5b3UgaGF2aW5nIGEgd2lubmluZyBoYW5kLiBZb3UgcHJvYmFibHkgbWFkZSBhIGdvb2QgY2FsbCBieSBmb2xkaW5nIGhlcmUsIGFzIGl0J3MgcXVpdGUgcG9zc2libGUgb3RoZXIgcGxheWVycyBoYXZlIGEgc3Ryb25nZXIgaGFuZC48L3A+XCIpO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09ICdUd28gUGFpcnMnKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS5hcHBlbmQoXCI8cD5XaXRoIHR3byBwYWlycywgeW91IGhhZCBhIGhpZ2hlciBjaGFuY2Ugb2Ygd2lubmluZyB0aGFuIGEgc2luZ2xlIHBhaXIsIGJ1dCBpcyBzdGlsbCBhIHZlcnkgbG93IGNoYW5jZS4gVGhpcywgaG93ZXZlciwgZGVwZW5kYW50IHVwb24gdGhlIHJlc3Qgb2YgdGhlIHRhYmxlIGNhcmRzLCBjb3VsZCBoYXZlIGJlZW4gYSB3aW5uaW5nIGhhbmQuIElmIHlvdSBoYWQgYSB0d28gcGFpciwgd2hlcmUgb25lIG9mIHRoZSBwYWlycyBpcyBvbiB0aGUgdGFibGUsIGFuZCB5b3VycyBpcyBhIGxvdyB2YWx1ZWQgcGFpciwgeW91IHByb2JhYmx5IG1hZGUgdGhlIHJpZ2h0IGRlY2lzaW9uIGhlcmUuPC9wPlwiKTtcbiAgICAgIH0gZWxzZSBpZiAobmFtZSA9PSAnQSBUaHJlZSBvZiBhIEtpbmQnKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS5hcHBlbmQoXCI8cD5Zb3UgaGFkIGEgbW9kZXJhdGUgaGFuZC4gQSB0aHJlZSBvZiBhIGtpbmQgaXMgbXVjaCBzdHJvbmdlciB0aGFuIGEgcGFpci48L3A+PHA+SXQncyBwb3NzaWJsZSB5b3UgbWFkZSBhIGJhZCBjYWxsLCBidXQgc29tZXRpbWVzIGJsdWZmaW5nIGlzIGFsc28gYSBnb29kIGlkZWEsIHNvIGRvbid0IGxldCBpdCBkaXNjb3VyYWdlIHlvdSE8L3A+XCIpO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09ICdBIEZvdXIgb2YgYSBLaW5kJykge1xuICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikuYXBwZW5kKFwiPHA+WW91IGhhZCBhIHZlcnkgc3Ryb25nIGhhbmQsIHdoaWNoIHlvdSB3ZXJlIHZlcnkgbGlrZWx5IHRvIHdpbiB3aXRoLjwvcD48cD5JZiBzb21lb25lIGVsc2UgcmFpc2VkIGFuZCB5b3UgZ290IHNjYXJlZCwgc29tZXRpbWVzIGl0J3MgYmVzdCB0byBjYWxsIHRoZWlyIGJldHMsIGFuZCBzb21ldGltZXMgZm9sZCBpZiB5b3UgYXJlIG5vdCBjb25maWRlbnQuIFRyeSB0byB2YXJ5IHlvdXIgcGxheXN0eWxlLjwvcD5cIik7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gJ0EgU3RyYWlnaHQnKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS5hcHBlbmQoXCI8cD5Zb3UgaGFkIGFuIE9LIGhhbmQuPC9wPjxwPllvdSBtYXkgaGF2ZSBub3QgcmVhbGlzZWQgeW91IGNvdWxkIGhhdmUgYSBzdHJhaWdodCwgc29tZXRpbWVzIGl0J3MgYmVzdCB0byBiZSBwYXRpZW50LCBhbmQgbWF5YmUgY2FsbCBhIHJhaXNlIGRlcGVuZGFudCBvbiBob3cgYmlnIGl0IGlzIGFuZCB5b3VyIGN1cnJlbnQgY2hpcCBjb3VudC48L3A+PHA+SXQncyBwb3NzaWJsZSB5b3UgbWFkZSBhIGJhZCBjYWxsLCBidXQgc29tZXRpbWVzIGJsdWZmaW5nIGlzIGFsc28gYSBnb29kIGlkZWEsIHNvIGRvbid0IGxldCBpdCBkaXNjb3VyYWdlIHlvdSE8L3A+XCIpO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09ICdBIEhpZ2ggQ2FyZCcpIHtcbiAgICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZChcIjxwPllvdSBoYWQgdGhlIHdvcnN0IGhhbmQgcG9zc2libGUuIEZvbGRpbmcgaGVyZSB3YXMgcHJvYmFibHkgYSBncmVhdCBpZGVhLiBCdXQgZG9uJ3QgZm9yZ2V0LCB5b3UgY2FuIGJsdWZmIGV2ZXJ5IG5vdyBhbmQgdGhlbiB0b28gYW5kIHdpbiB3aXRoIGEgaGlnaCBjYXJkITwvcD48cD5UaGUgbGVzcyBhbW91bnQgb2Ygb3Bwb25lbnRzIHlvdSBoYXZlIGluIHRoZSBnYW1lLCB0aGUgbW9yZSBsaWtlbGlob29kIHlvdSB3aWxsIHdpbiB3aXRoIGEgaGlnaCBjYXJkITwvcD5cIik7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gJ0EgRmx1c2gnKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS5hcHBlbmQoXCI8cD5Zb3UgaGFkIGEgZ29vZCBoYW5kLiBBIGZsdXNoIGlzIHN0cm9uZ2VyIHRoYW4gYSBzdHJhaWdodC48L3A+PHA+U29tZXRpbWVzIGl0J3MgYmVzdCB0byBiZSBwYXRpZW50LCBhbmQgbWF5YmUgY2FsbCBhIHJhaXNlIGRlcGVuZGFudCBvbiBob3cgYmlnIGl0IGlzIGFuZCB5b3VyIGN1cnJlbnQgY2hpcCBjb3VudC48L3A+PHA+SXQncyBwb3NzaWJsZSB5b3UgbWFkZSBhIGJhZCBjYWxsLCBidXQgc29tZXRpbWVzIGJsdWZmaW5nIGlzIGFsc28gYSBnb29kIGlkZWEsIHNvIGRvbid0IGxldCBpdCBkaXNjb3VyYWdlIHlvdSE8L3A+XCIpO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09ICdBIEZ1bGwgSG91c2UnKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS5hcHBlbmQoXCI8cD5Zb3UgaGFkIGEgZ3JlYXQgaGFuZC4gQSBmdWxsIGhvdXNlIGlzIHN0cm9uZ2VyIHRoYW4gYSBmbHVzaC48L3A+PHA+U29tZXRpbWVzIGl0J3MgYmVzdCB0byBiZSBwYXRpZW50LCBhbmQgbWF5YmUgY2FsbCBhIHJhaXNlIGRlcGVuZGFudCBvbiBob3cgYmlnIGl0IGlzIGFuZCB5b3VyIGN1cnJlbnQgY2hpcCBjb3VudC48L3A+PHA+SXQncyBwb3NzaWJsZSB5b3UgbWFkZSBhIGJhZCBjYWxsLCBidXQgc29tZXRpbWVzIGJsdWZmaW5nIGlzIGFsc28gYSBnb29kIGlkZWEsIHNvIGRvbid0IGxldCBpdCBkaXNjb3VyYWdlIHlvdSE8L3A+XCIpO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09ICdBIFN0cmFpZ2h0IEZsdXNoJyAmJiAhKGJvYXJkLmluY2x1ZGVzKCdBJykgJiYgYm9hcmQuaW5jbHVkZXMoJ0onKSAmJiBib2FyZC5pbmNsdWRlcygnUScpICYmIGJvYXJkLmluY2x1ZGVzKCdLJykgJiYgYm9hcmQuaW5jbHVkZXMoJ1QnKSkpIHtcbiAgICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZChcIjxwPllvdSBoYWQgYW4gZXh0cmVtZWx5IHN0cm9uZyBoYW5kLiBBIHN0cmFpZ2h0IGZsdXNoIGlzIHRoZSBzZWNvbmQgc3Ryb25nZXN0IGhhbmQgaW4gdGhlIGdhbWUuIEl0J3MgZXh0cmVtZWx5IGxpa2VseSB5b3Ugd291bGQgaGF2ZSB3b24gdGhpcyBoYW5kLjwvcD48cD5Tb21ldGltZXMgaXQncyBiZXN0IHRvIGJlIHBhdGllbnQsIGFuZCBtYXliZSBjYWxsIGEgcmFpc2UgZGVwZW5kYW50IG9uIGhvdyBiaWcgaXQgaXMgYW5kIHlvdXIgY3VycmVudCBjaGlwIGNvdW50LjwvcD48cD5JdCdzIHBvc3NpYmxlIHlvdSBtYWRlIGEgYmFkIGNhbGwsIGJ1dCBzb21ldGltZXMgYmx1ZmZpbmcgaXMgYWxzbyBhIGdvb2QgaWRlYSwgc28gZG9uJ3QgbGV0IGl0IGRpc2NvdXJhZ2UgeW91ITwvcD5cIik7XG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gJ0EgU3RyYWlnaHQgRmx1c2gnICYmIChib2FyZC5pbmNsdWRlcygnQScpICYmIGJvYXJkLmluY2x1ZGVzKCdKJykgJiYgYm9hcmQuaW5jbHVkZXMoJ1EnKSAmJiBib2FyZC5pbmNsdWRlcygnSycpICYmIGJvYXJkLmluY2x1ZGVzKCdUJykpKSB7XG4gICAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS50ZXh0KFwiV2l0aCB0aGUgY2FyZHMgb24gdGhlIHRhYmxlLCB5b3UgaGFkIGEgUm95YWwgRmx1c2ghXCIpO1xuICAgICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikuYXBwZW5kKFwiPHA+WW91IGhhZCB0aGUgc3Ryb25nZXN0IGhhbmQgaW4gdGhlIGdhbWUuIFNvcnJ5IHRvIHRlbGwgeW91LCBidXQgeW91IHdvdWxkIGhhdmUgd29uIHRoaXMgaGFuZCB3aXRoIDEwMCUgY2VydGFpbnR5LjwvcD48cD5XYXRjaCBvdXQgZm9yIHRoaXMgY29tYmluYXRpb24gb3IgYSBzaW1pbGFyIG9uZSBpbiBmdXR1cmUhIChjaGVjayB0aGUgcG9rZXIgaGFuZHMgYnV0dG9uIGJlbG93KTwvcD5cIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIGV2YWx1YXRlV2lubmVyIC0gRXZhbHVhdGVzIHRoZSB3aW5uZXIuXG4gICAqICAgIFVzZXMgaW1wb3J0ZWQgUEhFIGZvciBldmFsdWF0aW9uLlxuICAgKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgZXZhbHVhdGVXaW5uZXIoKSB7XG4gICAgbGV0IHJhbmtzID0gW11cbiAgICBmb3IgKGxldCBwbGF5ZXIgb2YgdGhpcy5wbGF5ZXJMaXN0KSB7XG4gICAgICBpZiAocGxheWVyLnN0YXR1cyAhPSBcImZvbGRlZFwiKSB7XG4gICAgICAgIHNwYXduQ2FyZHMocGxheWVyLmNhcmRzLCBcInNlYXRcIiArIChwbGF5ZXIuSUQpLnRvU3RyaW5nKCksIFwiY2FyZFwiKTtcbiAgICAgICAgbGV0IGJvYXJkcyA9IHRoaXMuY2FyZHNcbiAgICAgICAgbGV0IG5ld2JvYXJkcyA9IGJvYXJkcy5jb25jYXQocGxheWVyLmNhcmRzKVxuICAgICAgICBsZXQgcmFuayA9IGV2YWx1YXRlQ2FyZHMobmV3Ym9hcmRzKVxuICAgICAgICBsZXQgcmFua051bWJlciA9IHJhbmtDYXJkcyhuZXdib2FyZHMpXG4gICAgICAgIGxldCBuYW1lID0gcmFua0Rlc2NyaXB0aW9uW3JhbmtOdW1iZXJdXG4gICAgICAgIHBsYXllci5jYXJkUmFuayA9IHJhbmtcbiAgICAgICAgcGxheWVyLmNhcmRFdmFsID0gbmFtZVxuICAgICAgICBwbGF5ZXIuYmV0dGluZ1BvdC5mb3JFYWNoKHBvdElEID0+IHJhbmtzLnB1c2goW3BsYXllci5JRCwgcGxheWVyLmNhcmRSYW5rLCBwbGF5ZXIuY2FyZEV2YWwsIHBvdElEXSkpXG4gICAgICB9XG4gICAgfVxuICAgIGxldCB3aW5uZXIgPSBbXVxuICAgIHJhbmtzID0gcmFua3Muc29ydCgoYSwgYikgPT4gYVsxXSAtIGJbMV0pXG4gICAgcmFua3MuZm9yRWFjaChhID0+IHtcbiAgICAgIGlmICghd2lubmVyW2FbM11dKSB7XG4gICAgICAgIHdpbm5lclthWzNdXSA9IFtdXG4gICAgICB9XG4gICAgICB3aW5uZXJbYVszXV0ucHVzaChhKVxuICAgIH0pXG4gICAgd2lubmVyID0gd2lubmVyLm1hcChhcnJheSA9PiBhcnJheS5maWx0ZXIoYSA9PiBhcnJheVswXVsxXSA9PT0gYVsxXSkpXG5cbiAgICBpZiAod2lubmVyLmZpbHRlcihhID0+IGEgJiYgYS5sZW5ndGggPiAwKS5yZWR1Y2UoKHByZXZpb3VzLCBuZXh0KSA9PiB7XG4gICAgICBpZiAocHJldmlvdXMubGVuZ3RoID09PSAwKSByZXR1cm4gbmV4dFxuICAgICAgcmV0dXJuIHByZXZpb3VzLmNvbmNhdChuZXh0KVxuICAgIH0pLmxlbmd0aCA9PT0gMSkge1xuICAgICAgbGV0IHRlbXBQb3QgPSB3aW5uZXJbMF1bMF1bM11cbiAgICAgIHdpbm5lciA9IHRoaXMuZ2V0UGxheWVyQnlJZCh3aW5uZXJbMF1bMF1bMF0pO1xuICAgICAgaWYgKHdpbm5lciA9PSB0aGlzLmh1bWFuUGxheWVyKSB7XG4gICAgICAgIGxldCByb3VuZHNXb24gPSAoSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3JvdW5kc1dvbicpKSArIDEpXG4gICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncm91bmRzV29uJywgcm91bmRzV29uKTtcbiAgICAgIH1cbiAgICAgICQoXCIjc2VhdFwiICsgd2lubmVyLklEKS5hZGRDbGFzcyhcIndpbm5lclwiKTtcbiAgICAgICQoXCIjcmlnaHQtc2lkZWJhclwiKS5jaGlsZHJlbihcImgzXCIpLnRleHQoXCJXaW5uZXJcIik7XG4gICAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikudGV4dChcIlRoZSB3aW5uZXIgaXMgXCIgKyB3aW5uZXIubmFtZSArIFwiLCB3aG8gd29uIHdpdGggXCIgKyB3aW5uZXIuY2FyZEV2YWwpO1xuICAgICAgd2lubmVyLmFkZENoaXBzKHRoaXMucG90W3RlbXBQb3RdKVxuICAgICAgdGhpcy53aW5uZXIgPSB3aW5uZXJcbiAgICAgIHRoaXMucmVzZXRQb3QoKTtcbiAgICAgIHRoaXMudXBkYXRlRGlzcGxheSh3aW5uZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgd2lubmVyc1xuICAgICAgJChcIiNyaWdodC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiaDNcIikudGV4dChcIldpbm5lcnNcIilcbiAgICAgICQoXCIjY2FyZC1ldmFsdWF0aW9uXCIpLmNoaWxkcmVuKFwicFwiKS50ZXh0KFwiVGhlIHdpbm5lcnMgYXJlIFwiKTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgd2lubmVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCB3aW5uZXJzID0gd2lubmVyW2ldXG4gICAgICAgIGxldCBwb3RTaXplID0gTWF0aC5mbG9vcih0aGlzLnBvdFtpXSAvIHdpbm5lcnMubGVuZ3RoKVxuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHdpbm5lcnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBsZXQgd2lubmVyc0luZm8gPSB0aGlzLmdldFBsYXllckJ5SWQod2lubmVyc1tqXVswXSlcbiAgICAgICAgICBpZiAod2lubmVyc0luZm8gPT0gdGhpcy5odW1hblBsYXllcikge1xuICAgICAgICAgICAgbGV0IHJvdW5kc1dvbiA9IChKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncm91bmRzV29uJykpICsgMSlcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncm91bmRzV29uJywgcm91bmRzV29uKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgJChcIiNzZWF0XCIgKyB3aW5uZXJzSW5mby5JRCkuYWRkQ2xhc3MoXCJ3aW5uZXJcIik7XG4gICAgICAgICAgd2lubmVyc0luZm8uYWRkQ2hpcHMocG90U2l6ZSk7XG4gICAgICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZCh3aW5uZXJzSW5mby5uYW1lICsgXCIgd2hvIHdvbiBcIiArIHBvdFNpemUgKyBcIiwgd2l0aCBcIiwgd2lubmVyc0luZm8uY2FyZEV2YWwsIFwiIGFuZCBcIik7XG4gICAgICAgICAgdGhpcy51cGRhdGVEaXNwbGF5KHdpbm5lcnNJbmZvKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgJChcIiNjYXJkLWV2YWx1YXRpb25cIikuY2hpbGRyZW4oXCJwXCIpLmFwcGVuZChcIi5cIik7XG4gICAgICB0aGlzLnJlc2V0UG90KCk7XG4gICAgfVxuICAgIHRoaXMuY2hlY2tGaW5hbFdpbm5lcigpO1xuICB9XG5cbiAgLyoqXG4gICAqIGFzeW5jIGNoZWNrRmluYWxXaW5uZXIgLSBDaGVja3MgdG8gc2VlIGlmIHRoZXJlIGlzIG9uZSBmaW5hbCB3aW5uZXIgdG8gZW5kIHRoZSBnYW1lLlxuICAgKlxuICAgKiBAcmV0dXJuIHtQcm9taXNlIDxib29sZWFuPn0gIFJldHVybnMgdHJ1ZSBpZiB0aGVyZSBpcyBhIGZpbmFsIHdpbm5lciwgZmFsc2Ugb3RoZXJ3aXNlLCB0aGVuIHRoZSBnYW1lIGNvbnRpbnVlcyB0byBydW4uXG4gICAqL1xuICBhc3luYyBjaGVja0ZpbmFsV2lubmVyKCkge1xuICAgIHRoZUdhbWUucGxheWVyTGlzdCA9IHRoZUdhbWUucGxheWVyTGlzdC5maWx0ZXIocGxheWVyID0+IHtcbiAgICAgIGlmIChwbGF5ZXIuaXNIdW1hbiAmJiBwbGF5ZXIuc3RhdHVzICE9PSBcIm91dFwiICYmIHBsYXllci5zdGF0dXMgIT09IFwiZm9sZGVkXCIpIHtcbiAgICAgICAgbGV0IHJvdW5kc1BsYXllZCA9IChKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbnVtT2ZSb3VuZHMnKSkgKyAxKVxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ251bU9mUm91bmRzJywgcm91bmRzUGxheWVkKTtcbiAgICAgIH1cbiAgICAgIGlmIChwbGF5ZXIuY2hpcHMgPD0gMCAmJiBwbGF5ZXIgIT0gdGhpcy53aW5uZXIpIHtcbiAgICAgICAgcGxheWVyLnN0YXR1cyA9IFwib3V0XCJcbiAgICAgICAgaWYgKHBsYXllci5pc0h1bWFuKSB7XG4gICAgICAgICAgbGV0IGdhbWVzUGxheWVkID0gKEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdudW1PZkdhbWVzJykpICsgMSlcbiAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ251bU9mR2FtZXMnLCBnYW1lc1BsYXllZCk7XG4gICAgICAgICAgdGhpcy51cGRhdGVEaXNwbGF5KHRoaXMuaHVtYW5QbGF5ZXIpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcGxheWVyLnN0YXR1cyA9ICdhY3RpdmUnO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSlcbiAgICBpZiAodGhpcy5wbGF5ZXJMaXN0Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgJChcIiNyaWdodC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiaDNcIikudGV4dChcIkZpbmFsIFdpbm5lclwiKVxuICAgICAgJCgnI2NhcmQtZXZhbHVhdGlvbicpLmNoaWxkcmVuKCdwJykudGV4dCgnVGhlIGZpbmFsIHdpbm5lciBpcyAnICsgdGhpcy53aW5uZXIubmFtZSArICchJylcbiAgICAgIGlmICh0aGlzLndpbm5lciA9PT0gdGhpcy5odW1hblBsYXllcikgeyAvLyBTYXZlcyB0aGUgcGxheWVyJ3MgcHJvZml0IGFuZCB0b3RhbCBudW1iZXIgb2YgZ2FtZXMgJiB3aW5zIHRvIGxvY2Fsc3RvcmFnZVxuICAgICAgICBsZXQgZ2FtZXNQbGF5ZWQgPSAoSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ251bU9mR2FtZXMnKSkgKyAxKVxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ251bU9mR2FtZXMnLCBnYW1lc1BsYXllZCk7XG4gICAgICAgIHRoaXMuaHVtYW5QbGF5ZXIud2lucyArK1xuICAgICAgICBsZXQgcHJvZml0ID0gKEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwcm9maXRBbW91bnQnKSkgKyB0aGlzLmh1bWFuUGxheWVyLmNoaXBzKVxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2ZpdEFtb3VudCcsIHByb2ZpdCk7XG4gICAgICAgIGxldCB3aW5zID0gKEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdudW1PZldpbnMnKSkgKyAxKVxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ251bU9mV2lucycsIHdpbnMpO1xuICAgICAgfVxuICAgICAgdGhpcy51cGRhdGVEaXNwbGF5KHRoaXMuaHVtYW5QbGF5ZXIpXG4gICAgICB0aGlzLnN0b3BHYW1lKClcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBhd2FpdCB0aGlzLnRpbWVvdXQoNTAwMCk7XG4gICAgdGhpcy5mcmVzaEdhbWUoKTtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiByZXNvbHZlKGZhbHNlKSk7XG4gIH1cblxuICAvKipcbiAgICogZnJlc2hHYW1lIC0gY3JlYXRlcyBhIG5ldyBnYW1lIGZvciBhbGwgcmVtYWluaW5nIHBsYXllcnMgd2l0aCBuZXcgY2FyZHMgZXRjLiwgYnV0IGtlZXBzIHRoZWlyIHJlbWFpbmluZyBjaGlwcy5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGZyZXNoR2FtZSgpIHtcbiAgICB0aGlzLnJvdW5kID0gMDtcbiAgICB0aGlzLnR1cm4gPSAwO1xuICAgIHRoaXMucG90ID0gWzBdO1xuICAgIHRoaXMuYWN0aXZlUG90ID0gMDtcbiAgICB0aGlzLmRpZFNvbWVvbmVBbGxJbiA9IGZhbHNlO1xuICAgIHRoaXMuY2FyZHMgPSBbXTtcbiAgICB0aGlzLmNyZWF0ZUNhcmRMaXN0KCk7XG4gICAgdGhpcy5wbGF5ZXJUdXJuID0gW107XG4gICAgdGhpcy5zdWJSb3VuZCA9IDA7XG4gICAgdGhpcy5zdWJSb3VuZFN0YXR1cyA9IFwiYWN0aXZlXCI7XG4gICAgdGhpcy53aW5uZXIgPSAwO1xuICAgIHRoaXMuZGlkU29tZW9uZVJhaXNlID0gZmFsc2U7XG4gICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgdGhpcy5zaG91bGRTdG9wUnVubmluZyA9IGZhbHNlO1xuICAgIHRoaXMuc2hvdWxkU3RhcnRSdW5uaW5nID0gZmFsc2U7XG4gICAgdGhpcy5wbGF5ZXJGaXJzdFNpZGVwb3QgPSAtMTtcbiAgICB0aGlzLnJhaXNlQW1vdW50cyA9IFt7cG90OiAwLCByYWlzZUFtb3VudDogMCwgZGVidGFtb3VudDogLTF9XVxuICAgIHRoaXMucmVzZXRSYWlzZXMoKTtcbiAgICB0aGlzLmRlYWxDYXJkcygpO1xuICAgIHRoaXMudXBkYXRlRGlzcGxheShcInJlc2V0XCIpO1xuICAgICQoXCIucGxheWVyXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICQoXCIud2lubmVyXCIpLnJlbW92ZUNsYXNzKFwid2lubmVyXCIpO1xuICAgICQoXCIjc3RyZW5ndGgtbWV0ZXItY29udGFpbmVyXCIpLmNoaWxkcmVuKFwiI3N0cmVuZ3RoLW1ldGVyXCIpLmNoaWxkcmVuKFwiI2JhY2tncm91bmRcIikuY3NzKFwiY2xpcC1wYXRoXCIsIFwiaW5zZXQoMCAxMDAlIDAgMClcIik7XG4gICAgJChcIiNyaWdodC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiaDNcIikudGV4dChcIkNhcmQgUmFua2luZ1wiKTtcbiAgICAkKFwiI2NhcmQtZXZhbHVhdGlvblwiKS5jaGlsZHJlbihcInBcIikudGV4dChcIlwiKTtcbiAgICAkKFwiI2NvbnRyb2xzXCIpLmNoaWxkcmVuKFwiLmNvbnRyb2wtYnV0dG9uXCIpLmFkZENsYXNzKFwiaW5hY3RpdmVcIik7XG4gICAgJChcIiNwb3RcIikuY3NzKFwidmlzaWJpbGl0eVwiLCBcInZpc2libGVcIik7XG4gICAgJChcIi5idXR0b24tY29weVwiKS5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XG4gICAgY29uc3QgaW5pdGlhbGl6ZUdhbWUgPSAoKSA9PiB7XG4gICAgICBmb3IgKGxldCBwbGF5ZXIgb2YgdGhpcy5wbGF5ZXJMaXN0KSB7XG4gICAgICAgIHBsYXllci5iZXQgPSBbMF1cbiAgICAgICAgcGxheWVyLmRpZFJhaXNlQWxsSW4gPSBmYWxzZVxuICAgICAgICBwbGF5ZXIuYmV0dGluZ1BvdCA9IFtdXG4gICAgICAgIHBsYXllci5zdGF0dXMgPSBcImFjdGl2ZVwiXG4gICAgICAgIHRoaXMudXBkYXRlRGlzcGxheShwbGF5ZXIpXG4gICAgICAgIGlmIChwbGF5ZXIuaXNIdW1hbikge1xuICAgICAgICAgIHNwYXduQ2FyZHMocGxheWVyLmNhcmRzLCBcInNlYXRcIiArIChwbGF5ZXIuSUQpLnRvU3RyaW5nKCksIFwiY2FyZFwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy5wbGF5ZXJEaXNwbGF5KClcbiAgICB9XG5cbiAgICBpbml0aWFsaXplR2FtZSgpXG4gICAgdGhpcy5zdGFydEdhbWUoKVxuICB9XG5cbiAgLyoqXG4gICAqIHN0YXJ0R2FtZSAtIHJ1bnMgdGhlIGdhbWUgb24gYSBsb29wIHVudGlsIHNldCB0byBmYWxzZS5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIHN0YXJ0R2FtZSgpIHtcbiAgICBpZiAodGhpcy5ydW5uaW5nKSB7XG4gICAgICB0aGlzLnN0b3BHYW1lKClcbiAgICB9XG4gICAgdGhpcy5zaG91bGRTdGFydFJ1bm5pbmcgPSB0cnVlO1xuICAgIGxldCBnYW1lTG9vcFJlYWR5VG9TdGFydCA9IHNldEludGVydmFsKGFzeW5jICgpID0+IHtcbiAgICAgIGlmICghdGhpcy5ydW5uaW5nICYmIHRoaXMuc2hvdWxkU3RhcnRSdW5uaW5nKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoZ2FtZUxvb3BSZWFkeVRvU3RhcnQpO1xuICAgICAgICBhd2FpdCB0aGlzLmdhbWVMb29wKCk7XG4gICAgICB9XG4gICAgICBpZiAoIXRoaXMuc2hvdWxkU3RhcnRSdW5uaW5nKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoZ2FtZUxvb3BSZWFkeVRvU3RhcnQpO1xuICAgICAgfVxuICAgIH0sIDUwMClcbiAgfVxuXG4gIC8qKlxuICAgKiBzdG9wR2FtZSAtIHN0b3BzIHRoZSBnYW1lIGlmIGNhbGxlZC5cbiAgICpcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIHN0b3BHYW1lKCkge1xuICAgIHRoaXMuc2hvdWxkU3RvcFJ1bm5pbmcgPSB0cnVlO1xuICAgIHRoaXMuc2hvdWxkU3RhcnRSdW5uaW5nID0gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogYXN5bmMgZ2FtZUxvb3AgLSBMb29wcyB0aGUgZ2FtZSB3aGlsc3QgdHJ1ZSwgYXdhaXRzIHVudGlsIG5leHQgbG9vcCBiZWZvcmUgY29udGludWluZy5cbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZSA8Ym9vbGVhbj59ICByZXR1cm4gdHJ1ZSBvciBhIGZ1bmN0aW9uIHRvIHJ1biB0aGUgZ2FtZSBsb29wIGFnYWluIGlmIGZhbHNlLlxuICAgKi9cbiAgYXN5bmMgZ2FtZUxvb3AoKSB7XG4gICAgdGhpcy5ydW5uaW5nID0gdHJ1ZTtcbiAgICBpZiAodGhpcy5zaG91bGRTdG9wUnVubmluZykge1xuICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgICB0aGlzLnNob3VsZFN0b3BSdW5uaW5nID0gZmFsc2U7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChhd2FpdCB0aGlzLnNpbXVsYXRlUm91bmRzKCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5nYW1lTG9vcCgpOyAvLyBMb29wcyB0aGUgZ2FtZSBhZ2FpbiBpZiBmYWxzZVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIHBsYXllck5ld09yT2xkIC0gSGFuZGxlcyBKUXVlcnkgYW5kIGxvY2FsIHN0b3JhZ2UgZm9yIGlmIGEgcGxheWVyIGlzIG5ldyBvciBvbGQuXG4gKlxuICogQHJldHVybiB7UHJvbWlzZX0gYXdhaXRzIHByb21pc2UgcmVzb2x2ZS5cbiAqL1xuZnVuY3Rpb24gcGxheWVyTmV3T3JPbGQoKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICQoXCIjbmV3LXBsYXllclwiKS5jbGljayhfID0+IHtcbiAgICAgICAgJChcIi5tb2RhbC1wb3B1cFwiKS5jc3MoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XG4gICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UuY2xlYXIoKTtcbiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdudW1PZkdhbWVzJywgMCk7XG4gICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbnVtT2ZSb3VuZHMnLCAwKTtcbiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdyb3VuZHNXb24nLCAwKVxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2ZpdEFtb3VudCcsIDApO1xuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ251bU9mV2lucycsIDApO1xuICAgICAgICAkKFwiI2xlZnQtc2lkZWJhclwiKS5jaGlsZHJlbihcIi5wbGF5ZXItcmVjb3JkXCIpLmNoaWxkcmVuKFwiI2dhbWVzLXBsYXllZFwiKS50ZXh0KFwiR2FtZXMgcGxheWVkOiAwXCIpO1xuICAgICAgICAkKFwiI2xlZnQtc2lkZWJhclwiKS5jaGlsZHJlbihcIi5wbGF5ZXItcmVjb3JkXCIpLmNoaWxkcmVuKFwiI3JvdW5kcy1wbGF5ZWRcIikudGV4dChcIlJvdW5kcyBwbGF5ZWQ6IDBcIik7XG4gICAgICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjcm91bmRzLXdvblwiKS50ZXh0KFwiUm91bmRzIFdvbjogMFwiKTtcbiAgICAgICAgJChcIiNsZWZ0LXNpZGViYXJcIikuY2hpbGRyZW4oXCIucGxheWVyLXJlY29yZFwiKS5jaGlsZHJlbihcIiNnYW1lcy13b25cIikudGV4dChcIk51bWJlciBvZiBXaW5zOiAwXCIpO1xuICAgICAgICAkKFwiI2xlZnQtc2lkZWJhclwiKS5jaGlsZHJlbihcIi5wbGF5ZXItcmVjb3JkXCIpLmNoaWxkcmVuKFwiI3Byb2ZpdFwiKS50ZXh0KFwiVG90YWwgUHJvZml0OiAwXCIpO1xuICAgICAgICAkKFwiI2xlZnQtc2lkZWJhclwiKS5jaGlsZHJlbihcIi5wbGF5ZXItcmVjb3JkXCIpLmNoaWxkcmVuKFwiI3dpbi1yYXRlXCIpLnRleHQoXCJXaW4gUmF0ZTogMCVcIik7XG4gICAgICAgIHJlc29sdmUoKVxuICAgICAgfSk7XG5cbiAgICAgICQoXCIjcmV0dXJuaW5nLXBsYXllclwiKS5jbGljayhfID0+IHtcbiAgICAgICAgJChcIi5tb2RhbC1wb3B1cFwiKS5jc3MoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XG4gICAgICAgIHJlc29sdmUoKVxuICAgICAgfSk7XG5cbiAgfSk7XG59XG5cbnZhciB0aGVHYW1lO1xudmFyIGxhc3RHYW1lO1xuXG4vKipcbiAqIG5ld0dhbWUgLSBDcmVhdGVzIGEgbmV3IGdhbWUsIGFkZHMgcGxheWVycywgZGVhbHMgY2FyZHMgYW5kIHN0YXJ0cy9zdG9wcyB0aGUgZ2FtZS5cbiAqXG4gKiBAcGFyYW0gIHtudW1iZXJ9IHBsYXllckNvdW50ICAgYW1vdW50IG9mIHBsYXllcnMgdG8gYmUgYWRkZWQgdG8gdGhlIGdhbWUuXG4gKiBAcGFyYW0gIHtudW1iZXJ9IGluaXRpYWxDaGlwcyAgYW1vdW50IG9mIGNoaXBzIGdpdmVuIHRvIGVhY2ggcGxheWVyIHRvIHN0YXJ0IHdpdGguXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHBsYXllck5hbWUgICAgbmFtZSBvZiB0aGUgaHVtYW4gcGxheWVyLlxuICogQHBhcmFtICB7Ym9vbGVhbn0gY29udGludWVkR2FtZSB0cnVlL2ZhbHNlIGRlcGVuZGluZyBvbiBpZiBnYW1lIGlzIGNvbnRpbnVlZCBmcm9tIGJlZm9yZSBvciBhIG5ldyBnYW1lLlxuICogQHJldHVybiB7dm9pZH1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gbmV3R2FtZShwbGF5ZXJDb3VudCwgaW5pdGlhbENoaXBzLCBwbGF5ZXJOYW1lLCBjb250aW51ZWRHYW1lKSB7XG4gIGlmICghY29udGludWVkR2FtZSkge1xuICAgIGF3YWl0IHBsYXllck5ld09yT2xkKCkgLy8gYXdhaXRzIGlucHV0IGZyb20gdXNlciB2aWEgbW9kYWwgcG9wdXAgYm94XG4gIH0gZWxzZSB7XG4gICAgJChcIiNjb250cm9sc1wiKS5jaGlsZHJlbihcIi5jb250cm9sLWJ1dHRvblwiKS5hZGRDbGFzcyhcImluYWN0aXZlXCIpO1xuICAgICQoXCIubWVudS1idXR0b25cIikucmVtb3ZlQ2xhc3MoXCJvcGVuXCIpO1xuICAgICQoXCIuYnV0dG9uLWNvcHlcIikuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xuICAgICQoXCIjcG90XCIpLmNzcyhcInZpc2liaWxpdHlcIiwgXCJ2aXNpYmxlXCIpO1xuICB9XG5cbiAgbGV0IGdhbWUgPSBuZXcgR2FtZShwbGF5ZXJDb3VudCwgaW5pdGlhbENoaXBzKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwbGF5ZXJDb3VudDsgaSsrKSB7XG4gICAgaWYgKGkgPT09IDIpIHtcbiAgICAgIGdhbWUuYWRkUGxheWVyKGdhbWUuaHVtYW5QbGF5ZXIgPSBuZXcgSHVtYW5QbGF5ZXIoaSwgcGxheWVyTmFtZSwgaW5pdGlhbENoaXBzLCBnYW1lKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdhbWUuYWRkUGxheWVyKG5ldyBQbGF5ZXIoaSwgXCJQbGF5ZXIgXCIgKyBpLCBpbml0aWFsQ2hpcHMsIGdhbWUpKTtcbiAgICB9XG4gIH1cbiAgaWYgKHRoZUdhbWUpIHtcbiAgICBsYXN0R2FtZSA9IHRoZUdhbWU7XG4gICAgbGFzdEdhbWUuc3RvcEdhbWUoKTtcbiAgfVxuICB0aGVHYW1lID0gZ2FtZTtcbiAgdGhlR2FtZS5kZWFsQ2FyZHMoKTtcbiAgdGhlR2FtZS51cGRhdGVEaXNwbGF5KFwicmVzZXRcIik7XG4gIHRoZUdhbWUuZnJlc2hHYW1lKCk7XG4gIGNvbnN0IGluaXRpYWxpemVHYW1lID0gZnVuY3Rpb24gKCkge1xuICAgIGZvciAobGV0IHBsYXllciBvZiB0aGVHYW1lLnBsYXllckxpc3QpIHtcbiAgICAgIHRoZUdhbWUudXBkYXRlRGlzcGxheShwbGF5ZXIpO1xuICAgICAgaWYgKHBsYXllci5pc0h1bWFuKSB7XG4gICAgICAgIHNwYXduQ2FyZHMocGxheWVyLmNhcmRzLCBcInNlYXRcIiArIChwbGF5ZXIuSUQpLnRvU3RyaW5nKCksIFwiY2FyZFwiKTsgLy8gbWFrZXMgdGhlIHVzZXIncyBjYXJkcyB2aXNpYmxlXG4gICAgICB9XG4gICAgfVxuICAgIHRoZUdhbWUucGxheWVyRGlzcGxheSgpO1xuICB9XG5cbiAgaW5pdGlhbGl6ZUdhbWUoKTtcbiAgdGhlR2FtZS5zdGFydEdhbWUoKTtcbn1cblxuLyoqXG4gKiBzcGF3bkNhcmRzIC0gc3Bhd25zIGNhcmRzIHRvIG1ha2UgdGhlbSB2aXNpYmxlIGVpdGhlciB0byB0aGUgdGFibGUgb3IgcGxheWVyL3NcbiAqXG4gKiBAcGFyYW0gIHthcnJheX0gdGVtcExpc3QgICAgbGlzdCBvZiB0aGUgY2FyZHMgdG8gZGlzcGxheVxuICogQHBhcmFtICB7c3RyaW5nfSBpZFN0cmluZyAgIHNlYXQgaWQncyBvZiB0aGUgcGxheWVycyBvZiB3aGljaCB0byBkaXNwbGF5IGNhcmRzXG4gKiBAcGFyYW0gIHt0eXBlfSBjbGFzc1N0cmluZyBjbGFzcyBzdHJpbmcgb2YgdGhlIHBsYXllcnMgb2Ygd2hpY2ggdG8gZGlzcGxheSBjYXJkc1xuICogQHJldHVybiB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gc3Bhd25DYXJkcyh0ZW1wTGlzdCwgaWRTdHJpbmcsIGNsYXNzU3RyaW5nKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGVtcExpc3QubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgbm9kZS5zcmMgPSBcIi9jYXJkcy9cIiArIHRlbXBMaXN0W2ldLnRvVXBwZXJDYXNlKCkgKyBcIi5wbmdcIjtcbiAgICBub2RlLmFsdCA9IHRlbXBMaXN0W2ldLnRvVXBwZXJDYXNlKCk7XG4gICAgbGV0IGNsYXNzTmFtZTtcblxuICAgIGlmIChpZFN0cmluZy5pbmNsdWRlcyhcInNlYXRcIikpIHtcbiAgICAgIGNsYXNzTmFtZSA9IFwiLlwiICsgY2xhc3NTdHJpbmcgKyAoaSArIDEpLnRvU3RyaW5nKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNsYXNzTmFtZSA9IFwiLlwiICsgY2xhc3NTdHJpbmc7XG4gICAgfVxuICAgICQoXCIjXCIgKyBpZFN0cmluZykuY2hpbGRyZW4oY2xhc3NOYW1lKS5jaGlsZHJlbihcImltZ1wiKS5hdHRyKFwic3JjXCIsIG5vZGUuc3JjKS5hdHRyKFwiYWx0XCIsIG5vZGUuYWx0KTtcbiAgfVxufVxuXG4vKipcbiAqIGdldFJhbmRvbUludCAtIGdldHMgYSByYW5kb20gbnVtYmVyIGJldHdlZW4gbWluaW11bSBhbmQgbWF4aW11bVxuICpcbiAqIEBwYXJhbSAge251bWJlcn0gbWluIG1pbmltdW0gbnVtYmVyIHRvIGNyZWF0ZSBmcm9tXG4gKiBAcGFyYW0gIHtudW1iZXJ9IG1heCBtYXhpbXVtIG51bWJlciB0byBjcmVhdGUgdG9cbiAqIEByZXR1cm4ge251bWJlcn0gICAgIHJldHVybnMgdGhlIHJhbmRvbSBudW1iZXJcbiAqL1xuZnVuY3Rpb24gZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7XG4gIG1pbiA9IE1hdGguY2VpbChtaW4pO1xuICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47XG59XG5cblxuLyoqXG4gKiBKUXVlcnkgZnVuY3Rpb24gLSBKUXVlcnkgc2NyaXB0cyBmb3IgYnV0dG9ucyBvbiBtZW51XG4gKlxuICogQHJldHVybiB7dm9pZH1cbiAqL1xuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuICAkKFwiI3BsYXluZXdnYW1lXCIpLmNsaWNrKF8gPT4geyAvLyBzdGFydHMgYSBuZXcgZ2FtZSBpZiBjbGlja2VkXG4gICAgbGV0IGNvbnRpbnVlZEdhbWUgPSB0cnVlO1xuICAgIG5ld0dhbWUoXG4gICAgICBOdW1iZXIoJChcIiNwbGF5ZXJDb3VudFwiKS52YWwoKSksXG4gICAgICBOdW1iZXIoJChcIiNpbml0aWFsQ2hpcHNcIikudmFsKCkpLFxuICAgICAgJChcIiNwbGF5ZXJOYW1lXCIpLnZhbCgpLFxuICAgICAgY29udGludWVkR2FtZSlcbiAgfSk7XG5cbiAgJChcIi5idXR0b24tY29weVwiKS5jbGljayhfID0+IHsgLy8gb3BlbnMgdGhlIHBsYXkgbWVudVxuICAgICQoXCIubWVudS1idXR0b25cIikuYWRkQ2xhc3MoJ29wZW4nKTtcbiAgICAkKFwiLmJ1dHRvbi1jb3B5XCIpLmNzcygnZGlzcGxheScsICdub25lJyk7XG4gIH0pO1xuXG4gICQoXCIuc3VibWl0LWJ1dHRvblwiKS5jbGljayhfID0+IHsgLy8gY2xvc2VzIHRoZSBwbGF5IG1lbnVcbiAgICAkKFwiLm1lbnUtYnV0dG9uXCIpLnJlbW92ZUNsYXNzKCdvcGVuJyk7XG4gICAgJChcIi5idXR0b24tY29weVwiKS5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcbiAgfSk7XG5cbiAgJChcIi5jYW5jZWxcIikuY2xpY2soXyA9PiB7IC8vIGNsb3NlcyB0aGUgcGxheSBtZW51XG4gICAgJChcIi5tZW51LWJ1dHRvblwiKS5yZW1vdmVDbGFzcygnb3BlbicpO1xuICAgICQoXCIuYnV0dG9uLWNvcHlcIikuY3NzKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gIH0pO1xuXG4gICQoXCIjZW5kZ2FtZVwiKS5jbGljayhfID0+IHsgLy8gZW5kcyB0aGUgZ2FtZSBhbmQgcmVtb3ZlcyBhbGwgdmlzaWJsZSBlbGVtZW50cyBvZiB0aGUgZ2FtZVxuICAgIHRoZUdhbWUudXBkYXRlRGlzcGxheShcInJlc2V0XCIpO1xuICAgIHRoZUdhbWUgPSAwO1xuICAgIHRoaXMucGxheWVyTGlzdCA9IFtdO1xuICAgIHRoaXMucm91bmQgPSAwO1xuICAgIHRoaXMudHVybiA9IDA7XG4gICAgdGhpcy5wb3QgPSBbMF07XG4gICAgdGhpcy5hY3RpdmVQb3QgPSAwO1xuICAgIHRoaXMuZGlkU29tZW9uZUFsbEluID0gZmFsc2U7XG4gICAgdGhpcy5jYXJkcyA9IFtdO1xuICAgIHRoaXMuaHVtYW5QbGF5ZXI7XG4gICAgdGhpcy5wbGF5ZXJUdXJuID0gW107XG4gICAgdGhpcy5zdWJSb3VuZCA9IDA7XG4gICAgdGhpcy5zdWJSb3VuZFN0YXR1cyA9IFwiYWN0aXZlXCI7XG4gICAgdGhpcy5wbGF5ZXJGaXJzdFNpZGVwb3QgPSAtMTtcbiAgICB0aGlzLnJhaXNlQW1vdW50cyA9IFt7cG90OiAwLCByYWlzZUFtb3VudDogMCwgZGVidGFtb3VudDogLTF9XVxuICB9KTtcblxuICAkKFwiI2NsZWFyXCIpLmNsaWNrKF8gPT4geyAvLyBjbGVhcnMgdGhlIHN0b3JlZCB1c2VyIGRhdGFcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdudW1PZkdhbWVzJywgMCk7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdudW1PZlJvdW5kcycsIDApO1xuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncm91bmRzV29uJywgMCk7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwcm9maXRBbW91bnQnLCAwKTtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ251bU9mV2lucycsIDApO1xuICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjZ2FtZXMtcGxheWVkXCIpLnRleHQoXCJHYW1lcyBwbGF5ZWQ6IDBcIik7XG4gICAgJChcIiNsZWZ0LXNpZGViYXJcIikuY2hpbGRyZW4oXCIucGxheWVyLXJlY29yZFwiKS5jaGlsZHJlbihcIiNyb3VuZHMtcGxheWVkXCIpLnRleHQoXCJSb3VuZHMgcGxheWVkOiAwXCIpO1xuICAgICQoXCIjbGVmdC1zaWRlYmFyXCIpLmNoaWxkcmVuKFwiLnBsYXllci1yZWNvcmRcIikuY2hpbGRyZW4oXCIjcm91bmRzLXdvblwiKS50ZXh0KFwiUm91bmRzIFdvbjogMFwiKTtcbiAgICAkKFwiI2xlZnQtc2lkZWJhclwiKS5jaGlsZHJlbihcIi5wbGF5ZXItcmVjb3JkXCIpLmNoaWxkcmVuKFwiI2dhbWVzLXdvblwiKS50ZXh0KFwiTnVtYmVyIG9mIFdpbnM6IDBcIik7XG4gICAgJChcIiNsZWZ0LXNpZGViYXJcIikuY2hpbGRyZW4oXCIucGxheWVyLXJlY29yZFwiKS5jaGlsZHJlbihcIiNwcm9maXRcIikudGV4dChcIlRvdGFsIFByb2ZpdDogMFwiKTtcbiAgICAkKFwiI2xlZnQtc2lkZWJhclwiKS5jaGlsZHJlbihcIi5wbGF5ZXItcmVjb3JkXCIpLmNoaWxkcmVuKFwiI3dpbi1yYXRlXCIpLnRleHQoXCJXaW4gUmF0ZTogMCVcIik7XG4gIH0pO1xuXG4gIC8vIFNjcmlwdCBmb3IgcG9rZXIgaGFuZHMgcG9wdXAgYW5kIGNsb3NlIGJ1dHRvbnNcbiAgbGV0IG1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbC1wb3B1cFwiKTtcbiAgJChcIiNwb2tlci1oYW5kcy1idXR0b25cIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICQoJyNtb2RhbC1wb3B1cCcpLnRvZ2dsZSgpO1xuICB9KTtcbiAgbGV0IHNwYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2xvc2VcIilbMF07XG4gIHNwYW4ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH1cbiAgbmV3R2FtZSg4LCAxMDAwLCBcInlvdVwiKTtcbn0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gSW1wb3J0c1xudmFyIGdldFVybCA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fMF9fXyA9IGdldFVybChyZXF1aXJlKFwiLi9pbWFnZXMvdGFibGUucG5nXCIpKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlLWluLW91dDtcXG59XFxuXFxuYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFxcXCJTZWdvZSBVSVxcXCIsIFxcXCJSb2JvdG9cXFwiLCBcXFwiT3h5Z2VuXFxcIiwgXFxcIlVidW50dVxcXCIsIFxcXCJDYW50YXJlbGxcXFwiLCBcXFwiRmlyYSBTYW5zXFxcIiwgXFxcIkRyb2lkIFNhbnNcXFwiLCBcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLCBzYW5zLXNlcmlmO1xcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xcbiAgYmFja2dyb3VuZDogIzFkMWQxZTtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbn1cXG5cXG5ib2R5IC5jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuXFxuLndyYXBwZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIHBhZGRpbmctdG9wOiAyNXB4O1xcbn1cXG5cXG4uaGVhZGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWluLXdpZHRoOiA4MDBweDtcXG4gIG1pbi1oZWlnaHQ6IDY1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTMxMzEzO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XFxufVxcblxcbiNuYXZiYXIge1xcbiAgZGlzcGxheTogaW5pdGlhbDtcXG4gIHdpZHRoOiA4MDBweDtcXG4gIG1pbi1oZWlnaHQ6IDUwcHg7XFxuICBtYXgtaGVpZ2h0OiA1MHB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbGV0dGVyLXNwYWNpbmc6IDAuNXB4O1xcbiAgcGFkZGluZy10b3A6IDBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM4ZDAzMDE7XFxuICBib3JkZXItcmFkaXVzOiAxNnB4O1xcbiAgcGxhY2UtY29udGVudDogY2VudGVyO1xcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XFxuICBwYWRkaW5nLXRvcDogMTBweDtcXG59XFxuXFxuLyogQWxsIHBhcnRzIG9mIHRoZSBtYWluIHRhYmxlIGFuZCBhcmVhLCBpbmNsdWRpbmcgcGxheWVyIHNlYXRzLCBjYXJkcywgZXRjLiAqL1xcbi5tYWluIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XFxufVxcbi5jb250ZW50IHtcXG4gIHdpZHRoOiA4MDBweDtcXG4gIG1pbi13aWR0aDogODAwcHg7XFxuICBtaW4taGVpZ2h0OiA0MDBweDtcXG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfX18wX19fICsgXCIpO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0bztcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gIG1hcmdpbi1sZWZ0OiA5JTtcXG4gIG1hcmdpbi1yaWdodDogOSU7XFxufVxcbi5jb250ZW50IC5jb250ZW50LWlubmVyIHtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgd2lkdGg6IDgwMHB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG4uY29udGVudCAuY29udGVudC1pbm5lciAucGxheWVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAxMTBweDtcXG4gIGJvcmRlcjogI2UyZTJlMiByaWRnZTtcXG4gIGJvcmRlci13aWR0aDogMXB4O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG4uY29udGVudCAuY29udGVudC1pbm5lciAucGxheWVyIGltZyB7XFxuICB3aWR0aDogNDVweDtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uY29udGVudCAuY29udGVudC1pbm5lciAudGFibGVjYXJkIGltZyB7XFxuICB3aWR0aDogNDVweDtcXG4gIGZsb2F0OiBsZWZ0O1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG4jc2VhdDAge1xcbiAgdG9wOiAycHg7XFxuICBsZWZ0OiA2MzdweDtcXG4gIHdpZHRoOiAyMTBweDtcXG59XFxuI3NlYXQxIHtcXG4gIHRvcDogMTYwcHg7XFxuICBsZWZ0OiA3MTBweDtcXG4gIHdpZHRoOiAyMTBweDtcXG59XFxuI3NlYXQyIHtcXG4gIHRvcDogMzEwcHg7XFxuICBsZWZ0OiA2MzVweDtcXG4gIGJvcmRlcjogIzAwNzFhNSByaWRnZTtcXG4gIGJvcmRlci13aWR0aDogM3B4O1xcbn1cXG4jc2VhdDMge1xcbiAgdG9wOiAzMjBweDtcXG4gIGxlZnQ6IDQyNXB4O1xcbn1cXG4jc2VhdDQge1xcbiAgdG9wOiAzMjBweDtcXG4gIGxlZnQ6IDI4MHB4O1xcbn1cXG4jc2VhdDUge1xcbiAgdG9wOiAzMTBweDtcXG4gIGxlZnQ6IDc4cHg7XFxufVxcbiNzZWF0NiB7XFxuICB0b3A6IDE2MHB4O1xcbiAgbGVmdDogLTExNnB4O1xcbiAgd2lkdGg6IDIxMHB4O1xcbn1cXG4jc2VhdDcge1xcbiAgdG9wOiA3cHg7XFxuICBsZWZ0OiAtNTFweDtcXG4gIHdpZHRoOiAyMTBweDtcXG59XFxuI3BvdCB7XFxuICB0b3A6IDEyNXB4O1xcbiAgbGVmdDogMzUwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxufVxcbiNib2FyZCB7XFxuICB0b3A6IDYwcHg7XFxuICBsZWZ0OiAyODVweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAyMjVweDtcXG59XFxuI2NhcmRkZWNrIHtcXG4gIHRvcDogLThweDtcXG4gIGxlZnQ6IDM0NnB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG4jY2FyZGRlY2sgaW1nIHtcXG4gIHdpZHRoOiAxMDBweDtcXG4gIGhlaWdodDogODhweDtcXG59XFxuLyogU2hvd3MgdGhlIGFjdGl2ZSBwbGF5ZXIgYW5kIHdpbm5lciAqL1xcbi5hY3RpdmUge1xcbiAgYm9yZGVyOiAjZTAwMDAwIHJpZGdlICFpbXBvcnRhbnQ7XFxufVxcbi53aW5uZXIge1xcbiAgYm9yZGVyOiAjRkJEQjBGIHJpZGdlIDRweCAhaW1wb3J0YW50O1xcbn1cXG5cXG4uZm9vdGVyIHtcXG4gIHdpZHRoOiA4MDBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM4ZDAzMDE7XFxuICBib3JkZXItcmFkaXVzOiAxNnB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBvc2l0aW9uOiBzdGlja3k7XFxuICBib3R0b206IDA7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLyogU2lkZWJhcnMgYW5kIGNvbnRlbnQgKi9cXG4uc2lkZWJhciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XFxufVxcbiNsZWZ0LXNpZGViYXIge1xcbiAgYm9yZGVyOiB3aGl0ZSByaWRnZTtcXG4gIGJvcmRlci13aWR0aDogM3B4IDNweCAzcHggMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMHB4IDdweCA3cHggMHB4O1xcbn1cXG4ucGxheWVyLXJlY29yZCB7XFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcbn1cXG4jcmlnaHQtc2lkZWJhciB7XFxuICBib3JkZXI6IHdoaXRlIHJpZGdlO1xcbiAgYm9yZGVyLXdpZHRoOiAzcHggMHB4IDNweCAzcHg7XFxuICBib3JkZXItcmFkaXVzOiA3cHggMHB4IDBweCA3cHg7XFxufVxcbiNjYXJkLWV2YWx1YXRpb24ge1xcbiAgdGV4dC1hbGlnbjogbGVmdDtcXG59XFxuXFxuLyogUG9rZXIgSGFuZHMgcG9wdXAgLyBtb2RhbCAqL1xcbiNwb2tlci1oYW5kcyB7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBtYXJnaW4tdG9wOiA0cHg7XFxuICB0cmFuc2l0aW9uOiAwLjNzO1xcbn1cXG4ubW9kYWwge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjgpO1xcbn1cXG4ubW9kYWwtY29udGVudCB7XFxuICBtYXJnaW46IGF1dG87XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiA4MCU7XFxuICBtYXgtd2lkdGg6IDc1JTtcXG59XFxuI2NhcHRpb24ge1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB3aWR0aDogODAlO1xcbiAgbWF4LXdpZHRoOiA3MDBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGNvbG9yOiAjY2NjO1xcbiAgcGFkZGluZzogMTBweCAwO1xcbn1cXG4ubW9kYWwtY29udGVudCwgI2NhcHRpb24ge1xcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogem9vbTtcXG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjZzO1xcbiAgYW5pbWF0aW9uLW5hbWU6IHpvb207XFxuICBhbmltYXRpb24tZHVyYXRpb246IDAuNnM7XFxufVxcbmRpdiNwb2tlci1oYW5kcy1idXR0b24ge1xcbiAgICBwb3NpdGlvbjogaW5oZXJpdDtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxufVxcbkAtd2Via2l0LWtleWZyYW1lcyB6b29tIHtcXG4gIGZyb20gey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApfVxcbiAgdG8gey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpfVxcbn1cXG5Aa2V5ZnJhbWVzIHpvb20ge1xcbiAgZnJvbSB7dHJhbnNmb3JtOnNjYWxlKDApfVxcbiAgdG8ge3RyYW5zZm9ybTpzY2FsZSgxKX1cXG59XFxuLmNsb3NlIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHJpZ2h0OiAtNDAlO1xcbiAgY29sb3I6ICNmMWYxZjE7XFxuICBmb250LXNpemU6IDQwcHg7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIHRyYW5zaXRpb246IDAuM3M7XFxufVxcbi5jbG9zZTpob3ZlciwgLmNsb3NlOmZvY3VzIHtcXG4gIGNvbG9yOiAjYmJiO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcwMHB4KXtcXG4gIC5tb2RhbC1jb250ZW50IHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxufVxcbi5tb2RhbC1wb3B1cCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkFGQUZBO1xcbiAgcGFkZGluZzogMTVweCAyMHB4O1xcbiAgY29sb3I6IGJsYWNrO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgd2lkdGg6IDMyMHB4O1xcbiAgaGVpZ2h0OiAxMDBweDtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG4gIHotaW5kZXg6IDI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDMzJTtcXG4gIGxlZnQ6IDM5JTtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuI25ldy1wbGF5ZXIge1xcbiAgZmxvYXQ6IGxlZnQ7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiA5MHB4O1xcbiAgbWFyZ2luLXRvcDogMmVtO1xcbn1cXG4jcmV0dXJuaW5nLXBsYXllciB7XFxuICBmbG9hdDogcmlnaHQ7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiA5MHB4O1xcbiAgbWFyZ2luLXRvcDogMmVtO1xcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XFxufVxcblxcbi8qIENoYW5nZXMgcGxheWVycyBicmlnaHRuZXNzIHdoZW4gZm9sZGVkICovXFxuLmZvbGRlZCB7XFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMC41KTtcXG59XFxuXFxuLyogVXNlciBjb250cm9scyAmIGJ1dHRvbnMgKi9cXG4jY29udHJvbHMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHBhZGRpbmctYm90dG9tOiAyNXB4O1xcbn1cXG4uY29udHJvbC1idXR0b24ge1xcbiAgcGFkZGluZy1yaWdodDogMTNweDtcXG4gIHBhZGRpbmctbGVmdDogMTNweDtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZDMTQ1O1xcbiAgaGVpZ2h0OiAyNXB4O1xcbiAgd2lkdGg6IDcwcHg7XFxuICBib3JkZXItcmFkaXVzOiA3MnB4O1xcbiAgYm94LXNoYWRvdzogMCA0cHggMTZweCAwIHJnYmEoMCwgMCwgMCwgMC4wNyk7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBsaW5lLWhlaWdodDogMjRweDtcXG4gIGNvbG9yOiAjZjdmN2Y3O1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcbi5pbmFjdGl2ZSB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDBjYmMyO1xcbn1cXG4uaW5hY3RpdmUgaW5wdXQge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4vKiBNZW51IHBvcHVwIGFuZCBidXR0b24gKi9cXG4ubWVudS1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4ubWVudS1idXR0b24ge1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkMxNDU7XFxuICBoZWlnaHQ6IDQ1cHg7XFxuICB3aWR0aDogMTI1cHg7XFxuICBib3JkZXItcmFkaXVzOiA3MnB4O1xcbiAgYm94LXNoYWRvdzogMCA0cHggMTZweCAwIHJnYmEoMCwgMCwgMCwgMC4wNyk7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5tZW51LWJ1dHRvbi5vcGVuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUZBRkE7XFxuICBwYWRkaW5nOiAxOHB4IDMycHg7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICB3aWR0aDogNDIwcHg7XFxuICBoZWlnaHQ6IDIzM3B4O1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgei1pbmRleDogMjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMTIuNSU7XFxufVxcbi5tZW51LWJ1dHRvbi5vcGVuIGZvcm0ge1xcbiAgb3BhY2l0eTogMTtcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xcyBlYXNlO1xcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4zcztcXG4gIGhlaWdodDogYXV0bztcXG59XFxuLm1lbnUtYnV0dG9uIC5idXR0b24tY29weSB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBsaW5lLWhlaWdodDogNDVweDtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIGNvbG9yOiAjZjdmN2Y3O1xcbn1cXG4ubWVudS1idXR0b24gZm9ybSB7XFxuICB0cmFuc2l0aW9uOiBub25lO1xcbiAgb3BhY2l0eTogMDtcXG4gIGhlaWdodDogMDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcbi5tZW51LWJ1dHRvbiAuY2FuY2VsIHtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbi10b3A6IDFlbTtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuLm1lbnUtYnV0dG9uIC5jYW5jZWwgc3BhbiB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5tZW51LWJ1dHRvbiAuY2FuY2VsIHNwYW46aG92ZXIge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxufVxcbi5tZW51LWJ1dHRvbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBhYTNkO1xcbn1cXG4ubWVudS1idXR0b24ub3Blbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbn1cXG5cXG4vKiBBbGwgYnV0dG9ucyAqL1xcbi5idXR0b24ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OERCO1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIGZvbnQtc2l6ZTogMC44NzVlbTtcXG4gIGxpbmUtaGVpZ2h0OiAyLjZlbTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBwYWRkaW5nOiAwIDM0cHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG59XFxuQG1lZGlhKG1heC13aWR0aDogMTQxNXB4KSB7XFxuICAuYnV0dG9uIHtcXG4gICAgbGluZS1oZWlnaHQ6IDE5cHg7XFxuICB9XFxufVxcbi5idXR0b24gaW1nIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRvcDogM3B4O1xcbiAgcmlnaHQ6IDZweDtcXG59XFxuLmJ1dHRvbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE3ZGJiO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4vKiBFbmQgZ2FtZSBidXR0b24gKi9cXG4uZW5kLWJ1dHRvbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDk4REI7XFxuICBoZWlnaHQ6IDQ1cHg7XFxuICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDQ1cHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBjb2xvcjogI2ZmZjtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICBmb250LXNpemU6IDAuODc1ZW07XFxuICBib3JkZXI6IG5vbmU7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgcGFkZGluZzogMCAzNHB4O1xcbn1cXG4uZW5kLWJ1dHRvbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE3ZGJiO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4vKiBQbGF5IGJ1dHRvbiBmb3JtICovXFxuZm9ybSAqIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcbi5tZW51LWNvbnRhaW5lciBsYWJlbCB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxufVxcbi5mb3JtLS1maWVsZCB7XFxuICB3aWR0aDogNDIwcHg7XFxuICBtYXJnaW46IDEwcHggMDtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuLmZvcm0tLWZpZWxkLi1zaG9ydCB7XFxuICB3aWR0aDogMTIwcHg7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcbi5mb3JtLS1wcmljZSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsaW5lLWhlaWdodDogMzhweDtcXG4gIHdpZHRoOiAxNnB4O1xcbiAgY29sb3I6ICNDN0M3Qzc7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5mb3JtLS1wcmljZSArIGlucHV0IHtcXG4gIHBhZGRpbmctbGVmdDogMTRweDtcXG59XFxuLmZvcm0tLWNvbnRhaW5lciB7XFxuICB3aWR0aDogNDIwcHg7XFxufVxcbi5mb3JtLS1jb250YWluZXIuLWlubGluZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIG1hcmdpbi1ib3R0b206IC0xMnB4O1xcbn1cXG4uZm9ybS0tZWxlbWVudCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI0VDRUNFQztcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbiAgcGFkZGluZzogMCA0cHg7XFxuICBjb2xvcjogIzNEM0QzRDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWFyZ2luOiA0cHggMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XFxufVxcbi5mb3JtLS1lbGVtZW50OmZvY3VzIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNGRkMxNDU7XFxuICBib3JkZXItcmFkaXVzOiAycHg7XFxufVxcbi5mb3JtLS1lbGVtZW50Om5vdCgudGV4dGFyZWEpIHtcXG4gIGhlaWdodDogMzBweDtcXG59XFxuLmZvcm0tLWVsZW1lbnQudGV4dGFyZWEge1xcbiAgaGVpZ2h0OiA4MHB4O1xcbiAgcmVzaXplOiBub25lO1xcbn1cXG5cXG4vKiBTdHJlbmd0aCBNZXRlciAqL1xcbiNzdHJlbmd0aC1tZXRlci1jb250YWluZXIge1xcbiAgYmFja2dyb3VuZDogZ2FpbnNib3JvO1xcbiAgaGVpZ2h0OiAyLjVlbTtcXG4gIHBhZGRpbmc6IDAuNWVtO1xcbiAgbWFyZ2luLXRvcDogMC41ZW07XFxuICBtYXJnaW4tYm90dG9tOiAwLjJlbTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRvcDogMjBweDtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBib3gtc2hhZG93OiAwIDAgMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjc1KSBpbnNldCwgMCAwIDRweCAwIHJnYmEoMCwgMCwgMCwgMC41KTtcXG59XFxuI3N0cmVuZ3RoLW1ldGVyLWNvbnRhaW5lciAjc3RyZW5ndGgtbWV0ZXIge1xcbiAgYmFja2dyb3VuZDogIzAwMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjE1KSBpbnNldCwgMCAwIDFweCAzcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KSBpbnNldDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbn1cXG4jc3RyZW5ndGgtbWV0ZXItY29udGFpbmVyICNzdHJlbmd0aC1tZXRlcjpiZWZvcmUge1xcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJveC1zaGFkb3c6IDAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMykgaW5zZXQsIDAgMCA1cHggMnB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KSBpbnNldDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHotaW5kZXg6IDM7XFxufVxcbiNzdHJlbmd0aC1tZXRlci1jb250YWluZXIgI3N0cmVuZ3RoLW1ldGVyOmFmdGVyIHtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDJweDtcXG4gIHdpZHRoOiA5NiU7XFxuICBsZWZ0OiA1MCU7XFxuICBtYXJnaW4tbGVmdDogLTQ4JTtcXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICBoZWlnaHQ6IDEwcHg7XFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODUpIDMwJSwgdHJhbnNwYXJlbnQgMTIwJSk7XFxufVxcbiNzdHJlbmd0aC1tZXRlci1jb250YWluZXIgI3N0cmVuZ3RoLW1ldGVyICNiYWNrZ3JvdW5kIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtOTBkZWcsICMwNmUyMjEsIHllbGxvdywgcmVkKTtcXG4gIC13ZWJraXQtY2xpcC1wYXRoOiBpbnNldCgwIDEwMCUgMCAwKTtcXG4gIGNsaXAtcGF0aDogaW5zZXQoMCAxMDAlIDAgMCk7XFxuICB0cmFuc2l0aW9uOiBhbGwgM3M7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAzcztcXG4gIHotaW5kZXg6IC0xMDtcXG59XFxuXCIsIFwiXCJdKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=
